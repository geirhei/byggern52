
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800200  000008e4  00000978  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800286  00800286  000009fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009fe  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000a5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000af5  00000000  00000000  00000b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000513  00000000  00000000  0000163f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006d9  00000000  00000000  00001b52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001fc  00000000  00000000  0000222c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002fb  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004fc  00000000  00000000  00002723  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00002c1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ee       	ldi	r30, 0xE4	; 228
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 38       	cpi	r26, 0x86	; 134
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e8       	ldi	r26, 0x86	; 134
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 38       	cpi	r26, 0x8C	; 140
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	81 d0       	rcall	.+258    	; 0x222 <main>
 120:	df c3       	rjmp	.+1982   	; 0x8e0 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_message_receive>:
	/* Request to send contents of TXB0 */
	MCP_request_to_send(MCP_RTS_TX0);
}

can_message_t CAN_message_receive(void)
{
 124:	9f 92       	push	r9
 126:	af 92       	push	r10
 128:	bf 92       	push	r11
 12a:	cf 92       	push	r12
 12c:	df 92       	push	r13
 12e:	ef 92       	push	r14
 130:	ff 92       	push	r15
 132:	0f 93       	push	r16
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
 13e:	2b 97       	sbiw	r28, 0x0b	; 11
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	f8 94       	cli
 144:	de bf       	out	0x3e, r29	; 62
 146:	0f be       	out	0x3f, r0	; 63
 148:	cd bf       	out	0x3d, r28	; 61
 14a:	7c 01       	movw	r14, r24
	/* Only RXB0 is used */
	
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
 14c:	82 e6       	ldi	r24, 0x62	; 98
 14e:	40 d0       	rcall	.+128    	; 0x1d0 <MCP_read>
	message.id = (buffer >> 5);
 150:	82 95       	swap	r24
 152:	86 95       	lsr	r24
 154:	87 70       	andi	r24, 0x07	; 7
 156:	c8 2e       	mov	r12, r24
 158:	d1 2c       	mov	r13, r1
	buffer = MCP_read(MCP_RXB0CTRL + 5);
 15a:	85 e6       	ldi	r24, 0x65	; 101
 15c:	39 d0       	rcall	.+114    	; 0x1d0 <MCP_read>
	message.length = (buffer & 0x0F);
 15e:	8f 70       	andi	r24, 0x0F	; 15
 160:	98 2e       	mov	r9, r24
	for (uint8_t i = 0; i < message.length; i++) {
 162:	a1 f0       	breq	.+40     	; 0x18c <CAN_message_receive+0x68>
 164:	8e 01       	movw	r16, r28
 166:	0c 5f       	subi	r16, 0xFC	; 252
 168:	1f 4f       	sbci	r17, 0xFF	; 255
 16a:	0f 2e       	mov	r0, r31
 16c:	f6 e6       	ldi	r31, 0x66	; 102
 16e:	af 2e       	mov	r10, r31
 170:	f0 2d       	mov	r31, r0
 172:	a8 0e       	add	r10, r24
 174:	0f 2e       	mov	r0, r31
 176:	f6 e6       	ldi	r31, 0x66	; 102
 178:	bf 2e       	mov	r11, r31
 17a:	f0 2d       	mov	r31, r0
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
 17c:	8b 2d       	mov	r24, r11
 17e:	28 d0       	rcall	.+80     	; 0x1d0 <MCP_read>
 180:	f8 01       	movw	r30, r16
 182:	81 93       	st	Z+, r24
 184:	8f 01       	movw	r16, r30
 186:	b3 94       	inc	r11
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
	message.id = (buffer >> 5);
	buffer = MCP_read(MCP_RXB0CTRL + 5);
	message.length = (buffer & 0x0F);
	for (uint8_t i = 0; i < message.length; i++) {
 188:	ba 10       	cpse	r11, r10
 18a:	f8 cf       	rjmp	.-16     	; 0x17c <CAN_message_receive+0x58>
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
	}
	
	/* Clear CANINTF.RX0IF */
	MCP_modify_bit(MCP_CANINTF, 0x01, 0x00);
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	61 e0       	ldi	r22, 0x01	; 1
 190:	8c e2       	ldi	r24, 0x2C	; 44
 192:	33 d0       	rcall	.+102    	; 0x1fa <MCP_modify_bit>
	
	return message;
 194:	da 82       	std	Y+2, r13	; 0x02
 196:	c9 82       	std	Y+1, r12	; 0x01
 198:	9b 82       	std	Y+3, r9	; 0x03
 19a:	8b e0       	ldi	r24, 0x0B	; 11
 19c:	fe 01       	movw	r30, r28
 19e:	31 96       	adiw	r30, 0x01	; 1
 1a0:	d7 01       	movw	r26, r14
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <CAN_message_receive+0x7e>
}
 1aa:	c7 01       	movw	r24, r14
 1ac:	2b 96       	adiw	r28, 0x0b	; 11
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	ff 90       	pop	r15
 1c2:	ef 90       	pop	r14
 1c4:	df 90       	pop	r13
 1c6:	cf 90       	pop	r12
 1c8:	bf 90       	pop	r11
 1ca:	af 90       	pop	r10
 1cc:	9f 90       	pop	r9
 1ce:	08 95       	ret

000001d0 <MCP_read>:
	SPI_master_transmit(MCP_RX_STATUS);
	//SPI_master_transmit(0x00); // Unneccessary because of "repeat data out"?
	char status = SPDR;
	PORTB |= (1 << PB0);
	return status;
}
 1d0:	cf 93       	push	r28
 1d2:	c8 2f       	mov	r28, r24
 1d4:	28 98       	cbi	0x05, 0	; 5
 1d6:	83 e0       	ldi	r24, 0x03	; 3
 1d8:	ac d0       	rcall	.+344    	; 0x332 <SPI_master_transmit>
 1da:	8c 2f       	mov	r24, r28
 1dc:	aa d0       	rcall	.+340    	; 0x332 <SPI_master_transmit>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	a8 d0       	rcall	.+336    	; 0x332 <SPI_master_transmit>
 1e2:	8e b5       	in	r24, 0x2e	; 46
 1e4:	28 9a       	sbi	0x05, 0	; 5
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <MCP_read_status>:
 1ea:	28 98       	cbi	0x05, 0	; 5
 1ec:	80 ea       	ldi	r24, 0xA0	; 160
 1ee:	a1 d0       	rcall	.+322    	; 0x332 <SPI_master_transmit>
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	9f d0       	rcall	.+318    	; 0x332 <SPI_master_transmit>
 1f4:	8e b5       	in	r24, 0x2e	; 46
 1f6:	28 9a       	sbi	0x05, 0	; 5
 1f8:	08 95       	ret

000001fa <MCP_modify_bit>:
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
}

/* Changes the value of the register bits specified by the mask */
void MCP_modify_bit(uint8_t addr, uint8_t mask, uint8_t data)
{
 1fa:	1f 93       	push	r17
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	18 2f       	mov	r17, r24
 202:	d6 2f       	mov	r29, r22
 204:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB0);
 206:	28 98       	cbi	0x05, 0	; 5
	SPI_master_transmit(MCP_BITMOD);
 208:	85 e0       	ldi	r24, 0x05	; 5
 20a:	93 d0       	rcall	.+294    	; 0x332 <SPI_master_transmit>
	SPI_master_transmit(addr);
 20c:	81 2f       	mov	r24, r17
 20e:	91 d0       	rcall	.+290    	; 0x332 <SPI_master_transmit>
	SPI_master_transmit(mask);
 210:	8d 2f       	mov	r24, r29
 212:	8f d0       	rcall	.+286    	; 0x332 <SPI_master_transmit>
	SPI_master_transmit(data);
 214:	8c 2f       	mov	r24, r28
 216:	8d d0       	rcall	.+282    	; 0x332 <SPI_master_transmit>
	PORTB |= (1 << PB0);
 218:	28 9a       	sbi	0x05, 0	; 5
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	1f 91       	pop	r17
 220:	08 95       	ret

00000222 <main>:

#include "usart_2.h"
#include "can.h"

int main(void)
{
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	2b 97       	sbiw	r28, 0x0b	; 11
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
		
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		status = MCP_read_status();
		printf("Status: %02x\n", status);
 236:	00 e0       	ldi	r16, 0x00	; 0
 238:	12 e0       	ldi	r17, 0x02	; 2
		msg_arrived = (status & 1);
		if (msg_arrived) {
			received_message = CAN_message_receive();
			printf("ID: %02x\n", received_message.id);
 23a:	0f 2e       	mov	r0, r31
 23c:	fe e0       	ldi	r31, 0x0E	; 14
 23e:	8f 2e       	mov	r8, r31
 240:	f2 e0       	ldi	r31, 0x02	; 2
 242:	9f 2e       	mov	r9, r31
 244:	f0 2d       	mov	r31, r0
			printf("length: %02x\n", received_message.length);
 246:	0f 2e       	mov	r0, r31
 248:	f8 e1       	ldi	r31, 0x18	; 24
 24a:	af 2e       	mov	r10, r31
 24c:	f2 e0       	ldi	r31, 0x02	; 2
 24e:	bf 2e       	mov	r11, r31
 250:	f0 2d       	mov	r31, r0
			printf("Message type: %s\n", received_message.data[0]);
 252:	0f 2e       	mov	r0, r31
 254:	f6 e2       	ldi	r31, 0x26	; 38
 256:	cf 2e       	mov	r12, r31
 258:	f2 e0       	ldi	r31, 0x02	; 2
 25a:	df 2e       	mov	r13, r31
 25c:	f0 2d       	mov	r31, r0
			printf("Direction: %i\n", received_message.data[1]);
			printf("X: %i\n", received_message.data[2]);
 25e:	0f 2e       	mov	r0, r31
 260:	f7 e4       	ldi	r31, 0x47	; 71
 262:	6f 2e       	mov	r6, r31
 264:	f2 e0       	ldi	r31, 0x02	; 2
 266:	7f 2e       	mov	r7, r31
 268:	f0 2d       	mov	r31, r0
			printf("Y: %i\n", received_message.data[3]);
 26a:	0f 2e       	mov	r0, r31
 26c:	fe e4       	ldi	r31, 0x4E	; 78
 26e:	4f 2e       	mov	r4, r31
 270:	f2 e0       	ldi	r31, 0x02	; 2
 272:	5f 2e       	mov	r5, r31
 274:	f0 2d       	mov	r31, r0
			printf("Slider l: %i\n", received_message.data[4]);
 276:	0f 2e       	mov	r0, r31
 278:	f5 e5       	ldi	r31, 0x55	; 85
 27a:	2f 2e       	mov	r2, r31
 27c:	f2 e0       	ldi	r31, 0x02	; 2
 27e:	3f 2e       	mov	r3, r31
 280:	f0 2d       	mov	r31, r0
	while(1) {	
		
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		status = MCP_read_status();
 282:	b3 df       	rcall	.-154    	; 0x1ea <MCP_read_status>
 284:	f8 2e       	mov	r15, r24
		printf("Status: %02x\n", status);
 286:	1f 92       	push	r1
 288:	8f 93       	push	r24
 28a:	1f 93       	push	r17
 28c:	0f 93       	push	r16
 28e:	56 d0       	rcall	.+172    	; 0x33c <printf>
		msg_arrived = (status & 1);
		if (msg_arrived) {
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	f0 fe       	sbrs	r15, 0
 29a:	3e c0       	rjmp	.+124    	; 0x318 <main+0xf6>
			received_message = CAN_message_receive();
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	41 df       	rcall	.-382    	; 0x124 <CAN_message_receive>
			printf("ID: %02x\n", received_message.id);
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	8f 93       	push	r24
 2a6:	89 81       	ldd	r24, Y+1	; 0x01
 2a8:	8f 93       	push	r24
 2aa:	9f 92       	push	r9
 2ac:	8f 92       	push	r8
 2ae:	46 d0       	rcall	.+140    	; 0x33c <printf>
			printf("length: %02x\n", received_message.length);
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	1f 92       	push	r1
 2b4:	8f 93       	push	r24
 2b6:	bf 92       	push	r11
 2b8:	af 92       	push	r10
 2ba:	40 d0       	rcall	.+128    	; 0x33c <printf>
			printf("Message type: %s\n", received_message.data[0]);
 2bc:	8c 81       	ldd	r24, Y+4	; 0x04
 2be:	1f 92       	push	r1
 2c0:	8f 93       	push	r24
 2c2:	df 92       	push	r13
 2c4:	cf 92       	push	r12
 2c6:	3a d0       	rcall	.+116    	; 0x33c <printf>
			printf("Direction: %i\n", received_message.data[1]);
 2c8:	8d 81       	ldd	r24, Y+5	; 0x05
 2ca:	1f 92       	push	r1
 2cc:	8f 93       	push	r24
 2ce:	a8 e3       	ldi	r26, 0x38	; 56
 2d0:	b2 e0       	ldi	r27, 0x02	; 2
 2d2:	bf 93       	push	r27
 2d4:	af 93       	push	r26
 2d6:	32 d0       	rcall	.+100    	; 0x33c <printf>
			printf("X: %i\n", received_message.data[2]);
 2d8:	8e 81       	ldd	r24, Y+6	; 0x06
 2da:	1f 92       	push	r1
 2dc:	8f 93       	push	r24
 2de:	7f 92       	push	r7
 2e0:	6f 92       	push	r6
 2e2:	2c d0       	rcall	.+88     	; 0x33c <printf>
			printf("Y: %i\n", received_message.data[3]);
 2e4:	8f 81       	ldd	r24, Y+7	; 0x07
 2e6:	1f 92       	push	r1
 2e8:	8f 93       	push	r24
 2ea:	5f 92       	push	r5
 2ec:	4f 92       	push	r4
 2ee:	26 d0       	rcall	.+76     	; 0x33c <printf>
			printf("Slider l: %i\n", received_message.data[4]);
 2f0:	88 85       	ldd	r24, Y+8	; 0x08
 2f2:	1f 92       	push	r1
 2f4:	8f 93       	push	r24
 2f6:	3f 92       	push	r3
 2f8:	2f 92       	push	r2
 2fa:	20 d0       	rcall	.+64     	; 0x33c <printf>
			printf("Slider r: %i\n", received_message.data[5]);
 2fc:	89 85       	ldd	r24, Y+9	; 0x09
 2fe:	1f 92       	push	r1
 300:	8f 93       	push	r24
 302:	a3 e6       	ldi	r26, 0x63	; 99
 304:	b2 e0       	ldi	r27, 0x02	; 2
 306:	bf 93       	push	r27
 308:	af 93       	push	r26
 30a:	18 d0       	rcall	.+48     	; 0x33c <printf>
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	de bf       	out	0x3e, r29	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	cd bf       	out	0x3d, r28	; 61
 316:	03 c0       	rjmp	.+6      	; 0x31e <main+0xfc>
			for (uint8_t i = 0; i < received_message.length; i++) {
				printf("Received: %02x\n", received_message.data[i]);
			}
			*/
		} else {
			printf("%s\n", "No message in buffer");
 318:	81 e7       	ldi	r24, 0x71	; 113
 31a:	92 e0       	ldi	r25, 0x02	; 2
 31c:	20 d0       	rcall	.+64     	; 0x35e <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31e:	9f ef       	ldi	r25, 0xFF	; 255
 320:	a9 e6       	ldi	r26, 0x69	; 105
 322:	b8 e1       	ldi	r27, 0x18	; 24
 324:	91 50       	subi	r25, 0x01	; 1
 326:	a0 40       	sbci	r26, 0x00	; 0
 328:	b0 40       	sbci	r27, 0x00	; 0
 32a:	e1 f7       	brne	.-8      	; 0x324 <main+0x102>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x10c>
 32e:	00 00       	nop
 330:	a8 cf       	rjmp	.-176    	; 0x282 <main+0x60>

00000332 <SPI_master_transmit>:
}

void SPI_master_transmit(uint8_t cData)
{
	/* Start transmission */
	SPDR = cData;
 332:	8e bd       	out	0x2e, r24	; 46
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
 334:	0d b4       	in	r0, 0x2d	; 45
 336:	07 fe       	sbrs	r0, 7
 338:	fd cf       	rjmp	.-6      	; 0x334 <SPI_master_transmit+0x2>
		;
	}
}
 33a:	08 95       	ret

0000033c <printf>:
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	cd b7       	in	r28, 0x3d	; 61
 342:	de b7       	in	r29, 0x3e	; 62
 344:	fe 01       	movw	r30, r28
 346:	36 96       	adiw	r30, 0x06	; 6
 348:	61 91       	ld	r22, Z+
 34a:	71 91       	ld	r23, Z+
 34c:	af 01       	movw	r20, r30
 34e:	80 91 88 02 	lds	r24, 0x0288
 352:	90 91 89 02 	lds	r25, 0x0289
 356:	30 d0       	rcall	.+96     	; 0x3b8 <vfprintf>
 358:	df 91       	pop	r29
 35a:	cf 91       	pop	r28
 35c:	08 95       	ret

0000035e <puts>:
 35e:	0f 93       	push	r16
 360:	1f 93       	push	r17
 362:	cf 93       	push	r28
 364:	df 93       	push	r29
 366:	e0 91 88 02 	lds	r30, 0x0288
 36a:	f0 91 89 02 	lds	r31, 0x0289
 36e:	23 81       	ldd	r18, Z+3	; 0x03
 370:	21 ff       	sbrs	r18, 1
 372:	1b c0       	rjmp	.+54     	; 0x3aa <puts+0x4c>
 374:	ec 01       	movw	r28, r24
 376:	00 e0       	ldi	r16, 0x00	; 0
 378:	10 e0       	ldi	r17, 0x00	; 0
 37a:	89 91       	ld	r24, Y+
 37c:	60 91 88 02 	lds	r22, 0x0288
 380:	70 91 89 02 	lds	r23, 0x0289
 384:	db 01       	movw	r26, r22
 386:	18 96       	adiw	r26, 0x08	; 8
 388:	ed 91       	ld	r30, X+
 38a:	fc 91       	ld	r31, X
 38c:	19 97       	sbiw	r26, 0x09	; 9
 38e:	88 23       	and	r24, r24
 390:	31 f0       	breq	.+12     	; 0x39e <puts+0x40>
 392:	19 95       	eicall
 394:	89 2b       	or	r24, r25
 396:	89 f3       	breq	.-30     	; 0x37a <puts+0x1c>
 398:	0f ef       	ldi	r16, 0xFF	; 255
 39a:	1f ef       	ldi	r17, 0xFF	; 255
 39c:	ee cf       	rjmp	.-36     	; 0x37a <puts+0x1c>
 39e:	8a e0       	ldi	r24, 0x0A	; 10
 3a0:	19 95       	eicall
 3a2:	89 2b       	or	r24, r25
 3a4:	11 f4       	brne	.+4      	; 0x3aa <puts+0x4c>
 3a6:	c8 01       	movw	r24, r16
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <puts+0x50>
 3aa:	8f ef       	ldi	r24, 0xFF	; 255
 3ac:	9f ef       	ldi	r25, 0xFF	; 255
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	1f 91       	pop	r17
 3b4:	0f 91       	pop	r16
 3b6:	08 95       	ret

000003b8 <vfprintf>:
 3b8:	2f 92       	push	r2
 3ba:	3f 92       	push	r3
 3bc:	4f 92       	push	r4
 3be:	5f 92       	push	r5
 3c0:	6f 92       	push	r6
 3c2:	7f 92       	push	r7
 3c4:	8f 92       	push	r8
 3c6:	9f 92       	push	r9
 3c8:	af 92       	push	r10
 3ca:	bf 92       	push	r11
 3cc:	cf 92       	push	r12
 3ce:	df 92       	push	r13
 3d0:	ef 92       	push	r14
 3d2:	ff 92       	push	r15
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	2c 97       	sbiw	r28, 0x0c	; 12
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	7c 01       	movw	r14, r24
 3ee:	6b 01       	movw	r12, r22
 3f0:	8a 01       	movw	r16, r20
 3f2:	fc 01       	movw	r30, r24
 3f4:	17 82       	std	Z+7, r1	; 0x07
 3f6:	16 82       	std	Z+6, r1	; 0x06
 3f8:	83 81       	ldd	r24, Z+3	; 0x03
 3fa:	81 ff       	sbrs	r24, 1
 3fc:	b0 c1       	rjmp	.+864    	; 0x75e <vfprintf+0x3a6>
 3fe:	ce 01       	movw	r24, r28
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	4c 01       	movw	r8, r24
 404:	f7 01       	movw	r30, r14
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	f6 01       	movw	r30, r12
 40a:	93 fd       	sbrc	r25, 3
 40c:	85 91       	lpm	r24, Z+
 40e:	93 ff       	sbrs	r25, 3
 410:	81 91       	ld	r24, Z+
 412:	6f 01       	movw	r12, r30
 414:	88 23       	and	r24, r24
 416:	09 f4       	brne	.+2      	; 0x41a <vfprintf+0x62>
 418:	9e c1       	rjmp	.+828    	; 0x756 <vfprintf+0x39e>
 41a:	85 32       	cpi	r24, 0x25	; 37
 41c:	39 f4       	brne	.+14     	; 0x42c <vfprintf+0x74>
 41e:	93 fd       	sbrc	r25, 3
 420:	85 91       	lpm	r24, Z+
 422:	93 ff       	sbrs	r25, 3
 424:	81 91       	ld	r24, Z+
 426:	6f 01       	movw	r12, r30
 428:	85 32       	cpi	r24, 0x25	; 37
 42a:	21 f4       	brne	.+8      	; 0x434 <vfprintf+0x7c>
 42c:	b7 01       	movw	r22, r14
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	c7 d1       	rcall	.+910    	; 0x7c0 <fputc>
 432:	e8 cf       	rjmp	.-48     	; 0x404 <vfprintf+0x4c>
 434:	51 2c       	mov	r5, r1
 436:	31 2c       	mov	r3, r1
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	20 32       	cpi	r18, 0x20	; 32
 43c:	a0 f4       	brcc	.+40     	; 0x466 <vfprintf+0xae>
 43e:	8b 32       	cpi	r24, 0x2B	; 43
 440:	69 f0       	breq	.+26     	; 0x45c <vfprintf+0xa4>
 442:	30 f4       	brcc	.+12     	; 0x450 <vfprintf+0x98>
 444:	80 32       	cpi	r24, 0x20	; 32
 446:	59 f0       	breq	.+22     	; 0x45e <vfprintf+0xa6>
 448:	83 32       	cpi	r24, 0x23	; 35
 44a:	69 f4       	brne	.+26     	; 0x466 <vfprintf+0xae>
 44c:	20 61       	ori	r18, 0x10	; 16
 44e:	2c c0       	rjmp	.+88     	; 0x4a8 <vfprintf+0xf0>
 450:	8d 32       	cpi	r24, 0x2D	; 45
 452:	39 f0       	breq	.+14     	; 0x462 <vfprintf+0xaa>
 454:	80 33       	cpi	r24, 0x30	; 48
 456:	39 f4       	brne	.+14     	; 0x466 <vfprintf+0xae>
 458:	21 60       	ori	r18, 0x01	; 1
 45a:	26 c0       	rjmp	.+76     	; 0x4a8 <vfprintf+0xf0>
 45c:	22 60       	ori	r18, 0x02	; 2
 45e:	24 60       	ori	r18, 0x04	; 4
 460:	23 c0       	rjmp	.+70     	; 0x4a8 <vfprintf+0xf0>
 462:	28 60       	ori	r18, 0x08	; 8
 464:	21 c0       	rjmp	.+66     	; 0x4a8 <vfprintf+0xf0>
 466:	27 fd       	sbrc	r18, 7
 468:	27 c0       	rjmp	.+78     	; 0x4b8 <vfprintf+0x100>
 46a:	30 ed       	ldi	r19, 0xD0	; 208
 46c:	38 0f       	add	r19, r24
 46e:	3a 30       	cpi	r19, 0x0A	; 10
 470:	78 f4       	brcc	.+30     	; 0x490 <vfprintf+0xd8>
 472:	26 ff       	sbrs	r18, 6
 474:	06 c0       	rjmp	.+12     	; 0x482 <vfprintf+0xca>
 476:	fa e0       	ldi	r31, 0x0A	; 10
 478:	5f 9e       	mul	r5, r31
 47a:	30 0d       	add	r19, r0
 47c:	11 24       	eor	r1, r1
 47e:	53 2e       	mov	r5, r19
 480:	13 c0       	rjmp	.+38     	; 0x4a8 <vfprintf+0xf0>
 482:	8a e0       	ldi	r24, 0x0A	; 10
 484:	38 9e       	mul	r3, r24
 486:	30 0d       	add	r19, r0
 488:	11 24       	eor	r1, r1
 48a:	33 2e       	mov	r3, r19
 48c:	20 62       	ori	r18, 0x20	; 32
 48e:	0c c0       	rjmp	.+24     	; 0x4a8 <vfprintf+0xf0>
 490:	8e 32       	cpi	r24, 0x2E	; 46
 492:	21 f4       	brne	.+8      	; 0x49c <vfprintf+0xe4>
 494:	26 fd       	sbrc	r18, 6
 496:	5f c1       	rjmp	.+702    	; 0x756 <vfprintf+0x39e>
 498:	20 64       	ori	r18, 0x40	; 64
 49a:	06 c0       	rjmp	.+12     	; 0x4a8 <vfprintf+0xf0>
 49c:	8c 36       	cpi	r24, 0x6C	; 108
 49e:	11 f4       	brne	.+4      	; 0x4a4 <vfprintf+0xec>
 4a0:	20 68       	ori	r18, 0x80	; 128
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <vfprintf+0xf0>
 4a4:	88 36       	cpi	r24, 0x68	; 104
 4a6:	41 f4       	brne	.+16     	; 0x4b8 <vfprintf+0x100>
 4a8:	f6 01       	movw	r30, r12
 4aa:	93 fd       	sbrc	r25, 3
 4ac:	85 91       	lpm	r24, Z+
 4ae:	93 ff       	sbrs	r25, 3
 4b0:	81 91       	ld	r24, Z+
 4b2:	6f 01       	movw	r12, r30
 4b4:	81 11       	cpse	r24, r1
 4b6:	c1 cf       	rjmp	.-126    	; 0x43a <vfprintf+0x82>
 4b8:	98 2f       	mov	r25, r24
 4ba:	9f 7d       	andi	r25, 0xDF	; 223
 4bc:	95 54       	subi	r25, 0x45	; 69
 4be:	93 30       	cpi	r25, 0x03	; 3
 4c0:	28 f4       	brcc	.+10     	; 0x4cc <vfprintf+0x114>
 4c2:	0c 5f       	subi	r16, 0xFC	; 252
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	ff e3       	ldi	r31, 0x3F	; 63
 4c8:	f9 83       	std	Y+1, r31	; 0x01
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <vfprintf+0x12e>
 4cc:	83 36       	cpi	r24, 0x63	; 99
 4ce:	31 f0       	breq	.+12     	; 0x4dc <vfprintf+0x124>
 4d0:	83 37       	cpi	r24, 0x73	; 115
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <vfprintf+0x138>
 4d4:	83 35       	cpi	r24, 0x53	; 83
 4d6:	09 f0       	breq	.+2      	; 0x4da <vfprintf+0x122>
 4d8:	57 c0       	rjmp	.+174    	; 0x588 <vfprintf+0x1d0>
 4da:	21 c0       	rjmp	.+66     	; 0x51e <vfprintf+0x166>
 4dc:	f8 01       	movw	r30, r16
 4de:	80 81       	ld	r24, Z
 4e0:	89 83       	std	Y+1, r24	; 0x01
 4e2:	0e 5f       	subi	r16, 0xFE	; 254
 4e4:	1f 4f       	sbci	r17, 0xFF	; 255
 4e6:	44 24       	eor	r4, r4
 4e8:	43 94       	inc	r4
 4ea:	51 2c       	mov	r5, r1
 4ec:	54 01       	movw	r10, r8
 4ee:	14 c0       	rjmp	.+40     	; 0x518 <vfprintf+0x160>
 4f0:	38 01       	movw	r6, r16
 4f2:	f2 e0       	ldi	r31, 0x02	; 2
 4f4:	6f 0e       	add	r6, r31
 4f6:	71 1c       	adc	r7, r1
 4f8:	f8 01       	movw	r30, r16
 4fa:	a0 80       	ld	r10, Z
 4fc:	b1 80       	ldd	r11, Z+1	; 0x01
 4fe:	26 ff       	sbrs	r18, 6
 500:	03 c0       	rjmp	.+6      	; 0x508 <vfprintf+0x150>
 502:	65 2d       	mov	r22, r5
 504:	70 e0       	ldi	r23, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <vfprintf+0x154>
 508:	6f ef       	ldi	r22, 0xFF	; 255
 50a:	7f ef       	ldi	r23, 0xFF	; 255
 50c:	c5 01       	movw	r24, r10
 50e:	2c 87       	std	Y+12, r18	; 0x0c
 510:	4c d1       	rcall	.+664    	; 0x7aa <strnlen>
 512:	2c 01       	movw	r4, r24
 514:	83 01       	movw	r16, r6
 516:	2c 85       	ldd	r18, Y+12	; 0x0c
 518:	2f 77       	andi	r18, 0x7F	; 127
 51a:	22 2e       	mov	r2, r18
 51c:	16 c0       	rjmp	.+44     	; 0x54a <vfprintf+0x192>
 51e:	38 01       	movw	r6, r16
 520:	f2 e0       	ldi	r31, 0x02	; 2
 522:	6f 0e       	add	r6, r31
 524:	71 1c       	adc	r7, r1
 526:	f8 01       	movw	r30, r16
 528:	a0 80       	ld	r10, Z
 52a:	b1 80       	ldd	r11, Z+1	; 0x01
 52c:	26 ff       	sbrs	r18, 6
 52e:	03 c0       	rjmp	.+6      	; 0x536 <vfprintf+0x17e>
 530:	65 2d       	mov	r22, r5
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <vfprintf+0x182>
 536:	6f ef       	ldi	r22, 0xFF	; 255
 538:	7f ef       	ldi	r23, 0xFF	; 255
 53a:	c5 01       	movw	r24, r10
 53c:	2c 87       	std	Y+12, r18	; 0x0c
 53e:	2a d1       	rcall	.+596    	; 0x794 <strnlen_P>
 540:	2c 01       	movw	r4, r24
 542:	2c 85       	ldd	r18, Y+12	; 0x0c
 544:	20 68       	ori	r18, 0x80	; 128
 546:	22 2e       	mov	r2, r18
 548:	83 01       	movw	r16, r6
 54a:	23 fc       	sbrc	r2, 3
 54c:	19 c0       	rjmp	.+50     	; 0x580 <vfprintf+0x1c8>
 54e:	83 2d       	mov	r24, r3
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	48 16       	cp	r4, r24
 554:	59 06       	cpc	r5, r25
 556:	a0 f4       	brcc	.+40     	; 0x580 <vfprintf+0x1c8>
 558:	b7 01       	movw	r22, r14
 55a:	80 e2       	ldi	r24, 0x20	; 32
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	30 d1       	rcall	.+608    	; 0x7c0 <fputc>
 560:	3a 94       	dec	r3
 562:	f5 cf       	rjmp	.-22     	; 0x54e <vfprintf+0x196>
 564:	f5 01       	movw	r30, r10
 566:	27 fc       	sbrc	r2, 7
 568:	85 91       	lpm	r24, Z+
 56a:	27 fe       	sbrs	r2, 7
 56c:	81 91       	ld	r24, Z+
 56e:	5f 01       	movw	r10, r30
 570:	b7 01       	movw	r22, r14
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	25 d1       	rcall	.+586    	; 0x7c0 <fputc>
 576:	31 10       	cpse	r3, r1
 578:	3a 94       	dec	r3
 57a:	f1 e0       	ldi	r31, 0x01	; 1
 57c:	4f 1a       	sub	r4, r31
 57e:	51 08       	sbc	r5, r1
 580:	41 14       	cp	r4, r1
 582:	51 04       	cpc	r5, r1
 584:	79 f7       	brne	.-34     	; 0x564 <vfprintf+0x1ac>
 586:	de c0       	rjmp	.+444    	; 0x744 <vfprintf+0x38c>
 588:	84 36       	cpi	r24, 0x64	; 100
 58a:	11 f0       	breq	.+4      	; 0x590 <vfprintf+0x1d8>
 58c:	89 36       	cpi	r24, 0x69	; 105
 58e:	31 f5       	brne	.+76     	; 0x5dc <vfprintf+0x224>
 590:	f8 01       	movw	r30, r16
 592:	27 ff       	sbrs	r18, 7
 594:	07 c0       	rjmp	.+14     	; 0x5a4 <vfprintf+0x1ec>
 596:	60 81       	ld	r22, Z
 598:	71 81       	ldd	r23, Z+1	; 0x01
 59a:	82 81       	ldd	r24, Z+2	; 0x02
 59c:	93 81       	ldd	r25, Z+3	; 0x03
 59e:	0c 5f       	subi	r16, 0xFC	; 252
 5a0:	1f 4f       	sbci	r17, 0xFF	; 255
 5a2:	08 c0       	rjmp	.+16     	; 0x5b4 <vfprintf+0x1fc>
 5a4:	60 81       	ld	r22, Z
 5a6:	71 81       	ldd	r23, Z+1	; 0x01
 5a8:	88 27       	eor	r24, r24
 5aa:	77 fd       	sbrc	r23, 7
 5ac:	80 95       	com	r24
 5ae:	98 2f       	mov	r25, r24
 5b0:	0e 5f       	subi	r16, 0xFE	; 254
 5b2:	1f 4f       	sbci	r17, 0xFF	; 255
 5b4:	2f 76       	andi	r18, 0x6F	; 111
 5b6:	b2 2e       	mov	r11, r18
 5b8:	97 ff       	sbrs	r25, 7
 5ba:	09 c0       	rjmp	.+18     	; 0x5ce <vfprintf+0x216>
 5bc:	90 95       	com	r25
 5be:	80 95       	com	r24
 5c0:	70 95       	com	r23
 5c2:	61 95       	neg	r22
 5c4:	7f 4f       	sbci	r23, 0xFF	; 255
 5c6:	8f 4f       	sbci	r24, 0xFF	; 255
 5c8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ca:	20 68       	ori	r18, 0x80	; 128
 5cc:	b2 2e       	mov	r11, r18
 5ce:	2a e0       	ldi	r18, 0x0A	; 10
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	a4 01       	movw	r20, r8
 5d4:	27 d1       	rcall	.+590    	; 0x824 <__ultoa_invert>
 5d6:	a8 2e       	mov	r10, r24
 5d8:	a8 18       	sub	r10, r8
 5da:	43 c0       	rjmp	.+134    	; 0x662 <vfprintf+0x2aa>
 5dc:	85 37       	cpi	r24, 0x75	; 117
 5de:	29 f4       	brne	.+10     	; 0x5ea <vfprintf+0x232>
 5e0:	2f 7e       	andi	r18, 0xEF	; 239
 5e2:	b2 2e       	mov	r11, r18
 5e4:	2a e0       	ldi	r18, 0x0A	; 10
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	25 c0       	rjmp	.+74     	; 0x634 <vfprintf+0x27c>
 5ea:	f2 2f       	mov	r31, r18
 5ec:	f9 7f       	andi	r31, 0xF9	; 249
 5ee:	bf 2e       	mov	r11, r31
 5f0:	8f 36       	cpi	r24, 0x6F	; 111
 5f2:	c1 f0       	breq	.+48     	; 0x624 <vfprintf+0x26c>
 5f4:	18 f4       	brcc	.+6      	; 0x5fc <vfprintf+0x244>
 5f6:	88 35       	cpi	r24, 0x58	; 88
 5f8:	79 f0       	breq	.+30     	; 0x618 <vfprintf+0x260>
 5fa:	ad c0       	rjmp	.+346    	; 0x756 <vfprintf+0x39e>
 5fc:	80 37       	cpi	r24, 0x70	; 112
 5fe:	19 f0       	breq	.+6      	; 0x606 <vfprintf+0x24e>
 600:	88 37       	cpi	r24, 0x78	; 120
 602:	21 f0       	breq	.+8      	; 0x60c <vfprintf+0x254>
 604:	a8 c0       	rjmp	.+336    	; 0x756 <vfprintf+0x39e>
 606:	2f 2f       	mov	r18, r31
 608:	20 61       	ori	r18, 0x10	; 16
 60a:	b2 2e       	mov	r11, r18
 60c:	b4 fe       	sbrs	r11, 4
 60e:	0d c0       	rjmp	.+26     	; 0x62a <vfprintf+0x272>
 610:	8b 2d       	mov	r24, r11
 612:	84 60       	ori	r24, 0x04	; 4
 614:	b8 2e       	mov	r11, r24
 616:	09 c0       	rjmp	.+18     	; 0x62a <vfprintf+0x272>
 618:	24 ff       	sbrs	r18, 4
 61a:	0a c0       	rjmp	.+20     	; 0x630 <vfprintf+0x278>
 61c:	9f 2f       	mov	r25, r31
 61e:	96 60       	ori	r25, 0x06	; 6
 620:	b9 2e       	mov	r11, r25
 622:	06 c0       	rjmp	.+12     	; 0x630 <vfprintf+0x278>
 624:	28 e0       	ldi	r18, 0x08	; 8
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	05 c0       	rjmp	.+10     	; 0x634 <vfprintf+0x27c>
 62a:	20 e1       	ldi	r18, 0x10	; 16
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	02 c0       	rjmp	.+4      	; 0x634 <vfprintf+0x27c>
 630:	20 e1       	ldi	r18, 0x10	; 16
 632:	32 e0       	ldi	r19, 0x02	; 2
 634:	f8 01       	movw	r30, r16
 636:	b7 fe       	sbrs	r11, 7
 638:	07 c0       	rjmp	.+14     	; 0x648 <vfprintf+0x290>
 63a:	60 81       	ld	r22, Z
 63c:	71 81       	ldd	r23, Z+1	; 0x01
 63e:	82 81       	ldd	r24, Z+2	; 0x02
 640:	93 81       	ldd	r25, Z+3	; 0x03
 642:	0c 5f       	subi	r16, 0xFC	; 252
 644:	1f 4f       	sbci	r17, 0xFF	; 255
 646:	06 c0       	rjmp	.+12     	; 0x654 <vfprintf+0x29c>
 648:	60 81       	ld	r22, Z
 64a:	71 81       	ldd	r23, Z+1	; 0x01
 64c:	80 e0       	ldi	r24, 0x00	; 0
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 5f       	subi	r16, 0xFE	; 254
 652:	1f 4f       	sbci	r17, 0xFF	; 255
 654:	a4 01       	movw	r20, r8
 656:	e6 d0       	rcall	.+460    	; 0x824 <__ultoa_invert>
 658:	a8 2e       	mov	r10, r24
 65a:	a8 18       	sub	r10, r8
 65c:	fb 2d       	mov	r31, r11
 65e:	ff 77       	andi	r31, 0x7F	; 127
 660:	bf 2e       	mov	r11, r31
 662:	b6 fe       	sbrs	r11, 6
 664:	0b c0       	rjmp	.+22     	; 0x67c <vfprintf+0x2c4>
 666:	2b 2d       	mov	r18, r11
 668:	2e 7f       	andi	r18, 0xFE	; 254
 66a:	a5 14       	cp	r10, r5
 66c:	50 f4       	brcc	.+20     	; 0x682 <vfprintf+0x2ca>
 66e:	b4 fe       	sbrs	r11, 4
 670:	0a c0       	rjmp	.+20     	; 0x686 <vfprintf+0x2ce>
 672:	b2 fc       	sbrc	r11, 2
 674:	08 c0       	rjmp	.+16     	; 0x686 <vfprintf+0x2ce>
 676:	2b 2d       	mov	r18, r11
 678:	2e 7e       	andi	r18, 0xEE	; 238
 67a:	05 c0       	rjmp	.+10     	; 0x686 <vfprintf+0x2ce>
 67c:	7a 2c       	mov	r7, r10
 67e:	2b 2d       	mov	r18, r11
 680:	03 c0       	rjmp	.+6      	; 0x688 <vfprintf+0x2d0>
 682:	7a 2c       	mov	r7, r10
 684:	01 c0       	rjmp	.+2      	; 0x688 <vfprintf+0x2d0>
 686:	75 2c       	mov	r7, r5
 688:	24 ff       	sbrs	r18, 4
 68a:	0d c0       	rjmp	.+26     	; 0x6a6 <vfprintf+0x2ee>
 68c:	fe 01       	movw	r30, r28
 68e:	ea 0d       	add	r30, r10
 690:	f1 1d       	adc	r31, r1
 692:	80 81       	ld	r24, Z
 694:	80 33       	cpi	r24, 0x30	; 48
 696:	11 f4       	brne	.+4      	; 0x69c <vfprintf+0x2e4>
 698:	29 7e       	andi	r18, 0xE9	; 233
 69a:	09 c0       	rjmp	.+18     	; 0x6ae <vfprintf+0x2f6>
 69c:	22 ff       	sbrs	r18, 2
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <vfprintf+0x2f4>
 6a0:	73 94       	inc	r7
 6a2:	73 94       	inc	r7
 6a4:	04 c0       	rjmp	.+8      	; 0x6ae <vfprintf+0x2f6>
 6a6:	82 2f       	mov	r24, r18
 6a8:	86 78       	andi	r24, 0x86	; 134
 6aa:	09 f0       	breq	.+2      	; 0x6ae <vfprintf+0x2f6>
 6ac:	73 94       	inc	r7
 6ae:	23 fd       	sbrc	r18, 3
 6b0:	12 c0       	rjmp	.+36     	; 0x6d6 <vfprintf+0x31e>
 6b2:	20 ff       	sbrs	r18, 0
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <vfprintf+0x30a>
 6b6:	5a 2c       	mov	r5, r10
 6b8:	73 14       	cp	r7, r3
 6ba:	18 f4       	brcc	.+6      	; 0x6c2 <vfprintf+0x30a>
 6bc:	53 0c       	add	r5, r3
 6be:	57 18       	sub	r5, r7
 6c0:	73 2c       	mov	r7, r3
 6c2:	73 14       	cp	r7, r3
 6c4:	60 f4       	brcc	.+24     	; 0x6de <vfprintf+0x326>
 6c6:	b7 01       	movw	r22, r14
 6c8:	80 e2       	ldi	r24, 0x20	; 32
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	2c 87       	std	Y+12, r18	; 0x0c
 6ce:	78 d0       	rcall	.+240    	; 0x7c0 <fputc>
 6d0:	73 94       	inc	r7
 6d2:	2c 85       	ldd	r18, Y+12	; 0x0c
 6d4:	f6 cf       	rjmp	.-20     	; 0x6c2 <vfprintf+0x30a>
 6d6:	73 14       	cp	r7, r3
 6d8:	10 f4       	brcc	.+4      	; 0x6de <vfprintf+0x326>
 6da:	37 18       	sub	r3, r7
 6dc:	01 c0       	rjmp	.+2      	; 0x6e0 <vfprintf+0x328>
 6de:	31 2c       	mov	r3, r1
 6e0:	24 ff       	sbrs	r18, 4
 6e2:	11 c0       	rjmp	.+34     	; 0x706 <vfprintf+0x34e>
 6e4:	b7 01       	movw	r22, r14
 6e6:	80 e3       	ldi	r24, 0x30	; 48
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	2c 87       	std	Y+12, r18	; 0x0c
 6ec:	69 d0       	rcall	.+210    	; 0x7c0 <fputc>
 6ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f0:	22 ff       	sbrs	r18, 2
 6f2:	16 c0       	rjmp	.+44     	; 0x720 <vfprintf+0x368>
 6f4:	21 ff       	sbrs	r18, 1
 6f6:	03 c0       	rjmp	.+6      	; 0x6fe <vfprintf+0x346>
 6f8:	88 e5       	ldi	r24, 0x58	; 88
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <vfprintf+0x34a>
 6fe:	88 e7       	ldi	r24, 0x78	; 120
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	b7 01       	movw	r22, r14
 704:	0c c0       	rjmp	.+24     	; 0x71e <vfprintf+0x366>
 706:	82 2f       	mov	r24, r18
 708:	86 78       	andi	r24, 0x86	; 134
 70a:	51 f0       	breq	.+20     	; 0x720 <vfprintf+0x368>
 70c:	21 fd       	sbrc	r18, 1
 70e:	02 c0       	rjmp	.+4      	; 0x714 <vfprintf+0x35c>
 710:	80 e2       	ldi	r24, 0x20	; 32
 712:	01 c0       	rjmp	.+2      	; 0x716 <vfprintf+0x35e>
 714:	8b e2       	ldi	r24, 0x2B	; 43
 716:	27 fd       	sbrc	r18, 7
 718:	8d e2       	ldi	r24, 0x2D	; 45
 71a:	b7 01       	movw	r22, r14
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	50 d0       	rcall	.+160    	; 0x7c0 <fputc>
 720:	a5 14       	cp	r10, r5
 722:	30 f4       	brcc	.+12     	; 0x730 <vfprintf+0x378>
 724:	b7 01       	movw	r22, r14
 726:	80 e3       	ldi	r24, 0x30	; 48
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	4a d0       	rcall	.+148    	; 0x7c0 <fputc>
 72c:	5a 94       	dec	r5
 72e:	f8 cf       	rjmp	.-16     	; 0x720 <vfprintf+0x368>
 730:	aa 94       	dec	r10
 732:	f4 01       	movw	r30, r8
 734:	ea 0d       	add	r30, r10
 736:	f1 1d       	adc	r31, r1
 738:	80 81       	ld	r24, Z
 73a:	b7 01       	movw	r22, r14
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	40 d0       	rcall	.+128    	; 0x7c0 <fputc>
 740:	a1 10       	cpse	r10, r1
 742:	f6 cf       	rjmp	.-20     	; 0x730 <vfprintf+0x378>
 744:	33 20       	and	r3, r3
 746:	09 f4       	brne	.+2      	; 0x74a <vfprintf+0x392>
 748:	5d ce       	rjmp	.-838    	; 0x404 <vfprintf+0x4c>
 74a:	b7 01       	movw	r22, r14
 74c:	80 e2       	ldi	r24, 0x20	; 32
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	37 d0       	rcall	.+110    	; 0x7c0 <fputc>
 752:	3a 94       	dec	r3
 754:	f7 cf       	rjmp	.-18     	; 0x744 <vfprintf+0x38c>
 756:	f7 01       	movw	r30, r14
 758:	86 81       	ldd	r24, Z+6	; 0x06
 75a:	97 81       	ldd	r25, Z+7	; 0x07
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x3aa>
 75e:	8f ef       	ldi	r24, 0xFF	; 255
 760:	9f ef       	ldi	r25, 0xFF	; 255
 762:	2c 96       	adiw	r28, 0x0c	; 12
 764:	0f b6       	in	r0, 0x3f	; 63
 766:	f8 94       	cli
 768:	de bf       	out	0x3e, r29	; 62
 76a:	0f be       	out	0x3f, r0	; 63
 76c:	cd bf       	out	0x3d, r28	; 61
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	1f 91       	pop	r17
 774:	0f 91       	pop	r16
 776:	ff 90       	pop	r15
 778:	ef 90       	pop	r14
 77a:	df 90       	pop	r13
 77c:	cf 90       	pop	r12
 77e:	bf 90       	pop	r11
 780:	af 90       	pop	r10
 782:	9f 90       	pop	r9
 784:	8f 90       	pop	r8
 786:	7f 90       	pop	r7
 788:	6f 90       	pop	r6
 78a:	5f 90       	pop	r5
 78c:	4f 90       	pop	r4
 78e:	3f 90       	pop	r3
 790:	2f 90       	pop	r2
 792:	08 95       	ret

00000794 <strnlen_P>:
 794:	fc 01       	movw	r30, r24
 796:	05 90       	lpm	r0, Z+
 798:	61 50       	subi	r22, 0x01	; 1
 79a:	70 40       	sbci	r23, 0x00	; 0
 79c:	01 10       	cpse	r0, r1
 79e:	d8 f7       	brcc	.-10     	; 0x796 <strnlen_P+0x2>
 7a0:	80 95       	com	r24
 7a2:	90 95       	com	r25
 7a4:	8e 0f       	add	r24, r30
 7a6:	9f 1f       	adc	r25, r31
 7a8:	08 95       	ret

000007aa <strnlen>:
 7aa:	fc 01       	movw	r30, r24
 7ac:	61 50       	subi	r22, 0x01	; 1
 7ae:	70 40       	sbci	r23, 0x00	; 0
 7b0:	01 90       	ld	r0, Z+
 7b2:	01 10       	cpse	r0, r1
 7b4:	d8 f7       	brcc	.-10     	; 0x7ac <strnlen+0x2>
 7b6:	80 95       	com	r24
 7b8:	90 95       	com	r25
 7ba:	8e 0f       	add	r24, r30
 7bc:	9f 1f       	adc	r25, r31
 7be:	08 95       	ret

000007c0 <fputc>:
 7c0:	0f 93       	push	r16
 7c2:	1f 93       	push	r17
 7c4:	cf 93       	push	r28
 7c6:	df 93       	push	r29
 7c8:	18 2f       	mov	r17, r24
 7ca:	09 2f       	mov	r16, r25
 7cc:	eb 01       	movw	r28, r22
 7ce:	8b 81       	ldd	r24, Y+3	; 0x03
 7d0:	81 fd       	sbrc	r24, 1
 7d2:	03 c0       	rjmp	.+6      	; 0x7da <fputc+0x1a>
 7d4:	8f ef       	ldi	r24, 0xFF	; 255
 7d6:	9f ef       	ldi	r25, 0xFF	; 255
 7d8:	20 c0       	rjmp	.+64     	; 0x81a <fputc+0x5a>
 7da:	82 ff       	sbrs	r24, 2
 7dc:	10 c0       	rjmp	.+32     	; 0x7fe <fputc+0x3e>
 7de:	4e 81       	ldd	r20, Y+6	; 0x06
 7e0:	5f 81       	ldd	r21, Y+7	; 0x07
 7e2:	2c 81       	ldd	r18, Y+4	; 0x04
 7e4:	3d 81       	ldd	r19, Y+5	; 0x05
 7e6:	42 17       	cp	r20, r18
 7e8:	53 07       	cpc	r21, r19
 7ea:	7c f4       	brge	.+30     	; 0x80a <fputc+0x4a>
 7ec:	e8 81       	ld	r30, Y
 7ee:	f9 81       	ldd	r31, Y+1	; 0x01
 7f0:	9f 01       	movw	r18, r30
 7f2:	2f 5f       	subi	r18, 0xFF	; 255
 7f4:	3f 4f       	sbci	r19, 0xFF	; 255
 7f6:	39 83       	std	Y+1, r19	; 0x01
 7f8:	28 83       	st	Y, r18
 7fa:	10 83       	st	Z, r17
 7fc:	06 c0       	rjmp	.+12     	; 0x80a <fputc+0x4a>
 7fe:	e8 85       	ldd	r30, Y+8	; 0x08
 800:	f9 85       	ldd	r31, Y+9	; 0x09
 802:	81 2f       	mov	r24, r17
 804:	19 95       	eicall
 806:	89 2b       	or	r24, r25
 808:	29 f7       	brne	.-54     	; 0x7d4 <fputc+0x14>
 80a:	2e 81       	ldd	r18, Y+6	; 0x06
 80c:	3f 81       	ldd	r19, Y+7	; 0x07
 80e:	2f 5f       	subi	r18, 0xFF	; 255
 810:	3f 4f       	sbci	r19, 0xFF	; 255
 812:	3f 83       	std	Y+7, r19	; 0x07
 814:	2e 83       	std	Y+6, r18	; 0x06
 816:	81 2f       	mov	r24, r17
 818:	90 2f       	mov	r25, r16
 81a:	df 91       	pop	r29
 81c:	cf 91       	pop	r28
 81e:	1f 91       	pop	r17
 820:	0f 91       	pop	r16
 822:	08 95       	ret

00000824 <__ultoa_invert>:
 824:	fa 01       	movw	r30, r20
 826:	aa 27       	eor	r26, r26
 828:	28 30       	cpi	r18, 0x08	; 8
 82a:	51 f1       	breq	.+84     	; 0x880 <__ultoa_invert+0x5c>
 82c:	20 31       	cpi	r18, 0x10	; 16
 82e:	81 f1       	breq	.+96     	; 0x890 <__ultoa_invert+0x6c>
 830:	e8 94       	clt
 832:	6f 93       	push	r22
 834:	6e 7f       	andi	r22, 0xFE	; 254
 836:	6e 5f       	subi	r22, 0xFE	; 254
 838:	7f 4f       	sbci	r23, 0xFF	; 255
 83a:	8f 4f       	sbci	r24, 0xFF	; 255
 83c:	9f 4f       	sbci	r25, 0xFF	; 255
 83e:	af 4f       	sbci	r26, 0xFF	; 255
 840:	b1 e0       	ldi	r27, 0x01	; 1
 842:	3e d0       	rcall	.+124    	; 0x8c0 <__ultoa_invert+0x9c>
 844:	b4 e0       	ldi	r27, 0x04	; 4
 846:	3c d0       	rcall	.+120    	; 0x8c0 <__ultoa_invert+0x9c>
 848:	67 0f       	add	r22, r23
 84a:	78 1f       	adc	r23, r24
 84c:	89 1f       	adc	r24, r25
 84e:	9a 1f       	adc	r25, r26
 850:	a1 1d       	adc	r26, r1
 852:	68 0f       	add	r22, r24
 854:	79 1f       	adc	r23, r25
 856:	8a 1f       	adc	r24, r26
 858:	91 1d       	adc	r25, r1
 85a:	a1 1d       	adc	r26, r1
 85c:	6a 0f       	add	r22, r26
 85e:	71 1d       	adc	r23, r1
 860:	81 1d       	adc	r24, r1
 862:	91 1d       	adc	r25, r1
 864:	a1 1d       	adc	r26, r1
 866:	20 d0       	rcall	.+64     	; 0x8a8 <__ultoa_invert+0x84>
 868:	09 f4       	brne	.+2      	; 0x86c <__ultoa_invert+0x48>
 86a:	68 94       	set
 86c:	3f 91       	pop	r19
 86e:	2a e0       	ldi	r18, 0x0A	; 10
 870:	26 9f       	mul	r18, r22
 872:	11 24       	eor	r1, r1
 874:	30 19       	sub	r19, r0
 876:	30 5d       	subi	r19, 0xD0	; 208
 878:	31 93       	st	Z+, r19
 87a:	de f6       	brtc	.-74     	; 0x832 <__ultoa_invert+0xe>
 87c:	cf 01       	movw	r24, r30
 87e:	08 95       	ret
 880:	46 2f       	mov	r20, r22
 882:	47 70       	andi	r20, 0x07	; 7
 884:	40 5d       	subi	r20, 0xD0	; 208
 886:	41 93       	st	Z+, r20
 888:	b3 e0       	ldi	r27, 0x03	; 3
 88a:	0f d0       	rcall	.+30     	; 0x8aa <__ultoa_invert+0x86>
 88c:	c9 f7       	brne	.-14     	; 0x880 <__ultoa_invert+0x5c>
 88e:	f6 cf       	rjmp	.-20     	; 0x87c <__ultoa_invert+0x58>
 890:	46 2f       	mov	r20, r22
 892:	4f 70       	andi	r20, 0x0F	; 15
 894:	40 5d       	subi	r20, 0xD0	; 208
 896:	4a 33       	cpi	r20, 0x3A	; 58
 898:	18 f0       	brcs	.+6      	; 0x8a0 <__ultoa_invert+0x7c>
 89a:	49 5d       	subi	r20, 0xD9	; 217
 89c:	31 fd       	sbrc	r19, 1
 89e:	40 52       	subi	r20, 0x20	; 32
 8a0:	41 93       	st	Z+, r20
 8a2:	02 d0       	rcall	.+4      	; 0x8a8 <__ultoa_invert+0x84>
 8a4:	a9 f7       	brne	.-22     	; 0x890 <__ultoa_invert+0x6c>
 8a6:	ea cf       	rjmp	.-44     	; 0x87c <__ultoa_invert+0x58>
 8a8:	b4 e0       	ldi	r27, 0x04	; 4
 8aa:	a6 95       	lsr	r26
 8ac:	97 95       	ror	r25
 8ae:	87 95       	ror	r24
 8b0:	77 95       	ror	r23
 8b2:	67 95       	ror	r22
 8b4:	ba 95       	dec	r27
 8b6:	c9 f7       	brne	.-14     	; 0x8aa <__ultoa_invert+0x86>
 8b8:	00 97       	sbiw	r24, 0x00	; 0
 8ba:	61 05       	cpc	r22, r1
 8bc:	71 05       	cpc	r23, r1
 8be:	08 95       	ret
 8c0:	9b 01       	movw	r18, r22
 8c2:	ac 01       	movw	r20, r24
 8c4:	0a 2e       	mov	r0, r26
 8c6:	06 94       	lsr	r0
 8c8:	57 95       	ror	r21
 8ca:	47 95       	ror	r20
 8cc:	37 95       	ror	r19
 8ce:	27 95       	ror	r18
 8d0:	ba 95       	dec	r27
 8d2:	c9 f7       	brne	.-14     	; 0x8c6 <__ultoa_invert+0xa2>
 8d4:	62 0f       	add	r22, r18
 8d6:	73 1f       	adc	r23, r19
 8d8:	84 1f       	adc	r24, r20
 8da:	95 1f       	adc	r25, r21
 8dc:	a0 1d       	adc	r26, r0
 8de:	08 95       	ret

000008e0 <_exit>:
 8e0:	f8 94       	cli

000008e2 <__stop_program>:
 8e2:	ff cf       	rjmp	.-2      	; 0x8e2 <__stop_program>


Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800200  00000c4c  00000ce0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800252  00800252  00000d32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d32  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00000d8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d0f  00000000  00000000  00000eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000658  00000000  00000000  00001bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000081c  00000000  00000000  0000221d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  00002a3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000366  00000000  00000000  00002c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005a2  00000000  00000000  00003002  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  000035a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e4       	ldi	r30, 0x4C	; 76
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 35       	cpi	r26, 0x52	; 82
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a2 e5       	ldi	r26, 0x52	; 82
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 35       	cpi	r26, 0x5C	; 92
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	9a d0       	rcall	.+308    	; 0x254 <main>
 120:	93 c5       	rjmp	.+2854   	; 0xc48 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
		MCP_write(MCP_TXB0CTRL + 6 + i, msg->data[i]);
	}
	
	/* Request to send contents of TXB0 */
	MCP_request_to_send(MCP_RTS_TX0);
}
 124:	8a c0       	rjmp	.+276    	; 0x23a <MCP_init>
 126:	08 95       	ret

00000128 <CAN_message_receive>:

can_message_t CAN_message_receive(void)
{
 128:	9f 92       	push	r9
 12a:	af 92       	push	r10
 12c:	bf 92       	push	r11
 12e:	cf 92       	push	r12
 130:	df 92       	push	r13
 132:	ef 92       	push	r14
 134:	ff 92       	push	r15
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	2b 97       	sbiw	r28, 0x0b	; 11
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	7c 01       	movw	r14, r24
	/* Only RXB0 is used */
	
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
 150:	82 e6       	ldi	r24, 0x62	; 98
 152:	45 d0       	rcall	.+138    	; 0x1de <MCP_read>
	message.id = (buffer >> 5);
 154:	82 95       	swap	r24
 156:	86 95       	lsr	r24
 158:	87 70       	andi	r24, 0x07	; 7
 15a:	c8 2e       	mov	r12, r24
 15c:	d1 2c       	mov	r13, r1
	buffer = MCP_read(MCP_RXB0CTRL + 5);
 15e:	85 e6       	ldi	r24, 0x65	; 101
 160:	3e d0       	rcall	.+124    	; 0x1de <MCP_read>
	message.length = (buffer & 0x0F);
 162:	8f 70       	andi	r24, 0x0F	; 15
 164:	98 2e       	mov	r9, r24
	for (uint8_t i = 0; i < message.length; i++) {
 166:	a1 f0       	breq	.+40     	; 0x190 <CAN_message_receive+0x68>
 168:	8e 01       	movw	r16, r28
 16a:	0c 5f       	subi	r16, 0xFC	; 252
 16c:	1f 4f       	sbci	r17, 0xFF	; 255
 16e:	0f 2e       	mov	r0, r31
 170:	f6 e6       	ldi	r31, 0x66	; 102
 172:	af 2e       	mov	r10, r31
 174:	f0 2d       	mov	r31, r0
 176:	a8 0e       	add	r10, r24
 178:	0f 2e       	mov	r0, r31
 17a:	f6 e6       	ldi	r31, 0x66	; 102
 17c:	bf 2e       	mov	r11, r31
 17e:	f0 2d       	mov	r31, r0
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
 180:	8b 2d       	mov	r24, r11
 182:	2d d0       	rcall	.+90     	; 0x1de <MCP_read>
 184:	f8 01       	movw	r30, r16
 186:	81 93       	st	Z+, r24
 188:	8f 01       	movw	r16, r30
 18a:	b3 94       	inc	r11
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
	message.id = (buffer >> 5);
	buffer = MCP_read(MCP_RXB0CTRL + 5);
	message.length = (buffer & 0x0F);
	for (uint8_t i = 0; i < message.length; i++) {
 18c:	ba 10       	cpse	r11, r10
 18e:	f8 cf       	rjmp	.-16     	; 0x180 <CAN_message_receive+0x58>
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
	}
	
	/* Clear CANINTF.RX0IF */
	MCP_modify_bit(MCP_CANINTF, 0x01, 0x00);
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	8c e2       	ldi	r24, 0x2C	; 44
 196:	38 d0       	rcall	.+112    	; 0x208 <MCP_modify_bit>
	
	return message;
 198:	da 82       	std	Y+2, r13	; 0x02
 19a:	c9 82       	std	Y+1, r12	; 0x01
 19c:	9b 82       	std	Y+3, r9	; 0x03
 19e:	8b e0       	ldi	r24, 0x0B	; 11
 1a0:	fe 01       	movw	r30, r28
 1a2:	31 96       	adiw	r30, 0x01	; 1
 1a4:	d7 01       	movw	r26, r14
 1a6:	01 90       	ld	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	8a 95       	dec	r24
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <CAN_message_receive+0x7e>
}
 1ae:	c7 01       	movw	r24, r14
 1b0:	2b 96       	adiw	r28, 0x0b	; 11
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	de bf       	out	0x3e, r29	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	cd bf       	out	0x3d, r28	; 61
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	ff 90       	pop	r15
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	bf 90       	pop	r11
 1ce:	af 90       	pop	r10
 1d0:	9f 90       	pop	r9
 1d2:	08 95       	ret

000001d4 <MCP_reset>:
	SPI_master_transmit(MCP_RX_STATUS);
	//SPI_master_transmit(0x00); // Unneccessary because of "repeat data out"?
	char status = SPDR;
	PORTB |= (1 << PB0);
	return status;
}
 1d4:	28 98       	cbi	0x05, 0	; 5
 1d6:	80 ec       	ldi	r24, 0xC0	; 192
 1d8:	b3 d0       	rcall	.+358    	; 0x340 <SPI_master_transmit>
 1da:	28 9a       	sbi	0x05, 0	; 5
 1dc:	08 95       	ret

000001de <MCP_read>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24
 1e2:	28 98       	cbi	0x05, 0	; 5
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	ac d0       	rcall	.+344    	; 0x340 <SPI_master_transmit>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	aa d0       	rcall	.+340    	; 0x340 <SPI_master_transmit>
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	a8 d0       	rcall	.+336    	; 0x340 <SPI_master_transmit>
 1f0:	8e b5       	in	r24, 0x2e	; 46
 1f2:	28 9a       	sbi	0x05, 0	; 5
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <MCP_read_status>:
 1f8:	28 98       	cbi	0x05, 0	; 5
 1fa:	80 ea       	ldi	r24, 0xA0	; 160
 1fc:	a1 d0       	rcall	.+322    	; 0x340 <SPI_master_transmit>
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	9f d0       	rcall	.+318    	; 0x340 <SPI_master_transmit>
 202:	8e b5       	in	r24, 0x2e	; 46
 204:	28 9a       	sbi	0x05, 0	; 5
 206:	08 95       	ret

00000208 <MCP_modify_bit>:
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
}

/* Changes the value of the register bits specified by the mask */
void MCP_modify_bit(uint8_t addr, uint8_t mask, uint8_t data)
{
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	18 2f       	mov	r17, r24
 210:	d6 2f       	mov	r29, r22
 212:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB0);
 214:	28 98       	cbi	0x05, 0	; 5
	SPI_master_transmit(MCP_BITMOD);
 216:	85 e0       	ldi	r24, 0x05	; 5
 218:	93 d0       	rcall	.+294    	; 0x340 <SPI_master_transmit>
	SPI_master_transmit(addr);
 21a:	81 2f       	mov	r24, r17
 21c:	91 d0       	rcall	.+290    	; 0x340 <SPI_master_transmit>
	SPI_master_transmit(mask);
 21e:	8d 2f       	mov	r24, r29
 220:	8f d0       	rcall	.+286    	; 0x340 <SPI_master_transmit>
	SPI_master_transmit(data);
 222:	8c 2f       	mov	r24, r28
 224:	8d d0       	rcall	.+282    	; 0x340 <SPI_master_transmit>
	PORTB |= (1 << PB0);
 226:	28 9a       	sbi	0x05, 0	; 5
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	1f 91       	pop	r17
 22e:	08 95       	ret

00000230 <MCP_set_mode>:
			break;
		default:
			break;
	}
	
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
 230:	48 2f       	mov	r20, r24
 232:	60 ee       	ldi	r22, 0xE0	; 224
 234:	8f e0       	ldi	r24, 0x0F	; 15
 236:	e8 cf       	rjmp	.-48     	; 0x208 <MCP_modify_bit>
 238:	08 95       	ret

0000023a <MCP_init>:
#include "MCP2515.h"
#include "mcp.h"

void MCP_init(void)
{
	SPI_master_init();
 23a:	7d d0       	rcall	.+250    	; 0x336 <SPI_master_init>
	MCP_reset();
 23c:	cb df       	rcall	.-106    	; 0x1d4 <MCP_reset>
	
	MCP_modify_bit(MCP_RXB0CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX0
 23e:	4f ef       	ldi	r20, 0xFF	; 255
 240:	60 e6       	ldi	r22, 0x60	; 96
 242:	80 e6       	ldi	r24, 0x60	; 96
 244:	e1 df       	rcall	.-62     	; 0x208 <MCP_modify_bit>
	MCP_modify_bit(MCP_RXB1CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX1
 246:	4f ef       	ldi	r20, 0xFF	; 255
 248:	60 e6       	ldi	r22, 0x60	; 96
 24a:	80 e7       	ldi	r24, 0x70	; 112
 24c:	dd df       	rcall	.-70     	; 0x208 <MCP_modify_bit>
	//MCP_set_mode(MODE_LOOPBACK); // Sets loopback operation mode for testing
	MCP_set_mode(MODE_NORMAL); // Sets normal operation mode
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	ef cf       	rjmp	.-34     	; 0x230 <MCP_set_mode>
 252:	08 95       	ret

00000254 <main>:

#include "usart.h"
#include "can.h"

int main(void)
{
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	2b 97       	sbiw	r28, 0x0b	; 11
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
	fdevopen(USART_transmit, USART_receive);
 268:	68 eb       	ldi	r22, 0xB8	; 184
 26a:	71 e0       	ldi	r23, 0x01	; 1
 26c:	80 eb       	ldi	r24, 0xB0	; 176
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	87 d0       	rcall	.+270    	; 0x380 <fdevopen>
	USART_init(MYUBRR);
 272:	87 e6       	ldi	r24, 0x67	; 103
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	69 d0       	rcall	.+210    	; 0x34a <USART_init>
	CAN_init();
 278:	55 df       	rcall	.-342    	; 0x124 <CAN_init>
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		
		status = MCP_read_status();
		printf("Status: %02x\n", status);
 27a:	0f 2e       	mov	r0, r31
 27c:	f6 e0       	ldi	r31, 0x06	; 6
 27e:	cf 2e       	mov	r12, r31
 280:	f2 e0       	ldi	r31, 0x02	; 2
 282:	df 2e       	mov	r13, r31
 284:	f0 2d       	mov	r31, r0
		msg_arrived = (status & 1);
		//msg_arrived = 1;
		if (msg_arrived) {
			received_message = CAN_message_receive();
			printf("ID: %02x\n", received_message.id);
 286:	0f 2e       	mov	r0, r31
 288:	f4 e1       	ldi	r31, 0x14	; 20
 28a:	8f 2e       	mov	r8, r31
 28c:	f2 e0       	ldi	r31, 0x02	; 2
 28e:	9f 2e       	mov	r9, r31
 290:	f0 2d       	mov	r31, r0
			printf("length: %02x\n", received_message.length);
 292:	0f 2e       	mov	r0, r31
 294:	fe e1       	ldi	r31, 0x1E	; 30
 296:	af 2e       	mov	r10, r31
 298:	f2 e0       	ldi	r31, 0x02	; 2
 29a:	bf 2e       	mov	r11, r31
 29c:	f0 2d       	mov	r31, r0
			for (uint8_t i = 0; i < received_message.length; i++) {
 29e:	51 2c       	mov	r5, r1
				printf("Received: %02x\n", received_message.data[i]);
 2a0:	0f 2e       	mov	r0, r31
 2a2:	fc e2       	ldi	r31, 0x2C	; 44
 2a4:	ef 2e       	mov	r14, r31
 2a6:	f2 e0       	ldi	r31, 0x02	; 2
 2a8:	ff 2e       	mov	r15, r31
 2aa:	f0 2d       	mov	r31, r0
		
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		
		status = MCP_read_status();
 2ac:	a5 df       	rcall	.-182    	; 0x1f8 <MCP_read_status>
 2ae:	18 2f       	mov	r17, r24
		printf("Status: %02x\n", status);
 2b0:	1f 92       	push	r1
 2b2:	8f 93       	push	r24
 2b4:	df 92       	push	r13
 2b6:	cf 92       	push	r12
 2b8:	ad d0       	rcall	.+346    	; 0x414 <printf>
		msg_arrived = (status & 1);
		//msg_arrived = 1;
		if (msg_arrived) {
 2ba:	0f 90       	pop	r0
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	0f 90       	pop	r0
 2c2:	10 ff       	sbrs	r17, 0
 2c4:	2b c0       	rjmp	.+86     	; 0x31c <main+0xc8>
			received_message = CAN_message_receive();
 2c6:	ce 01       	movw	r24, r28
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	2e df       	rcall	.-420    	; 0x128 <CAN_message_receive>
 2cc:	6b 80       	ldd	r6, Y+3	; 0x03
			printf("ID: %02x\n", received_message.id);
 2ce:	8a 81       	ldd	r24, Y+2	; 0x02
 2d0:	8f 93       	push	r24
 2d2:	89 81       	ldd	r24, Y+1	; 0x01
 2d4:	8f 93       	push	r24
 2d6:	9f 92       	push	r9
 2d8:	8f 92       	push	r8
 2da:	9c d0       	rcall	.+312    	; 0x414 <printf>
			printf("length: %02x\n", received_message.length);
 2dc:	1f 92       	push	r1
 2de:	6f 92       	push	r6
 2e0:	bf 92       	push	r11
 2e2:	af 92       	push	r10
 2e4:	97 d0       	rcall	.+302    	; 0x414 <printf>
			for (uint8_t i = 0; i < received_message.length; i++) {
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	de bf       	out	0x3e, r29	; 62
 2ec:	0f be       	out	0x3f, r0	; 63
 2ee:	cd bf       	out	0x3d, r28	; 61
 2f0:	66 20       	and	r6, r6
 2f2:	b9 f0       	breq	.+46     	; 0x322 <main+0xce>
 2f4:	8e 01       	movw	r16, r28
 2f6:	0c 5f       	subi	r16, 0xFC	; 252
 2f8:	1f 4f       	sbci	r17, 0xFF	; 255
 2fa:	75 2c       	mov	r7, r5
				printf("Received: %02x\n", received_message.data[i]);
 2fc:	f8 01       	movw	r30, r16
 2fe:	81 91       	ld	r24, Z+
 300:	8f 01       	movw	r16, r30
 302:	1f 92       	push	r1
 304:	8f 93       	push	r24
 306:	ff 92       	push	r15
 308:	ef 92       	push	r14
 30a:	84 d0       	rcall	.+264    	; 0x414 <printf>
		//msg_arrived = 1;
		if (msg_arrived) {
			received_message = CAN_message_receive();
			printf("ID: %02x\n", received_message.id);
			printf("length: %02x\n", received_message.length);
			for (uint8_t i = 0; i < received_message.length; i++) {
 30c:	73 94       	inc	r7
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	0f 90       	pop	r0
 316:	76 10       	cpse	r7, r6
 318:	f1 cf       	rjmp	.-30     	; 0x2fc <main+0xa8>
 31a:	03 c0       	rjmp	.+6      	; 0x322 <main+0xce>
				printf("Received: %02x\n", received_message.data[i]);
			}
		} else {
			printf("%s\n", "No message in buffer");
 31c:	8c e3       	ldi	r24, 0x3C	; 60
 31e:	92 e0       	ldi	r25, 0x02	; 2
 320:	8a d0       	rcall	.+276    	; 0x436 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 322:	ff ef       	ldi	r31, 0xFF	; 255
 324:	29 e6       	ldi	r18, 0x69	; 105
 326:	88 e1       	ldi	r24, 0x18	; 24
 328:	f1 50       	subi	r31, 0x01	; 1
 32a:	20 40       	sbci	r18, 0x00	; 0
 32c:	80 40       	sbci	r24, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <main+0xd4>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0xde>
 332:	00 00       	nop
 334:	bb cf       	rjmp	.-138    	; 0x2ac <main+0x58>

00000336 <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB0)|(1 << PB2)|(1 << PB1); // Setting ~SS necessary?
 336:	87 e0       	ldi	r24, 0x07	; 7
 338:	84 b9       	out	0x04, r24	; 4
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
 33a:	81 e5       	ldi	r24, 0x51	; 81
 33c:	8c bd       	out	0x2c, r24	; 44
 33e:	08 95       	ret

00000340 <SPI_master_transmit>:
}

void SPI_master_transmit(uint8_t cData)
{
	/* Start transmission */
	SPDR = cData;
 340:	8e bd       	out	0x2e, r24	; 46
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
 342:	0d b4       	in	r0, 0x2d	; 45
 344:	07 fe       	sbrs	r0, 7
 346:	fd cf       	rjmp	.-6      	; 0x342 <SPI_master_transmit+0x2>
		;
	}
}
 348:	08 95       	ret

0000034a <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 34a:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 34e:	80 93 c4 00 	sts	0x00C4, r24
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 352:	88 e1       	ldi	r24, 0x18	; 24
 354:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << USBS0)|(3 << UCSZ10);
 358:	8e e0       	ldi	r24, 0x0E	; 14
 35a:	80 93 c2 00 	sts	0x00C2, r24
 35e:	08 95       	ret

00000360 <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 360:	e0 ec       	ldi	r30, 0xC0	; 192
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	90 81       	ld	r25, Z
 366:	95 ff       	sbrs	r25, 5
 368:	fd cf       	rjmp	.-6      	; 0x364 <USART_transmit+0x4>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 36a:	80 93 c6 00 	sts	0x00C6, r24
 36e:	08 95       	ret

00000370 <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 370:	e0 ec       	ldi	r30, 0xC0	; 192
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	88 23       	and	r24, r24
 378:	ec f7       	brge	.-6      	; 0x374 <USART_receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 37a:	80 91 c6 00 	lds	r24, 0x00C6
}
 37e:	08 95       	ret

00000380 <fdevopen>:
 380:	0f 93       	push	r16
 382:	1f 93       	push	r17
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	ec 01       	movw	r28, r24
 38a:	8b 01       	movw	r16, r22
 38c:	00 97       	sbiw	r24, 0x00	; 0
 38e:	31 f4       	brne	.+12     	; 0x39c <fdevopen+0x1c>
 390:	61 15       	cp	r22, r1
 392:	71 05       	cpc	r23, r1
 394:	19 f4       	brne	.+6      	; 0x39c <fdevopen+0x1c>
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	37 c0       	rjmp	.+110    	; 0x40a <fdevopen+0x8a>
 39c:	6e e0       	ldi	r22, 0x0E	; 14
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	63 d2       	rcall	.+1222   	; 0x86c <calloc>
 3a6:	fc 01       	movw	r30, r24
 3a8:	00 97       	sbiw	r24, 0x00	; 0
 3aa:	a9 f3       	breq	.-22     	; 0x396 <fdevopen+0x16>
 3ac:	80 e8       	ldi	r24, 0x80	; 128
 3ae:	83 83       	std	Z+3, r24	; 0x03
 3b0:	01 15       	cp	r16, r1
 3b2:	11 05       	cpc	r17, r1
 3b4:	71 f0       	breq	.+28     	; 0x3d2 <fdevopen+0x52>
 3b6:	13 87       	std	Z+11, r17	; 0x0b
 3b8:	02 87       	std	Z+10, r16	; 0x0a
 3ba:	81 e8       	ldi	r24, 0x81	; 129
 3bc:	83 83       	std	Z+3, r24	; 0x03
 3be:	80 91 52 02 	lds	r24, 0x0252
 3c2:	90 91 53 02 	lds	r25, 0x0253
 3c6:	89 2b       	or	r24, r25
 3c8:	21 f4       	brne	.+8      	; 0x3d2 <fdevopen+0x52>
 3ca:	f0 93 53 02 	sts	0x0253, r31
 3ce:	e0 93 52 02 	sts	0x0252, r30
 3d2:	20 97       	sbiw	r28, 0x00	; 0
 3d4:	c9 f0       	breq	.+50     	; 0x408 <fdevopen+0x88>
 3d6:	d1 87       	std	Z+9, r29	; 0x09
 3d8:	c0 87       	std	Z+8, r28	; 0x08
 3da:	83 81       	ldd	r24, Z+3	; 0x03
 3dc:	82 60       	ori	r24, 0x02	; 2
 3de:	83 83       	std	Z+3, r24	; 0x03
 3e0:	80 91 54 02 	lds	r24, 0x0254
 3e4:	90 91 55 02 	lds	r25, 0x0255
 3e8:	89 2b       	or	r24, r25
 3ea:	71 f4       	brne	.+28     	; 0x408 <fdevopen+0x88>
 3ec:	f0 93 55 02 	sts	0x0255, r31
 3f0:	e0 93 54 02 	sts	0x0254, r30
 3f4:	80 91 56 02 	lds	r24, 0x0256
 3f8:	90 91 57 02 	lds	r25, 0x0257
 3fc:	89 2b       	or	r24, r25
 3fe:	21 f4       	brne	.+8      	; 0x408 <fdevopen+0x88>
 400:	f0 93 57 02 	sts	0x0257, r31
 404:	e0 93 56 02 	sts	0x0256, r30
 408:	cf 01       	movw	r24, r30
 40a:	df 91       	pop	r29
 40c:	cf 91       	pop	r28
 40e:	1f 91       	pop	r17
 410:	0f 91       	pop	r16
 412:	08 95       	ret

00000414 <printf>:
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	fe 01       	movw	r30, r28
 41e:	36 96       	adiw	r30, 0x06	; 6
 420:	61 91       	ld	r22, Z+
 422:	71 91       	ld	r23, Z+
 424:	af 01       	movw	r20, r30
 426:	80 91 54 02 	lds	r24, 0x0254
 42a:	90 91 55 02 	lds	r25, 0x0255
 42e:	30 d0       	rcall	.+96     	; 0x490 <vfprintf>
 430:	df 91       	pop	r29
 432:	cf 91       	pop	r28
 434:	08 95       	ret

00000436 <puts>:
 436:	0f 93       	push	r16
 438:	1f 93       	push	r17
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	e0 91 54 02 	lds	r30, 0x0254
 442:	f0 91 55 02 	lds	r31, 0x0255
 446:	23 81       	ldd	r18, Z+3	; 0x03
 448:	21 ff       	sbrs	r18, 1
 44a:	1b c0       	rjmp	.+54     	; 0x482 <puts+0x4c>
 44c:	ec 01       	movw	r28, r24
 44e:	00 e0       	ldi	r16, 0x00	; 0
 450:	10 e0       	ldi	r17, 0x00	; 0
 452:	89 91       	ld	r24, Y+
 454:	60 91 54 02 	lds	r22, 0x0254
 458:	70 91 55 02 	lds	r23, 0x0255
 45c:	db 01       	movw	r26, r22
 45e:	18 96       	adiw	r26, 0x08	; 8
 460:	ed 91       	ld	r30, X+
 462:	fc 91       	ld	r31, X
 464:	19 97       	sbiw	r26, 0x09	; 9
 466:	88 23       	and	r24, r24
 468:	31 f0       	breq	.+12     	; 0x476 <puts+0x40>
 46a:	19 95       	eicall
 46c:	89 2b       	or	r24, r25
 46e:	89 f3       	breq	.-30     	; 0x452 <puts+0x1c>
 470:	0f ef       	ldi	r16, 0xFF	; 255
 472:	1f ef       	ldi	r17, 0xFF	; 255
 474:	ee cf       	rjmp	.-36     	; 0x452 <puts+0x1c>
 476:	8a e0       	ldi	r24, 0x0A	; 10
 478:	19 95       	eicall
 47a:	89 2b       	or	r24, r25
 47c:	11 f4       	brne	.+4      	; 0x482 <puts+0x4c>
 47e:	c8 01       	movw	r24, r16
 480:	02 c0       	rjmp	.+4      	; 0x486 <puts+0x50>
 482:	8f ef       	ldi	r24, 0xFF	; 255
 484:	9f ef       	ldi	r25, 0xFF	; 255
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	1f 91       	pop	r17
 48c:	0f 91       	pop	r16
 48e:	08 95       	ret

00000490 <vfprintf>:
 490:	2f 92       	push	r2
 492:	3f 92       	push	r3
 494:	4f 92       	push	r4
 496:	5f 92       	push	r5
 498:	6f 92       	push	r6
 49a:	7f 92       	push	r7
 49c:	8f 92       	push	r8
 49e:	9f 92       	push	r9
 4a0:	af 92       	push	r10
 4a2:	bf 92       	push	r11
 4a4:	cf 92       	push	r12
 4a6:	df 92       	push	r13
 4a8:	ef 92       	push	r14
 4aa:	ff 92       	push	r15
 4ac:	0f 93       	push	r16
 4ae:	1f 93       	push	r17
 4b0:	cf 93       	push	r28
 4b2:	df 93       	push	r29
 4b4:	cd b7       	in	r28, 0x3d	; 61
 4b6:	de b7       	in	r29, 0x3e	; 62
 4b8:	2c 97       	sbiw	r28, 0x0c	; 12
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61
 4c4:	7c 01       	movw	r14, r24
 4c6:	6b 01       	movw	r12, r22
 4c8:	8a 01       	movw	r16, r20
 4ca:	fc 01       	movw	r30, r24
 4cc:	17 82       	std	Z+7, r1	; 0x07
 4ce:	16 82       	std	Z+6, r1	; 0x06
 4d0:	83 81       	ldd	r24, Z+3	; 0x03
 4d2:	81 ff       	sbrs	r24, 1
 4d4:	b0 c1       	rjmp	.+864    	; 0x836 <vfprintf+0x3a6>
 4d6:	ce 01       	movw	r24, r28
 4d8:	01 96       	adiw	r24, 0x01	; 1
 4da:	4c 01       	movw	r8, r24
 4dc:	f7 01       	movw	r30, r14
 4de:	93 81       	ldd	r25, Z+3	; 0x03
 4e0:	f6 01       	movw	r30, r12
 4e2:	93 fd       	sbrc	r25, 3
 4e4:	85 91       	lpm	r24, Z+
 4e6:	93 ff       	sbrs	r25, 3
 4e8:	81 91       	ld	r24, Z+
 4ea:	6f 01       	movw	r12, r30
 4ec:	88 23       	and	r24, r24
 4ee:	09 f4       	brne	.+2      	; 0x4f2 <vfprintf+0x62>
 4f0:	9e c1       	rjmp	.+828    	; 0x82e <vfprintf+0x39e>
 4f2:	85 32       	cpi	r24, 0x25	; 37
 4f4:	39 f4       	brne	.+14     	; 0x504 <vfprintf+0x74>
 4f6:	93 fd       	sbrc	r25, 3
 4f8:	85 91       	lpm	r24, Z+
 4fa:	93 ff       	sbrs	r25, 3
 4fc:	81 91       	ld	r24, Z+
 4fe:	6f 01       	movw	r12, r30
 500:	85 32       	cpi	r24, 0x25	; 37
 502:	21 f4       	brne	.+8      	; 0x50c <vfprintf+0x7c>
 504:	b7 01       	movw	r22, r14
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	0f d3       	rcall	.+1566   	; 0xb28 <fputc>
 50a:	e8 cf       	rjmp	.-48     	; 0x4dc <vfprintf+0x4c>
 50c:	51 2c       	mov	r5, r1
 50e:	31 2c       	mov	r3, r1
 510:	20 e0       	ldi	r18, 0x00	; 0
 512:	20 32       	cpi	r18, 0x20	; 32
 514:	a0 f4       	brcc	.+40     	; 0x53e <vfprintf+0xae>
 516:	8b 32       	cpi	r24, 0x2B	; 43
 518:	69 f0       	breq	.+26     	; 0x534 <vfprintf+0xa4>
 51a:	30 f4       	brcc	.+12     	; 0x528 <vfprintf+0x98>
 51c:	80 32       	cpi	r24, 0x20	; 32
 51e:	59 f0       	breq	.+22     	; 0x536 <vfprintf+0xa6>
 520:	83 32       	cpi	r24, 0x23	; 35
 522:	69 f4       	brne	.+26     	; 0x53e <vfprintf+0xae>
 524:	20 61       	ori	r18, 0x10	; 16
 526:	2c c0       	rjmp	.+88     	; 0x580 <vfprintf+0xf0>
 528:	8d 32       	cpi	r24, 0x2D	; 45
 52a:	39 f0       	breq	.+14     	; 0x53a <vfprintf+0xaa>
 52c:	80 33       	cpi	r24, 0x30	; 48
 52e:	39 f4       	brne	.+14     	; 0x53e <vfprintf+0xae>
 530:	21 60       	ori	r18, 0x01	; 1
 532:	26 c0       	rjmp	.+76     	; 0x580 <vfprintf+0xf0>
 534:	22 60       	ori	r18, 0x02	; 2
 536:	24 60       	ori	r18, 0x04	; 4
 538:	23 c0       	rjmp	.+70     	; 0x580 <vfprintf+0xf0>
 53a:	28 60       	ori	r18, 0x08	; 8
 53c:	21 c0       	rjmp	.+66     	; 0x580 <vfprintf+0xf0>
 53e:	27 fd       	sbrc	r18, 7
 540:	27 c0       	rjmp	.+78     	; 0x590 <vfprintf+0x100>
 542:	30 ed       	ldi	r19, 0xD0	; 208
 544:	38 0f       	add	r19, r24
 546:	3a 30       	cpi	r19, 0x0A	; 10
 548:	78 f4       	brcc	.+30     	; 0x568 <vfprintf+0xd8>
 54a:	26 ff       	sbrs	r18, 6
 54c:	06 c0       	rjmp	.+12     	; 0x55a <vfprintf+0xca>
 54e:	fa e0       	ldi	r31, 0x0A	; 10
 550:	5f 9e       	mul	r5, r31
 552:	30 0d       	add	r19, r0
 554:	11 24       	eor	r1, r1
 556:	53 2e       	mov	r5, r19
 558:	13 c0       	rjmp	.+38     	; 0x580 <vfprintf+0xf0>
 55a:	8a e0       	ldi	r24, 0x0A	; 10
 55c:	38 9e       	mul	r3, r24
 55e:	30 0d       	add	r19, r0
 560:	11 24       	eor	r1, r1
 562:	33 2e       	mov	r3, r19
 564:	20 62       	ori	r18, 0x20	; 32
 566:	0c c0       	rjmp	.+24     	; 0x580 <vfprintf+0xf0>
 568:	8e 32       	cpi	r24, 0x2E	; 46
 56a:	21 f4       	brne	.+8      	; 0x574 <vfprintf+0xe4>
 56c:	26 fd       	sbrc	r18, 6
 56e:	5f c1       	rjmp	.+702    	; 0x82e <vfprintf+0x39e>
 570:	20 64       	ori	r18, 0x40	; 64
 572:	06 c0       	rjmp	.+12     	; 0x580 <vfprintf+0xf0>
 574:	8c 36       	cpi	r24, 0x6C	; 108
 576:	11 f4       	brne	.+4      	; 0x57c <vfprintf+0xec>
 578:	20 68       	ori	r18, 0x80	; 128
 57a:	02 c0       	rjmp	.+4      	; 0x580 <vfprintf+0xf0>
 57c:	88 36       	cpi	r24, 0x68	; 104
 57e:	41 f4       	brne	.+16     	; 0x590 <vfprintf+0x100>
 580:	f6 01       	movw	r30, r12
 582:	93 fd       	sbrc	r25, 3
 584:	85 91       	lpm	r24, Z+
 586:	93 ff       	sbrs	r25, 3
 588:	81 91       	ld	r24, Z+
 58a:	6f 01       	movw	r12, r30
 58c:	81 11       	cpse	r24, r1
 58e:	c1 cf       	rjmp	.-126    	; 0x512 <vfprintf+0x82>
 590:	98 2f       	mov	r25, r24
 592:	9f 7d       	andi	r25, 0xDF	; 223
 594:	95 54       	subi	r25, 0x45	; 69
 596:	93 30       	cpi	r25, 0x03	; 3
 598:	28 f4       	brcc	.+10     	; 0x5a4 <vfprintf+0x114>
 59a:	0c 5f       	subi	r16, 0xFC	; 252
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	ff e3       	ldi	r31, 0x3F	; 63
 5a0:	f9 83       	std	Y+1, r31	; 0x01
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <vfprintf+0x12e>
 5a4:	83 36       	cpi	r24, 0x63	; 99
 5a6:	31 f0       	breq	.+12     	; 0x5b4 <vfprintf+0x124>
 5a8:	83 37       	cpi	r24, 0x73	; 115
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <vfprintf+0x138>
 5ac:	83 35       	cpi	r24, 0x53	; 83
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <vfprintf+0x122>
 5b0:	57 c0       	rjmp	.+174    	; 0x660 <vfprintf+0x1d0>
 5b2:	21 c0       	rjmp	.+66     	; 0x5f6 <vfprintf+0x166>
 5b4:	f8 01       	movw	r30, r16
 5b6:	80 81       	ld	r24, Z
 5b8:	89 83       	std	Y+1, r24	; 0x01
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	44 24       	eor	r4, r4
 5c0:	43 94       	inc	r4
 5c2:	51 2c       	mov	r5, r1
 5c4:	54 01       	movw	r10, r8
 5c6:	14 c0       	rjmp	.+40     	; 0x5f0 <vfprintf+0x160>
 5c8:	38 01       	movw	r6, r16
 5ca:	f2 e0       	ldi	r31, 0x02	; 2
 5cc:	6f 0e       	add	r6, r31
 5ce:	71 1c       	adc	r7, r1
 5d0:	f8 01       	movw	r30, r16
 5d2:	a0 80       	ld	r10, Z
 5d4:	b1 80       	ldd	r11, Z+1	; 0x01
 5d6:	26 ff       	sbrs	r18, 6
 5d8:	03 c0       	rjmp	.+6      	; 0x5e0 <vfprintf+0x150>
 5da:	65 2d       	mov	r22, r5
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <vfprintf+0x154>
 5e0:	6f ef       	ldi	r22, 0xFF	; 255
 5e2:	7f ef       	ldi	r23, 0xFF	; 255
 5e4:	c5 01       	movw	r24, r10
 5e6:	2c 87       	std	Y+12, r18	; 0x0c
 5e8:	94 d2       	rcall	.+1320   	; 0xb12 <strnlen>
 5ea:	2c 01       	movw	r4, r24
 5ec:	83 01       	movw	r16, r6
 5ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f0:	2f 77       	andi	r18, 0x7F	; 127
 5f2:	22 2e       	mov	r2, r18
 5f4:	16 c0       	rjmp	.+44     	; 0x622 <vfprintf+0x192>
 5f6:	38 01       	movw	r6, r16
 5f8:	f2 e0       	ldi	r31, 0x02	; 2
 5fa:	6f 0e       	add	r6, r31
 5fc:	71 1c       	adc	r7, r1
 5fe:	f8 01       	movw	r30, r16
 600:	a0 80       	ld	r10, Z
 602:	b1 80       	ldd	r11, Z+1	; 0x01
 604:	26 ff       	sbrs	r18, 6
 606:	03 c0       	rjmp	.+6      	; 0x60e <vfprintf+0x17e>
 608:	65 2d       	mov	r22, r5
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	02 c0       	rjmp	.+4      	; 0x612 <vfprintf+0x182>
 60e:	6f ef       	ldi	r22, 0xFF	; 255
 610:	7f ef       	ldi	r23, 0xFF	; 255
 612:	c5 01       	movw	r24, r10
 614:	2c 87       	std	Y+12, r18	; 0x0c
 616:	6b d2       	rcall	.+1238   	; 0xaee <strnlen_P>
 618:	2c 01       	movw	r4, r24
 61a:	2c 85       	ldd	r18, Y+12	; 0x0c
 61c:	20 68       	ori	r18, 0x80	; 128
 61e:	22 2e       	mov	r2, r18
 620:	83 01       	movw	r16, r6
 622:	23 fc       	sbrc	r2, 3
 624:	19 c0       	rjmp	.+50     	; 0x658 <vfprintf+0x1c8>
 626:	83 2d       	mov	r24, r3
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	48 16       	cp	r4, r24
 62c:	59 06       	cpc	r5, r25
 62e:	a0 f4       	brcc	.+40     	; 0x658 <vfprintf+0x1c8>
 630:	b7 01       	movw	r22, r14
 632:	80 e2       	ldi	r24, 0x20	; 32
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	78 d2       	rcall	.+1264   	; 0xb28 <fputc>
 638:	3a 94       	dec	r3
 63a:	f5 cf       	rjmp	.-22     	; 0x626 <vfprintf+0x196>
 63c:	f5 01       	movw	r30, r10
 63e:	27 fc       	sbrc	r2, 7
 640:	85 91       	lpm	r24, Z+
 642:	27 fe       	sbrs	r2, 7
 644:	81 91       	ld	r24, Z+
 646:	5f 01       	movw	r10, r30
 648:	b7 01       	movw	r22, r14
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	6d d2       	rcall	.+1242   	; 0xb28 <fputc>
 64e:	31 10       	cpse	r3, r1
 650:	3a 94       	dec	r3
 652:	f1 e0       	ldi	r31, 0x01	; 1
 654:	4f 1a       	sub	r4, r31
 656:	51 08       	sbc	r5, r1
 658:	41 14       	cp	r4, r1
 65a:	51 04       	cpc	r5, r1
 65c:	79 f7       	brne	.-34     	; 0x63c <vfprintf+0x1ac>
 65e:	de c0       	rjmp	.+444    	; 0x81c <vfprintf+0x38c>
 660:	84 36       	cpi	r24, 0x64	; 100
 662:	11 f0       	breq	.+4      	; 0x668 <vfprintf+0x1d8>
 664:	89 36       	cpi	r24, 0x69	; 105
 666:	31 f5       	brne	.+76     	; 0x6b4 <vfprintf+0x224>
 668:	f8 01       	movw	r30, r16
 66a:	27 ff       	sbrs	r18, 7
 66c:	07 c0       	rjmp	.+14     	; 0x67c <vfprintf+0x1ec>
 66e:	60 81       	ld	r22, Z
 670:	71 81       	ldd	r23, Z+1	; 0x01
 672:	82 81       	ldd	r24, Z+2	; 0x02
 674:	93 81       	ldd	r25, Z+3	; 0x03
 676:	0c 5f       	subi	r16, 0xFC	; 252
 678:	1f 4f       	sbci	r17, 0xFF	; 255
 67a:	08 c0       	rjmp	.+16     	; 0x68c <vfprintf+0x1fc>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	88 27       	eor	r24, r24
 682:	77 fd       	sbrc	r23, 7
 684:	80 95       	com	r24
 686:	98 2f       	mov	r25, r24
 688:	0e 5f       	subi	r16, 0xFE	; 254
 68a:	1f 4f       	sbci	r17, 0xFF	; 255
 68c:	2f 76       	andi	r18, 0x6F	; 111
 68e:	b2 2e       	mov	r11, r18
 690:	97 ff       	sbrs	r25, 7
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <vfprintf+0x216>
 694:	90 95       	com	r25
 696:	80 95       	com	r24
 698:	70 95       	com	r23
 69a:	61 95       	neg	r22
 69c:	7f 4f       	sbci	r23, 0xFF	; 255
 69e:	8f 4f       	sbci	r24, 0xFF	; 255
 6a0:	9f 4f       	sbci	r25, 0xFF	; 255
 6a2:	20 68       	ori	r18, 0x80	; 128
 6a4:	b2 2e       	mov	r11, r18
 6a6:	2a e0       	ldi	r18, 0x0A	; 10
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	a4 01       	movw	r20, r8
 6ac:	6f d2       	rcall	.+1246   	; 0xb8c <__ultoa_invert>
 6ae:	a8 2e       	mov	r10, r24
 6b0:	a8 18       	sub	r10, r8
 6b2:	43 c0       	rjmp	.+134    	; 0x73a <vfprintf+0x2aa>
 6b4:	85 37       	cpi	r24, 0x75	; 117
 6b6:	29 f4       	brne	.+10     	; 0x6c2 <vfprintf+0x232>
 6b8:	2f 7e       	andi	r18, 0xEF	; 239
 6ba:	b2 2e       	mov	r11, r18
 6bc:	2a e0       	ldi	r18, 0x0A	; 10
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	25 c0       	rjmp	.+74     	; 0x70c <vfprintf+0x27c>
 6c2:	f2 2f       	mov	r31, r18
 6c4:	f9 7f       	andi	r31, 0xF9	; 249
 6c6:	bf 2e       	mov	r11, r31
 6c8:	8f 36       	cpi	r24, 0x6F	; 111
 6ca:	c1 f0       	breq	.+48     	; 0x6fc <vfprintf+0x26c>
 6cc:	18 f4       	brcc	.+6      	; 0x6d4 <vfprintf+0x244>
 6ce:	88 35       	cpi	r24, 0x58	; 88
 6d0:	79 f0       	breq	.+30     	; 0x6f0 <vfprintf+0x260>
 6d2:	ad c0       	rjmp	.+346    	; 0x82e <vfprintf+0x39e>
 6d4:	80 37       	cpi	r24, 0x70	; 112
 6d6:	19 f0       	breq	.+6      	; 0x6de <vfprintf+0x24e>
 6d8:	88 37       	cpi	r24, 0x78	; 120
 6da:	21 f0       	breq	.+8      	; 0x6e4 <vfprintf+0x254>
 6dc:	a8 c0       	rjmp	.+336    	; 0x82e <vfprintf+0x39e>
 6de:	2f 2f       	mov	r18, r31
 6e0:	20 61       	ori	r18, 0x10	; 16
 6e2:	b2 2e       	mov	r11, r18
 6e4:	b4 fe       	sbrs	r11, 4
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <vfprintf+0x272>
 6e8:	8b 2d       	mov	r24, r11
 6ea:	84 60       	ori	r24, 0x04	; 4
 6ec:	b8 2e       	mov	r11, r24
 6ee:	09 c0       	rjmp	.+18     	; 0x702 <vfprintf+0x272>
 6f0:	24 ff       	sbrs	r18, 4
 6f2:	0a c0       	rjmp	.+20     	; 0x708 <vfprintf+0x278>
 6f4:	9f 2f       	mov	r25, r31
 6f6:	96 60       	ori	r25, 0x06	; 6
 6f8:	b9 2e       	mov	r11, r25
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <vfprintf+0x278>
 6fc:	28 e0       	ldi	r18, 0x08	; 8
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	05 c0       	rjmp	.+10     	; 0x70c <vfprintf+0x27c>
 702:	20 e1       	ldi	r18, 0x10	; 16
 704:	30 e0       	ldi	r19, 0x00	; 0
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x27c>
 708:	20 e1       	ldi	r18, 0x10	; 16
 70a:	32 e0       	ldi	r19, 0x02	; 2
 70c:	f8 01       	movw	r30, r16
 70e:	b7 fe       	sbrs	r11, 7
 710:	07 c0       	rjmp	.+14     	; 0x720 <vfprintf+0x290>
 712:	60 81       	ld	r22, Z
 714:	71 81       	ldd	r23, Z+1	; 0x01
 716:	82 81       	ldd	r24, Z+2	; 0x02
 718:	93 81       	ldd	r25, Z+3	; 0x03
 71a:	0c 5f       	subi	r16, 0xFC	; 252
 71c:	1f 4f       	sbci	r17, 0xFF	; 255
 71e:	06 c0       	rjmp	.+12     	; 0x72c <vfprintf+0x29c>
 720:	60 81       	ld	r22, Z
 722:	71 81       	ldd	r23, Z+1	; 0x01
 724:	80 e0       	ldi	r24, 0x00	; 0
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 5f       	subi	r16, 0xFE	; 254
 72a:	1f 4f       	sbci	r17, 0xFF	; 255
 72c:	a4 01       	movw	r20, r8
 72e:	2e d2       	rcall	.+1116   	; 0xb8c <__ultoa_invert>
 730:	a8 2e       	mov	r10, r24
 732:	a8 18       	sub	r10, r8
 734:	fb 2d       	mov	r31, r11
 736:	ff 77       	andi	r31, 0x7F	; 127
 738:	bf 2e       	mov	r11, r31
 73a:	b6 fe       	sbrs	r11, 6
 73c:	0b c0       	rjmp	.+22     	; 0x754 <vfprintf+0x2c4>
 73e:	2b 2d       	mov	r18, r11
 740:	2e 7f       	andi	r18, 0xFE	; 254
 742:	a5 14       	cp	r10, r5
 744:	50 f4       	brcc	.+20     	; 0x75a <vfprintf+0x2ca>
 746:	b4 fe       	sbrs	r11, 4
 748:	0a c0       	rjmp	.+20     	; 0x75e <vfprintf+0x2ce>
 74a:	b2 fc       	sbrc	r11, 2
 74c:	08 c0       	rjmp	.+16     	; 0x75e <vfprintf+0x2ce>
 74e:	2b 2d       	mov	r18, r11
 750:	2e 7e       	andi	r18, 0xEE	; 238
 752:	05 c0       	rjmp	.+10     	; 0x75e <vfprintf+0x2ce>
 754:	7a 2c       	mov	r7, r10
 756:	2b 2d       	mov	r18, r11
 758:	03 c0       	rjmp	.+6      	; 0x760 <vfprintf+0x2d0>
 75a:	7a 2c       	mov	r7, r10
 75c:	01 c0       	rjmp	.+2      	; 0x760 <vfprintf+0x2d0>
 75e:	75 2c       	mov	r7, r5
 760:	24 ff       	sbrs	r18, 4
 762:	0d c0       	rjmp	.+26     	; 0x77e <vfprintf+0x2ee>
 764:	fe 01       	movw	r30, r28
 766:	ea 0d       	add	r30, r10
 768:	f1 1d       	adc	r31, r1
 76a:	80 81       	ld	r24, Z
 76c:	80 33       	cpi	r24, 0x30	; 48
 76e:	11 f4       	brne	.+4      	; 0x774 <vfprintf+0x2e4>
 770:	29 7e       	andi	r18, 0xE9	; 233
 772:	09 c0       	rjmp	.+18     	; 0x786 <vfprintf+0x2f6>
 774:	22 ff       	sbrs	r18, 2
 776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0x2f4>
 778:	73 94       	inc	r7
 77a:	73 94       	inc	r7
 77c:	04 c0       	rjmp	.+8      	; 0x786 <vfprintf+0x2f6>
 77e:	82 2f       	mov	r24, r18
 780:	86 78       	andi	r24, 0x86	; 134
 782:	09 f0       	breq	.+2      	; 0x786 <vfprintf+0x2f6>
 784:	73 94       	inc	r7
 786:	23 fd       	sbrc	r18, 3
 788:	12 c0       	rjmp	.+36     	; 0x7ae <vfprintf+0x31e>
 78a:	20 ff       	sbrs	r18, 0
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0x30a>
 78e:	5a 2c       	mov	r5, r10
 790:	73 14       	cp	r7, r3
 792:	18 f4       	brcc	.+6      	; 0x79a <vfprintf+0x30a>
 794:	53 0c       	add	r5, r3
 796:	57 18       	sub	r5, r7
 798:	73 2c       	mov	r7, r3
 79a:	73 14       	cp	r7, r3
 79c:	60 f4       	brcc	.+24     	; 0x7b6 <vfprintf+0x326>
 79e:	b7 01       	movw	r22, r14
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	2c 87       	std	Y+12, r18	; 0x0c
 7a6:	c0 d1       	rcall	.+896    	; 0xb28 <fputc>
 7a8:	73 94       	inc	r7
 7aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ac:	f6 cf       	rjmp	.-20     	; 0x79a <vfprintf+0x30a>
 7ae:	73 14       	cp	r7, r3
 7b0:	10 f4       	brcc	.+4      	; 0x7b6 <vfprintf+0x326>
 7b2:	37 18       	sub	r3, r7
 7b4:	01 c0       	rjmp	.+2      	; 0x7b8 <vfprintf+0x328>
 7b6:	31 2c       	mov	r3, r1
 7b8:	24 ff       	sbrs	r18, 4
 7ba:	11 c0       	rjmp	.+34     	; 0x7de <vfprintf+0x34e>
 7bc:	b7 01       	movw	r22, r14
 7be:	80 e3       	ldi	r24, 0x30	; 48
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	2c 87       	std	Y+12, r18	; 0x0c
 7c4:	b1 d1       	rcall	.+866    	; 0xb28 <fputc>
 7c6:	2c 85       	ldd	r18, Y+12	; 0x0c
 7c8:	22 ff       	sbrs	r18, 2
 7ca:	16 c0       	rjmp	.+44     	; 0x7f8 <vfprintf+0x368>
 7cc:	21 ff       	sbrs	r18, 1
 7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <vfprintf+0x346>
 7d0:	88 e5       	ldi	r24, 0x58	; 88
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x34a>
 7d6:	88 e7       	ldi	r24, 0x78	; 120
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	b7 01       	movw	r22, r14
 7dc:	0c c0       	rjmp	.+24     	; 0x7f6 <vfprintf+0x366>
 7de:	82 2f       	mov	r24, r18
 7e0:	86 78       	andi	r24, 0x86	; 134
 7e2:	51 f0       	breq	.+20     	; 0x7f8 <vfprintf+0x368>
 7e4:	21 fd       	sbrc	r18, 1
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <vfprintf+0x35c>
 7e8:	80 e2       	ldi	r24, 0x20	; 32
 7ea:	01 c0       	rjmp	.+2      	; 0x7ee <vfprintf+0x35e>
 7ec:	8b e2       	ldi	r24, 0x2B	; 43
 7ee:	27 fd       	sbrc	r18, 7
 7f0:	8d e2       	ldi	r24, 0x2D	; 45
 7f2:	b7 01       	movw	r22, r14
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	98 d1       	rcall	.+816    	; 0xb28 <fputc>
 7f8:	a5 14       	cp	r10, r5
 7fa:	30 f4       	brcc	.+12     	; 0x808 <vfprintf+0x378>
 7fc:	b7 01       	movw	r22, r14
 7fe:	80 e3       	ldi	r24, 0x30	; 48
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	92 d1       	rcall	.+804    	; 0xb28 <fputc>
 804:	5a 94       	dec	r5
 806:	f8 cf       	rjmp	.-16     	; 0x7f8 <vfprintf+0x368>
 808:	aa 94       	dec	r10
 80a:	f4 01       	movw	r30, r8
 80c:	ea 0d       	add	r30, r10
 80e:	f1 1d       	adc	r31, r1
 810:	80 81       	ld	r24, Z
 812:	b7 01       	movw	r22, r14
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	88 d1       	rcall	.+784    	; 0xb28 <fputc>
 818:	a1 10       	cpse	r10, r1
 81a:	f6 cf       	rjmp	.-20     	; 0x808 <vfprintf+0x378>
 81c:	33 20       	and	r3, r3
 81e:	09 f4       	brne	.+2      	; 0x822 <vfprintf+0x392>
 820:	5d ce       	rjmp	.-838    	; 0x4dc <vfprintf+0x4c>
 822:	b7 01       	movw	r22, r14
 824:	80 e2       	ldi	r24, 0x20	; 32
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	7f d1       	rcall	.+766    	; 0xb28 <fputc>
 82a:	3a 94       	dec	r3
 82c:	f7 cf       	rjmp	.-18     	; 0x81c <vfprintf+0x38c>
 82e:	f7 01       	movw	r30, r14
 830:	86 81       	ldd	r24, Z+6	; 0x06
 832:	97 81       	ldd	r25, Z+7	; 0x07
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0x3aa>
 836:	8f ef       	ldi	r24, 0xFF	; 255
 838:	9f ef       	ldi	r25, 0xFF	; 255
 83a:	2c 96       	adiw	r28, 0x0c	; 12
 83c:	0f b6       	in	r0, 0x3f	; 63
 83e:	f8 94       	cli
 840:	de bf       	out	0x3e, r29	; 62
 842:	0f be       	out	0x3f, r0	; 63
 844:	cd bf       	out	0x3d, r28	; 61
 846:	df 91       	pop	r29
 848:	cf 91       	pop	r28
 84a:	1f 91       	pop	r17
 84c:	0f 91       	pop	r16
 84e:	ff 90       	pop	r15
 850:	ef 90       	pop	r14
 852:	df 90       	pop	r13
 854:	cf 90       	pop	r12
 856:	bf 90       	pop	r11
 858:	af 90       	pop	r10
 85a:	9f 90       	pop	r9
 85c:	8f 90       	pop	r8
 85e:	7f 90       	pop	r7
 860:	6f 90       	pop	r6
 862:	5f 90       	pop	r5
 864:	4f 90       	pop	r4
 866:	3f 90       	pop	r3
 868:	2f 90       	pop	r2
 86a:	08 95       	ret

0000086c <calloc>:
 86c:	0f 93       	push	r16
 86e:	1f 93       	push	r17
 870:	cf 93       	push	r28
 872:	df 93       	push	r29
 874:	86 9f       	mul	r24, r22
 876:	80 01       	movw	r16, r0
 878:	87 9f       	mul	r24, r23
 87a:	10 0d       	add	r17, r0
 87c:	96 9f       	mul	r25, r22
 87e:	10 0d       	add	r17, r0
 880:	11 24       	eor	r1, r1
 882:	c8 01       	movw	r24, r16
 884:	0d d0       	rcall	.+26     	; 0x8a0 <malloc>
 886:	ec 01       	movw	r28, r24
 888:	00 97       	sbiw	r24, 0x00	; 0
 88a:	21 f0       	breq	.+8      	; 0x894 <calloc+0x28>
 88c:	a8 01       	movw	r20, r16
 88e:	60 e0       	ldi	r22, 0x00	; 0
 890:	70 e0       	ldi	r23, 0x00	; 0
 892:	38 d1       	rcall	.+624    	; 0xb04 <memset>
 894:	ce 01       	movw	r24, r28
 896:	df 91       	pop	r29
 898:	cf 91       	pop	r28
 89a:	1f 91       	pop	r17
 89c:	0f 91       	pop	r16
 89e:	08 95       	ret

000008a0 <malloc>:
 8a0:	cf 93       	push	r28
 8a2:	df 93       	push	r29
 8a4:	82 30       	cpi	r24, 0x02	; 2
 8a6:	91 05       	cpc	r25, r1
 8a8:	10 f4       	brcc	.+4      	; 0x8ae <malloc+0xe>
 8aa:	82 e0       	ldi	r24, 0x02	; 2
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	e0 91 5a 02 	lds	r30, 0x025A
 8b2:	f0 91 5b 02 	lds	r31, 0x025B
 8b6:	20 e0       	ldi	r18, 0x00	; 0
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	a0 e0       	ldi	r26, 0x00	; 0
 8bc:	b0 e0       	ldi	r27, 0x00	; 0
 8be:	30 97       	sbiw	r30, 0x00	; 0
 8c0:	39 f1       	breq	.+78     	; 0x910 <malloc+0x70>
 8c2:	40 81       	ld	r20, Z
 8c4:	51 81       	ldd	r21, Z+1	; 0x01
 8c6:	48 17       	cp	r20, r24
 8c8:	59 07       	cpc	r21, r25
 8ca:	b8 f0       	brcs	.+46     	; 0x8fa <malloc+0x5a>
 8cc:	48 17       	cp	r20, r24
 8ce:	59 07       	cpc	r21, r25
 8d0:	71 f4       	brne	.+28     	; 0x8ee <malloc+0x4e>
 8d2:	82 81       	ldd	r24, Z+2	; 0x02
 8d4:	93 81       	ldd	r25, Z+3	; 0x03
 8d6:	10 97       	sbiw	r26, 0x00	; 0
 8d8:	29 f0       	breq	.+10     	; 0x8e4 <malloc+0x44>
 8da:	13 96       	adiw	r26, 0x03	; 3
 8dc:	9c 93       	st	X, r25
 8de:	8e 93       	st	-X, r24
 8e0:	12 97       	sbiw	r26, 0x02	; 2
 8e2:	2c c0       	rjmp	.+88     	; 0x93c <malloc+0x9c>
 8e4:	90 93 5b 02 	sts	0x025B, r25
 8e8:	80 93 5a 02 	sts	0x025A, r24
 8ec:	27 c0       	rjmp	.+78     	; 0x93c <malloc+0x9c>
 8ee:	21 15       	cp	r18, r1
 8f0:	31 05       	cpc	r19, r1
 8f2:	31 f0       	breq	.+12     	; 0x900 <malloc+0x60>
 8f4:	42 17       	cp	r20, r18
 8f6:	53 07       	cpc	r21, r19
 8f8:	18 f0       	brcs	.+6      	; 0x900 <malloc+0x60>
 8fa:	a9 01       	movw	r20, r18
 8fc:	db 01       	movw	r26, r22
 8fe:	01 c0       	rjmp	.+2      	; 0x902 <malloc+0x62>
 900:	ef 01       	movw	r28, r30
 902:	9a 01       	movw	r18, r20
 904:	bd 01       	movw	r22, r26
 906:	df 01       	movw	r26, r30
 908:	02 80       	ldd	r0, Z+2	; 0x02
 90a:	f3 81       	ldd	r31, Z+3	; 0x03
 90c:	e0 2d       	mov	r30, r0
 90e:	d7 cf       	rjmp	.-82     	; 0x8be <malloc+0x1e>
 910:	21 15       	cp	r18, r1
 912:	31 05       	cpc	r19, r1
 914:	f9 f0       	breq	.+62     	; 0x954 <malloc+0xb4>
 916:	28 1b       	sub	r18, r24
 918:	39 0b       	sbc	r19, r25
 91a:	24 30       	cpi	r18, 0x04	; 4
 91c:	31 05       	cpc	r19, r1
 91e:	80 f4       	brcc	.+32     	; 0x940 <malloc+0xa0>
 920:	8a 81       	ldd	r24, Y+2	; 0x02
 922:	9b 81       	ldd	r25, Y+3	; 0x03
 924:	61 15       	cp	r22, r1
 926:	71 05       	cpc	r23, r1
 928:	21 f0       	breq	.+8      	; 0x932 <malloc+0x92>
 92a:	fb 01       	movw	r30, r22
 92c:	93 83       	std	Z+3, r25	; 0x03
 92e:	82 83       	std	Z+2, r24	; 0x02
 930:	04 c0       	rjmp	.+8      	; 0x93a <malloc+0x9a>
 932:	90 93 5b 02 	sts	0x025B, r25
 936:	80 93 5a 02 	sts	0x025A, r24
 93a:	fe 01       	movw	r30, r28
 93c:	32 96       	adiw	r30, 0x02	; 2
 93e:	44 c0       	rjmp	.+136    	; 0x9c8 <malloc+0x128>
 940:	fe 01       	movw	r30, r28
 942:	e2 0f       	add	r30, r18
 944:	f3 1f       	adc	r31, r19
 946:	81 93       	st	Z+, r24
 948:	91 93       	st	Z+, r25
 94a:	22 50       	subi	r18, 0x02	; 2
 94c:	31 09       	sbc	r19, r1
 94e:	39 83       	std	Y+1, r19	; 0x01
 950:	28 83       	st	Y, r18
 952:	3a c0       	rjmp	.+116    	; 0x9c8 <malloc+0x128>
 954:	20 91 58 02 	lds	r18, 0x0258
 958:	30 91 59 02 	lds	r19, 0x0259
 95c:	23 2b       	or	r18, r19
 95e:	41 f4       	brne	.+16     	; 0x970 <malloc+0xd0>
 960:	20 91 02 02 	lds	r18, 0x0202
 964:	30 91 03 02 	lds	r19, 0x0203
 968:	30 93 59 02 	sts	0x0259, r19
 96c:	20 93 58 02 	sts	0x0258, r18
 970:	20 91 00 02 	lds	r18, 0x0200
 974:	30 91 01 02 	lds	r19, 0x0201
 978:	21 15       	cp	r18, r1
 97a:	31 05       	cpc	r19, r1
 97c:	41 f4       	brne	.+16     	; 0x98e <malloc+0xee>
 97e:	2d b7       	in	r18, 0x3d	; 61
 980:	3e b7       	in	r19, 0x3e	; 62
 982:	40 91 04 02 	lds	r20, 0x0204
 986:	50 91 05 02 	lds	r21, 0x0205
 98a:	24 1b       	sub	r18, r20
 98c:	35 0b       	sbc	r19, r21
 98e:	e0 91 58 02 	lds	r30, 0x0258
 992:	f0 91 59 02 	lds	r31, 0x0259
 996:	e2 17       	cp	r30, r18
 998:	f3 07       	cpc	r31, r19
 99a:	a0 f4       	brcc	.+40     	; 0x9c4 <malloc+0x124>
 99c:	2e 1b       	sub	r18, r30
 99e:	3f 0b       	sbc	r19, r31
 9a0:	28 17       	cp	r18, r24
 9a2:	39 07       	cpc	r19, r25
 9a4:	78 f0       	brcs	.+30     	; 0x9c4 <malloc+0x124>
 9a6:	ac 01       	movw	r20, r24
 9a8:	4e 5f       	subi	r20, 0xFE	; 254
 9aa:	5f 4f       	sbci	r21, 0xFF	; 255
 9ac:	24 17       	cp	r18, r20
 9ae:	35 07       	cpc	r19, r21
 9b0:	48 f0       	brcs	.+18     	; 0x9c4 <malloc+0x124>
 9b2:	4e 0f       	add	r20, r30
 9b4:	5f 1f       	adc	r21, r31
 9b6:	50 93 59 02 	sts	0x0259, r21
 9ba:	40 93 58 02 	sts	0x0258, r20
 9be:	81 93       	st	Z+, r24
 9c0:	91 93       	st	Z+, r25
 9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <malloc+0x128>
 9c4:	e0 e0       	ldi	r30, 0x00	; 0
 9c6:	f0 e0       	ldi	r31, 0x00	; 0
 9c8:	cf 01       	movw	r24, r30
 9ca:	df 91       	pop	r29
 9cc:	cf 91       	pop	r28
 9ce:	08 95       	ret

000009d0 <free>:
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	00 97       	sbiw	r24, 0x00	; 0
 9d6:	09 f4       	brne	.+2      	; 0x9da <free+0xa>
 9d8:	87 c0       	rjmp	.+270    	; 0xae8 <free+0x118>
 9da:	fc 01       	movw	r30, r24
 9dc:	32 97       	sbiw	r30, 0x02	; 2
 9de:	13 82       	std	Z+3, r1	; 0x03
 9e0:	12 82       	std	Z+2, r1	; 0x02
 9e2:	c0 91 5a 02 	lds	r28, 0x025A
 9e6:	d0 91 5b 02 	lds	r29, 0x025B
 9ea:	20 97       	sbiw	r28, 0x00	; 0
 9ec:	81 f4       	brne	.+32     	; 0xa0e <free+0x3e>
 9ee:	20 81       	ld	r18, Z
 9f0:	31 81       	ldd	r19, Z+1	; 0x01
 9f2:	28 0f       	add	r18, r24
 9f4:	39 1f       	adc	r19, r25
 9f6:	80 91 58 02 	lds	r24, 0x0258
 9fa:	90 91 59 02 	lds	r25, 0x0259
 9fe:	82 17       	cp	r24, r18
 a00:	93 07       	cpc	r25, r19
 a02:	79 f5       	brne	.+94     	; 0xa62 <free+0x92>
 a04:	f0 93 59 02 	sts	0x0259, r31
 a08:	e0 93 58 02 	sts	0x0258, r30
 a0c:	6d c0       	rjmp	.+218    	; 0xae8 <free+0x118>
 a0e:	de 01       	movw	r26, r28
 a10:	20 e0       	ldi	r18, 0x00	; 0
 a12:	30 e0       	ldi	r19, 0x00	; 0
 a14:	ae 17       	cp	r26, r30
 a16:	bf 07       	cpc	r27, r31
 a18:	50 f4       	brcc	.+20     	; 0xa2e <free+0x5e>
 a1a:	12 96       	adiw	r26, 0x02	; 2
 a1c:	4d 91       	ld	r20, X+
 a1e:	5c 91       	ld	r21, X
 a20:	13 97       	sbiw	r26, 0x03	; 3
 a22:	9d 01       	movw	r18, r26
 a24:	41 15       	cp	r20, r1
 a26:	51 05       	cpc	r21, r1
 a28:	09 f1       	breq	.+66     	; 0xa6c <free+0x9c>
 a2a:	da 01       	movw	r26, r20
 a2c:	f3 cf       	rjmp	.-26     	; 0xa14 <free+0x44>
 a2e:	b3 83       	std	Z+3, r27	; 0x03
 a30:	a2 83       	std	Z+2, r26	; 0x02
 a32:	40 81       	ld	r20, Z
 a34:	51 81       	ldd	r21, Z+1	; 0x01
 a36:	84 0f       	add	r24, r20
 a38:	95 1f       	adc	r25, r21
 a3a:	8a 17       	cp	r24, r26
 a3c:	9b 07       	cpc	r25, r27
 a3e:	71 f4       	brne	.+28     	; 0xa5c <free+0x8c>
 a40:	8d 91       	ld	r24, X+
 a42:	9c 91       	ld	r25, X
 a44:	11 97       	sbiw	r26, 0x01	; 1
 a46:	84 0f       	add	r24, r20
 a48:	95 1f       	adc	r25, r21
 a4a:	02 96       	adiw	r24, 0x02	; 2
 a4c:	91 83       	std	Z+1, r25	; 0x01
 a4e:	80 83       	st	Z, r24
 a50:	12 96       	adiw	r26, 0x02	; 2
 a52:	8d 91       	ld	r24, X+
 a54:	9c 91       	ld	r25, X
 a56:	13 97       	sbiw	r26, 0x03	; 3
 a58:	93 83       	std	Z+3, r25	; 0x03
 a5a:	82 83       	std	Z+2, r24	; 0x02
 a5c:	21 15       	cp	r18, r1
 a5e:	31 05       	cpc	r19, r1
 a60:	29 f4       	brne	.+10     	; 0xa6c <free+0x9c>
 a62:	f0 93 5b 02 	sts	0x025B, r31
 a66:	e0 93 5a 02 	sts	0x025A, r30
 a6a:	3e c0       	rjmp	.+124    	; 0xae8 <free+0x118>
 a6c:	d9 01       	movw	r26, r18
 a6e:	13 96       	adiw	r26, 0x03	; 3
 a70:	fc 93       	st	X, r31
 a72:	ee 93       	st	-X, r30
 a74:	12 97       	sbiw	r26, 0x02	; 2
 a76:	4d 91       	ld	r20, X+
 a78:	5d 91       	ld	r21, X+
 a7a:	a4 0f       	add	r26, r20
 a7c:	b5 1f       	adc	r27, r21
 a7e:	ea 17       	cp	r30, r26
 a80:	fb 07       	cpc	r31, r27
 a82:	79 f4       	brne	.+30     	; 0xaa2 <free+0xd2>
 a84:	80 81       	ld	r24, Z
 a86:	91 81       	ldd	r25, Z+1	; 0x01
 a88:	84 0f       	add	r24, r20
 a8a:	95 1f       	adc	r25, r21
 a8c:	02 96       	adiw	r24, 0x02	; 2
 a8e:	d9 01       	movw	r26, r18
 a90:	11 96       	adiw	r26, 0x01	; 1
 a92:	9c 93       	st	X, r25
 a94:	8e 93       	st	-X, r24
 a96:	82 81       	ldd	r24, Z+2	; 0x02
 a98:	93 81       	ldd	r25, Z+3	; 0x03
 a9a:	13 96       	adiw	r26, 0x03	; 3
 a9c:	9c 93       	st	X, r25
 a9e:	8e 93       	st	-X, r24
 aa0:	12 97       	sbiw	r26, 0x02	; 2
 aa2:	e0 e0       	ldi	r30, 0x00	; 0
 aa4:	f0 e0       	ldi	r31, 0x00	; 0
 aa6:	8a 81       	ldd	r24, Y+2	; 0x02
 aa8:	9b 81       	ldd	r25, Y+3	; 0x03
 aaa:	00 97       	sbiw	r24, 0x00	; 0
 aac:	19 f0       	breq	.+6      	; 0xab4 <free+0xe4>
 aae:	fe 01       	movw	r30, r28
 ab0:	ec 01       	movw	r28, r24
 ab2:	f9 cf       	rjmp	.-14     	; 0xaa6 <free+0xd6>
 ab4:	ce 01       	movw	r24, r28
 ab6:	02 96       	adiw	r24, 0x02	; 2
 ab8:	28 81       	ld	r18, Y
 aba:	39 81       	ldd	r19, Y+1	; 0x01
 abc:	82 0f       	add	r24, r18
 abe:	93 1f       	adc	r25, r19
 ac0:	20 91 58 02 	lds	r18, 0x0258
 ac4:	30 91 59 02 	lds	r19, 0x0259
 ac8:	28 17       	cp	r18, r24
 aca:	39 07       	cpc	r19, r25
 acc:	69 f4       	brne	.+26     	; 0xae8 <free+0x118>
 ace:	30 97       	sbiw	r30, 0x00	; 0
 ad0:	29 f4       	brne	.+10     	; 0xadc <free+0x10c>
 ad2:	10 92 5b 02 	sts	0x025B, r1
 ad6:	10 92 5a 02 	sts	0x025A, r1
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <free+0x110>
 adc:	13 82       	std	Z+3, r1	; 0x03
 ade:	12 82       	std	Z+2, r1	; 0x02
 ae0:	d0 93 59 02 	sts	0x0259, r29
 ae4:	c0 93 58 02 	sts	0x0258, r28
 ae8:	df 91       	pop	r29
 aea:	cf 91       	pop	r28
 aec:	08 95       	ret

00000aee <strnlen_P>:
 aee:	fc 01       	movw	r30, r24
 af0:	05 90       	lpm	r0, Z+
 af2:	61 50       	subi	r22, 0x01	; 1
 af4:	70 40       	sbci	r23, 0x00	; 0
 af6:	01 10       	cpse	r0, r1
 af8:	d8 f7       	brcc	.-10     	; 0xaf0 <strnlen_P+0x2>
 afa:	80 95       	com	r24
 afc:	90 95       	com	r25
 afe:	8e 0f       	add	r24, r30
 b00:	9f 1f       	adc	r25, r31
 b02:	08 95       	ret

00000b04 <memset>:
 b04:	dc 01       	movw	r26, r24
 b06:	01 c0       	rjmp	.+2      	; 0xb0a <memset+0x6>
 b08:	6d 93       	st	X+, r22
 b0a:	41 50       	subi	r20, 0x01	; 1
 b0c:	50 40       	sbci	r21, 0x00	; 0
 b0e:	e0 f7       	brcc	.-8      	; 0xb08 <memset+0x4>
 b10:	08 95       	ret

00000b12 <strnlen>:
 b12:	fc 01       	movw	r30, r24
 b14:	61 50       	subi	r22, 0x01	; 1
 b16:	70 40       	sbci	r23, 0x00	; 0
 b18:	01 90       	ld	r0, Z+
 b1a:	01 10       	cpse	r0, r1
 b1c:	d8 f7       	brcc	.-10     	; 0xb14 <strnlen+0x2>
 b1e:	80 95       	com	r24
 b20:	90 95       	com	r25
 b22:	8e 0f       	add	r24, r30
 b24:	9f 1f       	adc	r25, r31
 b26:	08 95       	ret

00000b28 <fputc>:
 b28:	0f 93       	push	r16
 b2a:	1f 93       	push	r17
 b2c:	cf 93       	push	r28
 b2e:	df 93       	push	r29
 b30:	18 2f       	mov	r17, r24
 b32:	09 2f       	mov	r16, r25
 b34:	eb 01       	movw	r28, r22
 b36:	8b 81       	ldd	r24, Y+3	; 0x03
 b38:	81 fd       	sbrc	r24, 1
 b3a:	03 c0       	rjmp	.+6      	; 0xb42 <fputc+0x1a>
 b3c:	8f ef       	ldi	r24, 0xFF	; 255
 b3e:	9f ef       	ldi	r25, 0xFF	; 255
 b40:	20 c0       	rjmp	.+64     	; 0xb82 <fputc+0x5a>
 b42:	82 ff       	sbrs	r24, 2
 b44:	10 c0       	rjmp	.+32     	; 0xb66 <fputc+0x3e>
 b46:	4e 81       	ldd	r20, Y+6	; 0x06
 b48:	5f 81       	ldd	r21, Y+7	; 0x07
 b4a:	2c 81       	ldd	r18, Y+4	; 0x04
 b4c:	3d 81       	ldd	r19, Y+5	; 0x05
 b4e:	42 17       	cp	r20, r18
 b50:	53 07       	cpc	r21, r19
 b52:	7c f4       	brge	.+30     	; 0xb72 <fputc+0x4a>
 b54:	e8 81       	ld	r30, Y
 b56:	f9 81       	ldd	r31, Y+1	; 0x01
 b58:	9f 01       	movw	r18, r30
 b5a:	2f 5f       	subi	r18, 0xFF	; 255
 b5c:	3f 4f       	sbci	r19, 0xFF	; 255
 b5e:	39 83       	std	Y+1, r19	; 0x01
 b60:	28 83       	st	Y, r18
 b62:	10 83       	st	Z, r17
 b64:	06 c0       	rjmp	.+12     	; 0xb72 <fputc+0x4a>
 b66:	e8 85       	ldd	r30, Y+8	; 0x08
 b68:	f9 85       	ldd	r31, Y+9	; 0x09
 b6a:	81 2f       	mov	r24, r17
 b6c:	19 95       	eicall
 b6e:	89 2b       	or	r24, r25
 b70:	29 f7       	brne	.-54     	; 0xb3c <fputc+0x14>
 b72:	2e 81       	ldd	r18, Y+6	; 0x06
 b74:	3f 81       	ldd	r19, Y+7	; 0x07
 b76:	2f 5f       	subi	r18, 0xFF	; 255
 b78:	3f 4f       	sbci	r19, 0xFF	; 255
 b7a:	3f 83       	std	Y+7, r19	; 0x07
 b7c:	2e 83       	std	Y+6, r18	; 0x06
 b7e:	81 2f       	mov	r24, r17
 b80:	90 2f       	mov	r25, r16
 b82:	df 91       	pop	r29
 b84:	cf 91       	pop	r28
 b86:	1f 91       	pop	r17
 b88:	0f 91       	pop	r16
 b8a:	08 95       	ret

00000b8c <__ultoa_invert>:
 b8c:	fa 01       	movw	r30, r20
 b8e:	aa 27       	eor	r26, r26
 b90:	28 30       	cpi	r18, 0x08	; 8
 b92:	51 f1       	breq	.+84     	; 0xbe8 <__ultoa_invert+0x5c>
 b94:	20 31       	cpi	r18, 0x10	; 16
 b96:	81 f1       	breq	.+96     	; 0xbf8 <__ultoa_invert+0x6c>
 b98:	e8 94       	clt
 b9a:	6f 93       	push	r22
 b9c:	6e 7f       	andi	r22, 0xFE	; 254
 b9e:	6e 5f       	subi	r22, 0xFE	; 254
 ba0:	7f 4f       	sbci	r23, 0xFF	; 255
 ba2:	8f 4f       	sbci	r24, 0xFF	; 255
 ba4:	9f 4f       	sbci	r25, 0xFF	; 255
 ba6:	af 4f       	sbci	r26, 0xFF	; 255
 ba8:	b1 e0       	ldi	r27, 0x01	; 1
 baa:	3e d0       	rcall	.+124    	; 0xc28 <__ultoa_invert+0x9c>
 bac:	b4 e0       	ldi	r27, 0x04	; 4
 bae:	3c d0       	rcall	.+120    	; 0xc28 <__ultoa_invert+0x9c>
 bb0:	67 0f       	add	r22, r23
 bb2:	78 1f       	adc	r23, r24
 bb4:	89 1f       	adc	r24, r25
 bb6:	9a 1f       	adc	r25, r26
 bb8:	a1 1d       	adc	r26, r1
 bba:	68 0f       	add	r22, r24
 bbc:	79 1f       	adc	r23, r25
 bbe:	8a 1f       	adc	r24, r26
 bc0:	91 1d       	adc	r25, r1
 bc2:	a1 1d       	adc	r26, r1
 bc4:	6a 0f       	add	r22, r26
 bc6:	71 1d       	adc	r23, r1
 bc8:	81 1d       	adc	r24, r1
 bca:	91 1d       	adc	r25, r1
 bcc:	a1 1d       	adc	r26, r1
 bce:	20 d0       	rcall	.+64     	; 0xc10 <__ultoa_invert+0x84>
 bd0:	09 f4       	brne	.+2      	; 0xbd4 <__ultoa_invert+0x48>
 bd2:	68 94       	set
 bd4:	3f 91       	pop	r19
 bd6:	2a e0       	ldi	r18, 0x0A	; 10
 bd8:	26 9f       	mul	r18, r22
 bda:	11 24       	eor	r1, r1
 bdc:	30 19       	sub	r19, r0
 bde:	30 5d       	subi	r19, 0xD0	; 208
 be0:	31 93       	st	Z+, r19
 be2:	de f6       	brtc	.-74     	; 0xb9a <__ultoa_invert+0xe>
 be4:	cf 01       	movw	r24, r30
 be6:	08 95       	ret
 be8:	46 2f       	mov	r20, r22
 bea:	47 70       	andi	r20, 0x07	; 7
 bec:	40 5d       	subi	r20, 0xD0	; 208
 bee:	41 93       	st	Z+, r20
 bf0:	b3 e0       	ldi	r27, 0x03	; 3
 bf2:	0f d0       	rcall	.+30     	; 0xc12 <__ultoa_invert+0x86>
 bf4:	c9 f7       	brne	.-14     	; 0xbe8 <__ultoa_invert+0x5c>
 bf6:	f6 cf       	rjmp	.-20     	; 0xbe4 <__ultoa_invert+0x58>
 bf8:	46 2f       	mov	r20, r22
 bfa:	4f 70       	andi	r20, 0x0F	; 15
 bfc:	40 5d       	subi	r20, 0xD0	; 208
 bfe:	4a 33       	cpi	r20, 0x3A	; 58
 c00:	18 f0       	brcs	.+6      	; 0xc08 <__ultoa_invert+0x7c>
 c02:	49 5d       	subi	r20, 0xD9	; 217
 c04:	31 fd       	sbrc	r19, 1
 c06:	40 52       	subi	r20, 0x20	; 32
 c08:	41 93       	st	Z+, r20
 c0a:	02 d0       	rcall	.+4      	; 0xc10 <__ultoa_invert+0x84>
 c0c:	a9 f7       	brne	.-22     	; 0xbf8 <__ultoa_invert+0x6c>
 c0e:	ea cf       	rjmp	.-44     	; 0xbe4 <__ultoa_invert+0x58>
 c10:	b4 e0       	ldi	r27, 0x04	; 4
 c12:	a6 95       	lsr	r26
 c14:	97 95       	ror	r25
 c16:	87 95       	ror	r24
 c18:	77 95       	ror	r23
 c1a:	67 95       	ror	r22
 c1c:	ba 95       	dec	r27
 c1e:	c9 f7       	brne	.-14     	; 0xc12 <__ultoa_invert+0x86>
 c20:	00 97       	sbiw	r24, 0x00	; 0
 c22:	61 05       	cpc	r22, r1
 c24:	71 05       	cpc	r23, r1
 c26:	08 95       	ret
 c28:	9b 01       	movw	r18, r22
 c2a:	ac 01       	movw	r20, r24
 c2c:	0a 2e       	mov	r0, r26
 c2e:	06 94       	lsr	r0
 c30:	57 95       	ror	r21
 c32:	47 95       	ror	r20
 c34:	37 95       	ror	r19
 c36:	27 95       	ror	r18
 c38:	ba 95       	dec	r27
 c3a:	c9 f7       	brne	.-14     	; 0xc2e <__ultoa_invert+0xa2>
 c3c:	62 0f       	add	r22, r18
 c3e:	73 1f       	adc	r23, r19
 c40:	84 1f       	adc	r24, r20
 c42:	95 1f       	adc	r25, r21
 c44:	a0 1d       	adc	r26, r0
 c46:	08 95       	ret

00000c48 <_exit>:
 c48:	f8 94       	cli

00000c4a <__stop_program>:
 c4a:	ff cf       	rjmp	.-2      	; 0xc4a <__stop_program>

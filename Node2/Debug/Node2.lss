
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000512  000005a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000512  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800206  00800206  000005ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000057d  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000375  00000000  00000000  00000be1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d3  00000000  00000000  00000f56  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  0000132c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000283  00000000  00000000  0000140c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cf  00000000  00000000  0000168f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000175e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	87 c0       	rjmp	.+270    	; 0x190 <__vector_32>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e1       	ldi	r30, 0x12	; 18
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 31       	cpi	r26, 0x10	; 16
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	f6 c1       	rjmp	.+1004   	; 0x50e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:



int main(void)
{
	sei(); // Enable global interrupts
 124:	78 94       	sei
	
	timer1_init(); // initialize timer
 126:	12 d0       	rcall	.+36     	; 0x14c <timer1_init>
	fdevopen(USART_transmit, USART_receive); // Sets printf to serial port
 128:	6d ee       	ldi	r22, 0xED	; 237
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	85 ee       	ldi	r24, 0xE5	; 229
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	5c d0       	rcall	.+184    	; 0x1ea <fdevopen>
	USART_init(MYUBBR);
 132:	87 e6       	ldi	r24, 0x67	; 103
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	3e d0       	rcall	.+124    	; 0x1b4 <USART_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	89 e6       	ldi	r24, 0x69	; 105
 13c:	98 e1       	ldi	r25, 0x18	; 24
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <main+0x1a>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x24>
 148:	00 00       	nop
 14a:	f6 cf       	rjmp	.-20     	; 0x138 <main+0x14>

0000014c <timer1_init>:
	uint8_t ref = pos.y * delta/255;
	uint8_t new_pos = min + ref;
	
	// Update compare register
	//printf("new_pos: %d\n", new_pos);
	OCR3A = new_pos;
 14c:	e0 e9       	ldi	r30, 0x90	; 144
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	82 68       	ori	r24, 0x82	; 130
 154:	80 83       	st	Z, r24
 156:	e1 e9       	ldi	r30, 0x91	; 145
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	8b 61       	ori	r24, 0x1B	; 27
 15e:	80 83       	st	Z, r24
 160:	88 e8       	ldi	r24, 0x88	; 136
 162:	93 e1       	ldi	r25, 0x13	; 19
 164:	90 93 97 00 	sts	0x0097, r25
 168:	80 93 96 00 	sts	0x0096, r24
 16c:	10 92 95 00 	sts	0x0095, r1
 170:	10 92 94 00 	sts	0x0094, r1
 174:	87 e7       	ldi	r24, 0x77	; 119
 176:	91 e0       	ldi	r25, 0x01	; 1
 178:	90 93 99 00 	sts	0x0099, r25
 17c:	80 93 98 00 	sts	0x0098, r24
 180:	e1 e7       	ldi	r30, 0x71	; 113
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	82 60       	ori	r24, 0x02	; 2
 188:	80 83       	st	Z, r24
 18a:	88 e0       	ldi	r24, 0x08	; 8
 18c:	8d b9       	out	0x0d, r24	; 13
 18e:	08 95       	ret

00000190 <__vector_32>:
}

/* Interrupt handler for TIMER1 compare */
ISR(TIMER3_COMPA_vect) {
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25

	// pin toggle
	PORTE ^= (1 << PE3);
 19e:	9e b1       	in	r25, 0x0e	; 14
 1a0:	88 e0       	ldi	r24, 0x08	; 8
 1a2:	89 27       	eor	r24, r25
 1a4:	8e b9       	out	0x0e, r24	; 14
 1a6:	9f 91       	pop	r25
 1a8:	8f 91       	pop	r24
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 1b4:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 1b8:	80 93 c4 00 	sts	0x00C4, r24
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 1bc:	88 e1       	ldi	r24, 0x18	; 24
 1be:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << USBS0)|(3 << UCSZ10);
 1c2:	8e e0       	ldi	r24, 0x0E	; 14
 1c4:	80 93 c2 00 	sts	0x00C2, r24
 1c8:	08 95       	ret

000001ca <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 1ca:	e0 ec       	ldi	r30, 0xC0	; 192
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	90 81       	ld	r25, Z
 1d0:	95 ff       	sbrs	r25, 5
 1d2:	fd cf       	rjmp	.-6      	; 0x1ce <USART_transmit+0x4>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1d4:	80 93 c6 00 	sts	0x00C6, r24
 1d8:	08 95       	ret

000001da <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 1da:	e0 ec       	ldi	r30, 0xC0	; 192
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	88 23       	and	r24, r24
 1e2:	ec f7       	brge	.-6      	; 0x1de <USART_receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 1e4:	80 91 c6 00 	lds	r24, 0x00C6
}
 1e8:	08 95       	ret

000001ea <fdevopen>:
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ec 01       	movw	r28, r24
 1f4:	8b 01       	movw	r16, r22
 1f6:	00 97       	sbiw	r24, 0x00	; 0
 1f8:	31 f4       	brne	.+12     	; 0x206 <fdevopen+0x1c>
 1fa:	61 15       	cp	r22, r1
 1fc:	71 05       	cpc	r23, r1
 1fe:	19 f4       	brne	.+6      	; 0x206 <fdevopen+0x1c>
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	37 c0       	rjmp	.+110    	; 0x274 <fdevopen+0x8a>
 206:	6e e0       	ldi	r22, 0x0E	; 14
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	37 d0       	rcall	.+110    	; 0x27e <calloc>
 210:	fc 01       	movw	r30, r24
 212:	00 97       	sbiw	r24, 0x00	; 0
 214:	a9 f3       	breq	.-22     	; 0x200 <fdevopen+0x16>
 216:	80 e8       	ldi	r24, 0x80	; 128
 218:	83 83       	std	Z+3, r24	; 0x03
 21a:	01 15       	cp	r16, r1
 21c:	11 05       	cpc	r17, r1
 21e:	71 f0       	breq	.+28     	; 0x23c <fdevopen+0x52>
 220:	13 87       	std	Z+11, r17	; 0x0b
 222:	02 87       	std	Z+10, r16	; 0x0a
 224:	81 e8       	ldi	r24, 0x81	; 129
 226:	83 83       	std	Z+3, r24	; 0x03
 228:	80 91 06 02 	lds	r24, 0x0206
 22c:	90 91 07 02 	lds	r25, 0x0207
 230:	89 2b       	or	r24, r25
 232:	21 f4       	brne	.+8      	; 0x23c <fdevopen+0x52>
 234:	f0 93 07 02 	sts	0x0207, r31
 238:	e0 93 06 02 	sts	0x0206, r30
 23c:	20 97       	sbiw	r28, 0x00	; 0
 23e:	c9 f0       	breq	.+50     	; 0x272 <fdevopen+0x88>
 240:	d1 87       	std	Z+9, r29	; 0x09
 242:	c0 87       	std	Z+8, r28	; 0x08
 244:	83 81       	ldd	r24, Z+3	; 0x03
 246:	82 60       	ori	r24, 0x02	; 2
 248:	83 83       	std	Z+3, r24	; 0x03
 24a:	80 91 08 02 	lds	r24, 0x0208
 24e:	90 91 09 02 	lds	r25, 0x0209
 252:	89 2b       	or	r24, r25
 254:	71 f4       	brne	.+28     	; 0x272 <fdevopen+0x88>
 256:	f0 93 09 02 	sts	0x0209, r31
 25a:	e0 93 08 02 	sts	0x0208, r30
 25e:	80 91 0a 02 	lds	r24, 0x020A
 262:	90 91 0b 02 	lds	r25, 0x020B
 266:	89 2b       	or	r24, r25
 268:	21 f4       	brne	.+8      	; 0x272 <fdevopen+0x88>
 26a:	f0 93 0b 02 	sts	0x020B, r31
 26e:	e0 93 0a 02 	sts	0x020A, r30
 272:	cf 01       	movw	r24, r30
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	1f 91       	pop	r17
 27a:	0f 91       	pop	r16
 27c:	08 95       	ret

0000027e <calloc>:
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	86 9f       	mul	r24, r22
 288:	80 01       	movw	r16, r0
 28a:	87 9f       	mul	r24, r23
 28c:	10 0d       	add	r17, r0
 28e:	96 9f       	mul	r25, r22
 290:	10 0d       	add	r17, r0
 292:	11 24       	eor	r1, r1
 294:	c8 01       	movw	r24, r16
 296:	0d d0       	rcall	.+26     	; 0x2b2 <malloc>
 298:	ec 01       	movw	r28, r24
 29a:	00 97       	sbiw	r24, 0x00	; 0
 29c:	21 f0       	breq	.+8      	; 0x2a6 <calloc+0x28>
 29e:	a8 01       	movw	r20, r16
 2a0:	60 e0       	ldi	r22, 0x00	; 0
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	2d d1       	rcall	.+602    	; 0x500 <memset>
 2a6:	ce 01       	movw	r24, r28
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	1f 91       	pop	r17
 2ae:	0f 91       	pop	r16
 2b0:	08 95       	ret

000002b2 <malloc>:
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	82 30       	cpi	r24, 0x02	; 2
 2b8:	91 05       	cpc	r25, r1
 2ba:	10 f4       	brcc	.+4      	; 0x2c0 <malloc+0xe>
 2bc:	82 e0       	ldi	r24, 0x02	; 2
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	e0 91 0e 02 	lds	r30, 0x020E
 2c4:	f0 91 0f 02 	lds	r31, 0x020F
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	a0 e0       	ldi	r26, 0x00	; 0
 2ce:	b0 e0       	ldi	r27, 0x00	; 0
 2d0:	30 97       	sbiw	r30, 0x00	; 0
 2d2:	39 f1       	breq	.+78     	; 0x322 <malloc+0x70>
 2d4:	40 81       	ld	r20, Z
 2d6:	51 81       	ldd	r21, Z+1	; 0x01
 2d8:	48 17       	cp	r20, r24
 2da:	59 07       	cpc	r21, r25
 2dc:	b8 f0       	brcs	.+46     	; 0x30c <malloc+0x5a>
 2de:	48 17       	cp	r20, r24
 2e0:	59 07       	cpc	r21, r25
 2e2:	71 f4       	brne	.+28     	; 0x300 <malloc+0x4e>
 2e4:	82 81       	ldd	r24, Z+2	; 0x02
 2e6:	93 81       	ldd	r25, Z+3	; 0x03
 2e8:	10 97       	sbiw	r26, 0x00	; 0
 2ea:	29 f0       	breq	.+10     	; 0x2f6 <malloc+0x44>
 2ec:	13 96       	adiw	r26, 0x03	; 3
 2ee:	9c 93       	st	X, r25
 2f0:	8e 93       	st	-X, r24
 2f2:	12 97       	sbiw	r26, 0x02	; 2
 2f4:	2c c0       	rjmp	.+88     	; 0x34e <malloc+0x9c>
 2f6:	90 93 0f 02 	sts	0x020F, r25
 2fa:	80 93 0e 02 	sts	0x020E, r24
 2fe:	27 c0       	rjmp	.+78     	; 0x34e <malloc+0x9c>
 300:	21 15       	cp	r18, r1
 302:	31 05       	cpc	r19, r1
 304:	31 f0       	breq	.+12     	; 0x312 <malloc+0x60>
 306:	42 17       	cp	r20, r18
 308:	53 07       	cpc	r21, r19
 30a:	18 f0       	brcs	.+6      	; 0x312 <malloc+0x60>
 30c:	a9 01       	movw	r20, r18
 30e:	db 01       	movw	r26, r22
 310:	01 c0       	rjmp	.+2      	; 0x314 <malloc+0x62>
 312:	ef 01       	movw	r28, r30
 314:	9a 01       	movw	r18, r20
 316:	bd 01       	movw	r22, r26
 318:	df 01       	movw	r26, r30
 31a:	02 80       	ldd	r0, Z+2	; 0x02
 31c:	f3 81       	ldd	r31, Z+3	; 0x03
 31e:	e0 2d       	mov	r30, r0
 320:	d7 cf       	rjmp	.-82     	; 0x2d0 <malloc+0x1e>
 322:	21 15       	cp	r18, r1
 324:	31 05       	cpc	r19, r1
 326:	f9 f0       	breq	.+62     	; 0x366 <malloc+0xb4>
 328:	28 1b       	sub	r18, r24
 32a:	39 0b       	sbc	r19, r25
 32c:	24 30       	cpi	r18, 0x04	; 4
 32e:	31 05       	cpc	r19, r1
 330:	80 f4       	brcc	.+32     	; 0x352 <malloc+0xa0>
 332:	8a 81       	ldd	r24, Y+2	; 0x02
 334:	9b 81       	ldd	r25, Y+3	; 0x03
 336:	61 15       	cp	r22, r1
 338:	71 05       	cpc	r23, r1
 33a:	21 f0       	breq	.+8      	; 0x344 <malloc+0x92>
 33c:	fb 01       	movw	r30, r22
 33e:	93 83       	std	Z+3, r25	; 0x03
 340:	82 83       	std	Z+2, r24	; 0x02
 342:	04 c0       	rjmp	.+8      	; 0x34c <malloc+0x9a>
 344:	90 93 0f 02 	sts	0x020F, r25
 348:	80 93 0e 02 	sts	0x020E, r24
 34c:	fe 01       	movw	r30, r28
 34e:	32 96       	adiw	r30, 0x02	; 2
 350:	44 c0       	rjmp	.+136    	; 0x3da <malloc+0x128>
 352:	fe 01       	movw	r30, r28
 354:	e2 0f       	add	r30, r18
 356:	f3 1f       	adc	r31, r19
 358:	81 93       	st	Z+, r24
 35a:	91 93       	st	Z+, r25
 35c:	22 50       	subi	r18, 0x02	; 2
 35e:	31 09       	sbc	r19, r1
 360:	39 83       	std	Y+1, r19	; 0x01
 362:	28 83       	st	Y, r18
 364:	3a c0       	rjmp	.+116    	; 0x3da <malloc+0x128>
 366:	20 91 0c 02 	lds	r18, 0x020C
 36a:	30 91 0d 02 	lds	r19, 0x020D
 36e:	23 2b       	or	r18, r19
 370:	41 f4       	brne	.+16     	; 0x382 <malloc+0xd0>
 372:	20 91 02 02 	lds	r18, 0x0202
 376:	30 91 03 02 	lds	r19, 0x0203
 37a:	30 93 0d 02 	sts	0x020D, r19
 37e:	20 93 0c 02 	sts	0x020C, r18
 382:	20 91 00 02 	lds	r18, 0x0200
 386:	30 91 01 02 	lds	r19, 0x0201
 38a:	21 15       	cp	r18, r1
 38c:	31 05       	cpc	r19, r1
 38e:	41 f4       	brne	.+16     	; 0x3a0 <malloc+0xee>
 390:	2d b7       	in	r18, 0x3d	; 61
 392:	3e b7       	in	r19, 0x3e	; 62
 394:	40 91 04 02 	lds	r20, 0x0204
 398:	50 91 05 02 	lds	r21, 0x0205
 39c:	24 1b       	sub	r18, r20
 39e:	35 0b       	sbc	r19, r21
 3a0:	e0 91 0c 02 	lds	r30, 0x020C
 3a4:	f0 91 0d 02 	lds	r31, 0x020D
 3a8:	e2 17       	cp	r30, r18
 3aa:	f3 07       	cpc	r31, r19
 3ac:	a0 f4       	brcc	.+40     	; 0x3d6 <malloc+0x124>
 3ae:	2e 1b       	sub	r18, r30
 3b0:	3f 0b       	sbc	r19, r31
 3b2:	28 17       	cp	r18, r24
 3b4:	39 07       	cpc	r19, r25
 3b6:	78 f0       	brcs	.+30     	; 0x3d6 <malloc+0x124>
 3b8:	ac 01       	movw	r20, r24
 3ba:	4e 5f       	subi	r20, 0xFE	; 254
 3bc:	5f 4f       	sbci	r21, 0xFF	; 255
 3be:	24 17       	cp	r18, r20
 3c0:	35 07       	cpc	r19, r21
 3c2:	48 f0       	brcs	.+18     	; 0x3d6 <malloc+0x124>
 3c4:	4e 0f       	add	r20, r30
 3c6:	5f 1f       	adc	r21, r31
 3c8:	50 93 0d 02 	sts	0x020D, r21
 3cc:	40 93 0c 02 	sts	0x020C, r20
 3d0:	81 93       	st	Z+, r24
 3d2:	91 93       	st	Z+, r25
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <malloc+0x128>
 3d6:	e0 e0       	ldi	r30, 0x00	; 0
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	cf 01       	movw	r24, r30
 3dc:	df 91       	pop	r29
 3de:	cf 91       	pop	r28
 3e0:	08 95       	ret

000003e2 <free>:
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	00 97       	sbiw	r24, 0x00	; 0
 3e8:	09 f4       	brne	.+2      	; 0x3ec <free+0xa>
 3ea:	87 c0       	rjmp	.+270    	; 0x4fa <free+0x118>
 3ec:	fc 01       	movw	r30, r24
 3ee:	32 97       	sbiw	r30, 0x02	; 2
 3f0:	13 82       	std	Z+3, r1	; 0x03
 3f2:	12 82       	std	Z+2, r1	; 0x02
 3f4:	c0 91 0e 02 	lds	r28, 0x020E
 3f8:	d0 91 0f 02 	lds	r29, 0x020F
 3fc:	20 97       	sbiw	r28, 0x00	; 0
 3fe:	81 f4       	brne	.+32     	; 0x420 <free+0x3e>
 400:	20 81       	ld	r18, Z
 402:	31 81       	ldd	r19, Z+1	; 0x01
 404:	28 0f       	add	r18, r24
 406:	39 1f       	adc	r19, r25
 408:	80 91 0c 02 	lds	r24, 0x020C
 40c:	90 91 0d 02 	lds	r25, 0x020D
 410:	82 17       	cp	r24, r18
 412:	93 07       	cpc	r25, r19
 414:	79 f5       	brne	.+94     	; 0x474 <free+0x92>
 416:	f0 93 0d 02 	sts	0x020D, r31
 41a:	e0 93 0c 02 	sts	0x020C, r30
 41e:	6d c0       	rjmp	.+218    	; 0x4fa <free+0x118>
 420:	de 01       	movw	r26, r28
 422:	20 e0       	ldi	r18, 0x00	; 0
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	ae 17       	cp	r26, r30
 428:	bf 07       	cpc	r27, r31
 42a:	50 f4       	brcc	.+20     	; 0x440 <free+0x5e>
 42c:	12 96       	adiw	r26, 0x02	; 2
 42e:	4d 91       	ld	r20, X+
 430:	5c 91       	ld	r21, X
 432:	13 97       	sbiw	r26, 0x03	; 3
 434:	9d 01       	movw	r18, r26
 436:	41 15       	cp	r20, r1
 438:	51 05       	cpc	r21, r1
 43a:	09 f1       	breq	.+66     	; 0x47e <free+0x9c>
 43c:	da 01       	movw	r26, r20
 43e:	f3 cf       	rjmp	.-26     	; 0x426 <free+0x44>
 440:	b3 83       	std	Z+3, r27	; 0x03
 442:	a2 83       	std	Z+2, r26	; 0x02
 444:	40 81       	ld	r20, Z
 446:	51 81       	ldd	r21, Z+1	; 0x01
 448:	84 0f       	add	r24, r20
 44a:	95 1f       	adc	r25, r21
 44c:	8a 17       	cp	r24, r26
 44e:	9b 07       	cpc	r25, r27
 450:	71 f4       	brne	.+28     	; 0x46e <free+0x8c>
 452:	8d 91       	ld	r24, X+
 454:	9c 91       	ld	r25, X
 456:	11 97       	sbiw	r26, 0x01	; 1
 458:	84 0f       	add	r24, r20
 45a:	95 1f       	adc	r25, r21
 45c:	02 96       	adiw	r24, 0x02	; 2
 45e:	91 83       	std	Z+1, r25	; 0x01
 460:	80 83       	st	Z, r24
 462:	12 96       	adiw	r26, 0x02	; 2
 464:	8d 91       	ld	r24, X+
 466:	9c 91       	ld	r25, X
 468:	13 97       	sbiw	r26, 0x03	; 3
 46a:	93 83       	std	Z+3, r25	; 0x03
 46c:	82 83       	std	Z+2, r24	; 0x02
 46e:	21 15       	cp	r18, r1
 470:	31 05       	cpc	r19, r1
 472:	29 f4       	brne	.+10     	; 0x47e <free+0x9c>
 474:	f0 93 0f 02 	sts	0x020F, r31
 478:	e0 93 0e 02 	sts	0x020E, r30
 47c:	3e c0       	rjmp	.+124    	; 0x4fa <free+0x118>
 47e:	d9 01       	movw	r26, r18
 480:	13 96       	adiw	r26, 0x03	; 3
 482:	fc 93       	st	X, r31
 484:	ee 93       	st	-X, r30
 486:	12 97       	sbiw	r26, 0x02	; 2
 488:	4d 91       	ld	r20, X+
 48a:	5d 91       	ld	r21, X+
 48c:	a4 0f       	add	r26, r20
 48e:	b5 1f       	adc	r27, r21
 490:	ea 17       	cp	r30, r26
 492:	fb 07       	cpc	r31, r27
 494:	79 f4       	brne	.+30     	; 0x4b4 <free+0xd2>
 496:	80 81       	ld	r24, Z
 498:	91 81       	ldd	r25, Z+1	; 0x01
 49a:	84 0f       	add	r24, r20
 49c:	95 1f       	adc	r25, r21
 49e:	02 96       	adiw	r24, 0x02	; 2
 4a0:	d9 01       	movw	r26, r18
 4a2:	11 96       	adiw	r26, 0x01	; 1
 4a4:	9c 93       	st	X, r25
 4a6:	8e 93       	st	-X, r24
 4a8:	82 81       	ldd	r24, Z+2	; 0x02
 4aa:	93 81       	ldd	r25, Z+3	; 0x03
 4ac:	13 96       	adiw	r26, 0x03	; 3
 4ae:	9c 93       	st	X, r25
 4b0:	8e 93       	st	-X, r24
 4b2:	12 97       	sbiw	r26, 0x02	; 2
 4b4:	e0 e0       	ldi	r30, 0x00	; 0
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ba:	9b 81       	ldd	r25, Y+3	; 0x03
 4bc:	00 97       	sbiw	r24, 0x00	; 0
 4be:	19 f0       	breq	.+6      	; 0x4c6 <free+0xe4>
 4c0:	fe 01       	movw	r30, r28
 4c2:	ec 01       	movw	r28, r24
 4c4:	f9 cf       	rjmp	.-14     	; 0x4b8 <free+0xd6>
 4c6:	ce 01       	movw	r24, r28
 4c8:	02 96       	adiw	r24, 0x02	; 2
 4ca:	28 81       	ld	r18, Y
 4cc:	39 81       	ldd	r19, Y+1	; 0x01
 4ce:	82 0f       	add	r24, r18
 4d0:	93 1f       	adc	r25, r19
 4d2:	20 91 0c 02 	lds	r18, 0x020C
 4d6:	30 91 0d 02 	lds	r19, 0x020D
 4da:	28 17       	cp	r18, r24
 4dc:	39 07       	cpc	r19, r25
 4de:	69 f4       	brne	.+26     	; 0x4fa <free+0x118>
 4e0:	30 97       	sbiw	r30, 0x00	; 0
 4e2:	29 f4       	brne	.+10     	; 0x4ee <free+0x10c>
 4e4:	10 92 0f 02 	sts	0x020F, r1
 4e8:	10 92 0e 02 	sts	0x020E, r1
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <free+0x110>
 4ee:	13 82       	std	Z+3, r1	; 0x03
 4f0:	12 82       	std	Z+2, r1	; 0x02
 4f2:	d0 93 0d 02 	sts	0x020D, r29
 4f6:	c0 93 0c 02 	sts	0x020C, r28
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	08 95       	ret

00000500 <memset>:
 500:	dc 01       	movw	r26, r24
 502:	01 c0       	rjmp	.+2      	; 0x506 <memset+0x6>
 504:	6d 93       	st	X+, r22
 506:	41 50       	subi	r20, 0x01	; 1
 508:	50 40       	sbci	r21, 0x00	; 0
 50a:	e0 f7       	brcc	.-8      	; 0x504 <memset+0x4>
 50c:	08 95       	ret

0000050e <_exit>:
 50e:	f8 94       	cli

00000510 <__stop_program>:
 510:	ff cf       	rjmp	.-2      	; 0x510 <__stop_program>


Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800200  00000bce  00000c62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080023e  0080023e  00000ca0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00000cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000caf  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000657  00000000  00000000  00001ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007ff  00000000  00000000  0000212a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  0000292c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000033f  00000000  00000000  00002b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000059c  00000000  00000000  00002ecb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00003467  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee ec       	ldi	r30, 0xCE	; 206
  fc:	fb e0       	ldi	r31, 0x0B	; 11
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 33       	cpi	r26, 0x3E	; 62
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e3       	ldi	r26, 0x3E	; 62
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 34       	cpi	r26, 0x48	; 72
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	92 d0       	rcall	.+292    	; 0x244 <main>
 120:	54 c5       	rjmp	.+2728   	; 0xbca <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
		MCP_write(MCP_TXB0CTRL + 6 + i, msg->data[i]);
	}
	
	/* Request to send contents of TXB0 */
	MCP_request_to_send(MCP_RTS_TX0);
}
 124:	82 c0       	rjmp	.+260    	; 0x22a <MCP_init>
 126:	08 95       	ret

00000128 <CAN_message_receive>:

can_message_t CAN_message_receive(void)
{
 128:	9f 92       	push	r9
 12a:	af 92       	push	r10
 12c:	bf 92       	push	r11
 12e:	cf 92       	push	r12
 130:	df 92       	push	r13
 132:	ef 92       	push	r14
 134:	ff 92       	push	r15
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	2b 97       	sbiw	r28, 0x0b	; 11
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	7c 01       	movw	r14, r24
	/* Only RXB0 is used */
	
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
 150:	82 e6       	ldi	r24, 0x62	; 98
 152:	45 d0       	rcall	.+138    	; 0x1de <MCP_read>
	message.id = (buffer >> 5);
 154:	82 95       	swap	r24
 156:	86 95       	lsr	r24
 158:	87 70       	andi	r24, 0x07	; 7
 15a:	c8 2e       	mov	r12, r24
 15c:	d1 2c       	mov	r13, r1
	buffer = MCP_read(MCP_RXB0CTRL + 5);
 15e:	85 e6       	ldi	r24, 0x65	; 101
 160:	3e d0       	rcall	.+124    	; 0x1de <MCP_read>
	message.length = (buffer & 0x0F);
 162:	8f 70       	andi	r24, 0x0F	; 15
 164:	98 2e       	mov	r9, r24
	for (uint8_t i = 0; i < message.length; i++) {
 166:	a1 f0       	breq	.+40     	; 0x190 <CAN_message_receive+0x68>
 168:	8e 01       	movw	r16, r28
 16a:	0c 5f       	subi	r16, 0xFC	; 252
 16c:	1f 4f       	sbci	r17, 0xFF	; 255
 16e:	0f 2e       	mov	r0, r31
 170:	f6 e6       	ldi	r31, 0x66	; 102
 172:	af 2e       	mov	r10, r31
 174:	f0 2d       	mov	r31, r0
 176:	a8 0e       	add	r10, r24
 178:	0f 2e       	mov	r0, r31
 17a:	f6 e6       	ldi	r31, 0x66	; 102
 17c:	bf 2e       	mov	r11, r31
 17e:	f0 2d       	mov	r31, r0
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
 180:	8b 2d       	mov	r24, r11
 182:	2d d0       	rcall	.+90     	; 0x1de <MCP_read>
 184:	f8 01       	movw	r30, r16
 186:	81 93       	st	Z+, r24
 188:	8f 01       	movw	r16, r30
 18a:	b3 94       	inc	r11
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
	message.id = (buffer >> 5);
	buffer = MCP_read(MCP_RXB0CTRL + 5);
	message.length = (buffer & 0x0F);
	for (uint8_t i = 0; i < message.length; i++) {
 18c:	ba 10       	cpse	r11, r10
 18e:	f8 cf       	rjmp	.-16     	; 0x180 <CAN_message_receive+0x58>
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
	}
	
	/* Clear CANINTF.RX0IF */
	MCP_modify_bit(MCP_CANINTF, 0x01, 0x00);
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	8c e2       	ldi	r24, 0x2C	; 44
 196:	30 d0       	rcall	.+96     	; 0x1f8 <MCP_modify_bit>
	
	return message;
 198:	da 82       	std	Y+2, r13	; 0x02
 19a:	c9 82       	std	Y+1, r12	; 0x01
 19c:	9b 82       	std	Y+3, r9	; 0x03
 19e:	8b e0       	ldi	r24, 0x0B	; 11
 1a0:	fe 01       	movw	r30, r28
 1a2:	31 96       	adiw	r30, 0x01	; 1
 1a4:	d7 01       	movw	r26, r14
 1a6:	01 90       	ld	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	8a 95       	dec	r24
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <CAN_message_receive+0x7e>
}
 1ae:	c7 01       	movw	r24, r14
 1b0:	2b 96       	adiw	r28, 0x0b	; 11
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	de bf       	out	0x3e, r29	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	cd bf       	out	0x3d, r28	; 61
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	ff 90       	pop	r15
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	bf 90       	pop	r11
 1ce:	af 90       	pop	r10
 1d0:	9f 90       	pop	r9
 1d2:	08 95       	ret

000001d4 <MCP_reset>:
	SPI_master_transmit(MCP_RX_STATUS);
	//SPI_master_transmit(0x00); // Unneccessary because of "repeat data out"?
	char status = SPDR;
	PORTB |= (1 << PB0);
	return status;
}
 1d4:	28 98       	cbi	0x05, 0	; 5
 1d6:	80 ec       	ldi	r24, 0xC0	; 192
 1d8:	a1 d0       	rcall	.+322    	; 0x31c <SPI_master_transmit>
 1da:	28 9a       	sbi	0x05, 0	; 5
 1dc:	08 95       	ret

000001de <MCP_read>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24
 1e2:	28 98       	cbi	0x05, 0	; 5
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	9a d0       	rcall	.+308    	; 0x31c <SPI_master_transmit>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	98 d0       	rcall	.+304    	; 0x31c <SPI_master_transmit>
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	96 d0       	rcall	.+300    	; 0x31c <SPI_master_transmit>
 1f0:	8e b5       	in	r24, 0x2e	; 46
 1f2:	28 9a       	sbi	0x05, 0	; 5
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <MCP_modify_bit>:
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
}

/* Changes the value of the register bits specified by the mask */
void MCP_modify_bit(uint8_t addr, uint8_t mask, uint8_t data)
{
 1f8:	1f 93       	push	r17
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	18 2f       	mov	r17, r24
 200:	d6 2f       	mov	r29, r22
 202:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB0);
 204:	28 98       	cbi	0x05, 0	; 5
	SPI_master_transmit(MCP_BITMOD);
 206:	85 e0       	ldi	r24, 0x05	; 5
 208:	89 d0       	rcall	.+274    	; 0x31c <SPI_master_transmit>
	SPI_master_transmit(addr);
 20a:	81 2f       	mov	r24, r17
 20c:	87 d0       	rcall	.+270    	; 0x31c <SPI_master_transmit>
	SPI_master_transmit(mask);
 20e:	8d 2f       	mov	r24, r29
 210:	85 d0       	rcall	.+266    	; 0x31c <SPI_master_transmit>
	SPI_master_transmit(data);
 212:	8c 2f       	mov	r24, r28
 214:	83 d0       	rcall	.+262    	; 0x31c <SPI_master_transmit>
	PORTB |= (1 << PB0);
 216:	28 9a       	sbi	0x05, 0	; 5
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	08 95       	ret

00000220 <MCP_set_mode>:
			break;
		default:
			break;
	}
	
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
 220:	48 2f       	mov	r20, r24
 222:	60 ee       	ldi	r22, 0xE0	; 224
 224:	8f e0       	ldi	r24, 0x0F	; 15
 226:	e8 cf       	rjmp	.-48     	; 0x1f8 <MCP_modify_bit>
 228:	08 95       	ret

0000022a <MCP_init>:
#include "MCP2515.h"
#include "mcp.h"

void MCP_init(void)
{
	SPI_master_init();
 22a:	73 d0       	rcall	.+230    	; 0x312 <SPI_master_init>
	MCP_reset();
 22c:	d3 df       	rcall	.-90     	; 0x1d4 <MCP_reset>
	
	MCP_modify_bit(MCP_RXB0CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX0
 22e:	4f ef       	ldi	r20, 0xFF	; 255
 230:	60 e6       	ldi	r22, 0x60	; 96
 232:	80 e6       	ldi	r24, 0x60	; 96
 234:	e1 df       	rcall	.-62     	; 0x1f8 <MCP_modify_bit>
	MCP_modify_bit(MCP_RXB1CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX1
 236:	4f ef       	ldi	r20, 0xFF	; 255
 238:	60 e6       	ldi	r22, 0x60	; 96
 23a:	80 e7       	ldi	r24, 0x70	; 112
 23c:	dd df       	rcall	.-70     	; 0x1f8 <MCP_modify_bit>
	//MCP_set_mode(MODE_LOOPBACK); // Sets loopback operation mode for testing
	MCP_set_mode(MODE_NORMAL); // Sets normal operation mode
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	ef cf       	rjmp	.-34     	; 0x220 <MCP_set_mode>
 242:	08 95       	ret

00000244 <main>:

#include "usart.h"
#include "can.h"

int main(void)
{
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	cd b7       	in	r28, 0x3d	; 61
 24a:	de b7       	in	r29, 0x3e	; 62
 24c:	2b 97       	sbiw	r28, 0x0b	; 11
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
	fdevopen(USART_transmit, USART_receive);
 258:	66 ea       	ldi	r22, 0xA6	; 166
 25a:	71 e0       	ldi	r23, 0x01	; 1
 25c:	8e e9       	ldi	r24, 0x9E	; 158
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	7d d0       	rcall	.+250    	; 0x35c <fdevopen>
	USART_init(MYUBRR);
 262:	87 e6       	ldi	r24, 0x67	; 103
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	5f d0       	rcall	.+190    	; 0x326 <USART_init>
	CAN_init();
 268:	5d df       	rcall	.-326    	; 0x124 <CAN_init>
	
	while(1)
	{
		uint8_t status = MCP_read(MCP_CANCTRL);
		printf("CANCTRL: %02x\n", status);
 26a:	0f 2e       	mov	r0, r31
 26c:	f6 e0       	ldi	r31, 0x06	; 6
 26e:	8f 2e       	mov	r8, r31
 270:	f2 e0       	ldi	r31, 0x02	; 2
 272:	9f 2e       	mov	r9, r31
 274:	f0 2d       	mov	r31, r0
		_delay_ms(500);
		
		/* CAN test begin */
		can_message_t received_message = CAN_message_receive();
		printf("ID: %02x\n", received_message.id);
 276:	0f 2e       	mov	r0, r31
 278:	f5 e1       	ldi	r31, 0x15	; 21
 27a:	af 2e       	mov	r10, r31
 27c:	f2 e0       	ldi	r31, 0x02	; 2
 27e:	bf 2e       	mov	r11, r31
 280:	f0 2d       	mov	r31, r0
		printf("length: %02x\n", received_message.length);
 282:	0f 2e       	mov	r0, r31
 284:	ff e1       	ldi	r31, 0x1F	; 31
 286:	cf 2e       	mov	r12, r31
 288:	f2 e0       	ldi	r31, 0x02	; 2
 28a:	df 2e       	mov	r13, r31
 28c:	f0 2d       	mov	r31, r0
		for (uint8_t i = 0; i < received_message.length; i++) {
 28e:	51 2c       	mov	r5, r1
			printf("Received: %02x\n", received_message.data[i]);
 290:	0f 2e       	mov	r0, r31
 292:	fd e2       	ldi	r31, 0x2D	; 45
 294:	ef 2e       	mov	r14, r31
 296:	f2 e0       	ldi	r31, 0x02	; 2
 298:	ff 2e       	mov	r15, r31
 29a:	f0 2d       	mov	r31, r0
	USART_init(MYUBRR);
	CAN_init();
	
	while(1)
	{
		uint8_t status = MCP_read(MCP_CANCTRL);
 29c:	8f e0       	ldi	r24, 0x0F	; 15
 29e:	9f df       	rcall	.-194    	; 0x1de <MCP_read>
		printf("CANCTRL: %02x\n", status);
 2a0:	1f 92       	push	r1
 2a2:	8f 93       	push	r24
 2a4:	9f 92       	push	r9
 2a6:	8f 92       	push	r8
 2a8:	a3 d0       	rcall	.+326    	; 0x3f0 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2aa:	2f ef       	ldi	r18, 0xFF	; 255
 2ac:	89 e6       	ldi	r24, 0x69	; 105
 2ae:	98 e1       	ldi	r25, 0x18	; 24
 2b0:	21 50       	subi	r18, 0x01	; 1
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	90 40       	sbci	r25, 0x00	; 0
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <main+0x6c>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x76>
 2ba:	00 00       	nop
		_delay_ms(500);
		
		/* CAN test begin */
		can_message_t received_message = CAN_message_receive();
 2bc:	ce 01       	movw	r24, r28
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	33 df       	rcall	.-410    	; 0x128 <CAN_message_receive>
 2c2:	6b 80       	ldd	r6, Y+3	; 0x03
		printf("ID: %02x\n", received_message.id);
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	8f 93       	push	r24
 2c8:	89 81       	ldd	r24, Y+1	; 0x01
 2ca:	8f 93       	push	r24
 2cc:	bf 92       	push	r11
 2ce:	af 92       	push	r10
 2d0:	8f d0       	rcall	.+286    	; 0x3f0 <printf>
		printf("length: %02x\n", received_message.length);
 2d2:	1f 92       	push	r1
 2d4:	6f 92       	push	r6
 2d6:	df 92       	push	r13
 2d8:	cf 92       	push	r12
 2da:	8a d0       	rcall	.+276    	; 0x3f0 <printf>
		for (uint8_t i = 0; i < received_message.length; i++) {
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	f8 94       	cli
 2e0:	de bf       	out	0x3e, r29	; 62
 2e2:	0f be       	out	0x3f, r0	; 63
 2e4:	cd bf       	out	0x3d, r28	; 61
 2e6:	66 20       	and	r6, r6
 2e8:	c9 f2       	breq	.-78     	; 0x29c <main+0x58>
 2ea:	8e 01       	movw	r16, r28
 2ec:	0c 5f       	subi	r16, 0xFC	; 252
 2ee:	1f 4f       	sbci	r17, 0xFF	; 255
 2f0:	75 2c       	mov	r7, r5
			printf("Received: %02x\n", received_message.data[i]);
 2f2:	f8 01       	movw	r30, r16
 2f4:	81 91       	ld	r24, Z+
 2f6:	8f 01       	movw	r16, r30
 2f8:	1f 92       	push	r1
 2fa:	8f 93       	push	r24
 2fc:	ff 92       	push	r15
 2fe:	ef 92       	push	r14
 300:	77 d0       	rcall	.+238    	; 0x3f0 <printf>
		
		/* CAN test begin */
		can_message_t received_message = CAN_message_receive();
		printf("ID: %02x\n", received_message.id);
		printf("length: %02x\n", received_message.length);
		for (uint8_t i = 0; i < received_message.length; i++) {
 302:	73 94       	inc	r7
 304:	0f 90       	pop	r0
 306:	0f 90       	pop	r0
 308:	0f 90       	pop	r0
 30a:	0f 90       	pop	r0
 30c:	76 10       	cpse	r7, r6
 30e:	f1 cf       	rjmp	.-30     	; 0x2f2 <main+0xae>
 310:	c5 cf       	rjmp	.-118    	; 0x29c <main+0x58>

00000312 <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB0)|(1 << PB2)|(1 << PB1); // Setting ~SS necessary?
 312:	87 e0       	ldi	r24, 0x07	; 7
 314:	84 b9       	out	0x04, r24	; 4
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
 316:	81 e5       	ldi	r24, 0x51	; 81
 318:	8c bd       	out	0x2c, r24	; 44
 31a:	08 95       	ret

0000031c <SPI_master_transmit>:
}

void SPI_master_transmit(uint8_t cData)
{
	/* Start transmission */
	SPDR = cData;
 31c:	8e bd       	out	0x2e, r24	; 46
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
 31e:	0d b4       	in	r0, 0x2d	; 45
 320:	07 fe       	sbrs	r0, 7
 322:	fd cf       	rjmp	.-6      	; 0x31e <SPI_master_transmit+0x2>
		;
	}
}
 324:	08 95       	ret

00000326 <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 326:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 32a:	80 93 c4 00 	sts	0x00C4, r24
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 32e:	88 e1       	ldi	r24, 0x18	; 24
 330:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << USBS0)|(3 << UCSZ10);
 334:	8e e0       	ldi	r24, 0x0E	; 14
 336:	80 93 c2 00 	sts	0x00C2, r24
 33a:	08 95       	ret

0000033c <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 33c:	e0 ec       	ldi	r30, 0xC0	; 192
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	90 81       	ld	r25, Z
 342:	95 ff       	sbrs	r25, 5
 344:	fd cf       	rjmp	.-6      	; 0x340 <USART_transmit+0x4>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 346:	80 93 c6 00 	sts	0x00C6, r24
 34a:	08 95       	ret

0000034c <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 34c:	e0 ec       	ldi	r30, 0xC0	; 192
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	88 23       	and	r24, r24
 354:	ec f7       	brge	.-6      	; 0x350 <USART_receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 356:	80 91 c6 00 	lds	r24, 0x00C6
}
 35a:	08 95       	ret

0000035c <fdevopen>:
 35c:	0f 93       	push	r16
 35e:	1f 93       	push	r17
 360:	cf 93       	push	r28
 362:	df 93       	push	r29
 364:	ec 01       	movw	r28, r24
 366:	8b 01       	movw	r16, r22
 368:	00 97       	sbiw	r24, 0x00	; 0
 36a:	31 f4       	brne	.+12     	; 0x378 <fdevopen+0x1c>
 36c:	61 15       	cp	r22, r1
 36e:	71 05       	cpc	r23, r1
 370:	19 f4       	brne	.+6      	; 0x378 <fdevopen+0x1c>
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	37 c0       	rjmp	.+110    	; 0x3e6 <fdevopen+0x8a>
 378:	6e e0       	ldi	r22, 0x0E	; 14
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	36 d2       	rcall	.+1132   	; 0x7ee <calloc>
 382:	fc 01       	movw	r30, r24
 384:	00 97       	sbiw	r24, 0x00	; 0
 386:	a9 f3       	breq	.-22     	; 0x372 <fdevopen+0x16>
 388:	80 e8       	ldi	r24, 0x80	; 128
 38a:	83 83       	std	Z+3, r24	; 0x03
 38c:	01 15       	cp	r16, r1
 38e:	11 05       	cpc	r17, r1
 390:	71 f0       	breq	.+28     	; 0x3ae <fdevopen+0x52>
 392:	13 87       	std	Z+11, r17	; 0x0b
 394:	02 87       	std	Z+10, r16	; 0x0a
 396:	81 e8       	ldi	r24, 0x81	; 129
 398:	83 83       	std	Z+3, r24	; 0x03
 39a:	80 91 3e 02 	lds	r24, 0x023E
 39e:	90 91 3f 02 	lds	r25, 0x023F
 3a2:	89 2b       	or	r24, r25
 3a4:	21 f4       	brne	.+8      	; 0x3ae <fdevopen+0x52>
 3a6:	f0 93 3f 02 	sts	0x023F, r31
 3aa:	e0 93 3e 02 	sts	0x023E, r30
 3ae:	20 97       	sbiw	r28, 0x00	; 0
 3b0:	c9 f0       	breq	.+50     	; 0x3e4 <fdevopen+0x88>
 3b2:	d1 87       	std	Z+9, r29	; 0x09
 3b4:	c0 87       	std	Z+8, r28	; 0x08
 3b6:	83 81       	ldd	r24, Z+3	; 0x03
 3b8:	82 60       	ori	r24, 0x02	; 2
 3ba:	83 83       	std	Z+3, r24	; 0x03
 3bc:	80 91 40 02 	lds	r24, 0x0240
 3c0:	90 91 41 02 	lds	r25, 0x0241
 3c4:	89 2b       	or	r24, r25
 3c6:	71 f4       	brne	.+28     	; 0x3e4 <fdevopen+0x88>
 3c8:	f0 93 41 02 	sts	0x0241, r31
 3cc:	e0 93 40 02 	sts	0x0240, r30
 3d0:	80 91 42 02 	lds	r24, 0x0242
 3d4:	90 91 43 02 	lds	r25, 0x0243
 3d8:	89 2b       	or	r24, r25
 3da:	21 f4       	brne	.+8      	; 0x3e4 <fdevopen+0x88>
 3dc:	f0 93 43 02 	sts	0x0243, r31
 3e0:	e0 93 42 02 	sts	0x0242, r30
 3e4:	cf 01       	movw	r24, r30
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	08 95       	ret

000003f0 <printf>:
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	fe 01       	movw	r30, r28
 3fa:	36 96       	adiw	r30, 0x06	; 6
 3fc:	61 91       	ld	r22, Z+
 3fe:	71 91       	ld	r23, Z+
 400:	af 01       	movw	r20, r30
 402:	80 91 40 02 	lds	r24, 0x0240
 406:	90 91 41 02 	lds	r25, 0x0241
 40a:	03 d0       	rcall	.+6      	; 0x412 <vfprintf>
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <vfprintf>:
 412:	2f 92       	push	r2
 414:	3f 92       	push	r3
 416:	4f 92       	push	r4
 418:	5f 92       	push	r5
 41a:	6f 92       	push	r6
 41c:	7f 92       	push	r7
 41e:	8f 92       	push	r8
 420:	9f 92       	push	r9
 422:	af 92       	push	r10
 424:	bf 92       	push	r11
 426:	cf 92       	push	r12
 428:	df 92       	push	r13
 42a:	ef 92       	push	r14
 42c:	ff 92       	push	r15
 42e:	0f 93       	push	r16
 430:	1f 93       	push	r17
 432:	cf 93       	push	r28
 434:	df 93       	push	r29
 436:	cd b7       	in	r28, 0x3d	; 61
 438:	de b7       	in	r29, 0x3e	; 62
 43a:	2c 97       	sbiw	r28, 0x0c	; 12
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	f8 94       	cli
 440:	de bf       	out	0x3e, r29	; 62
 442:	0f be       	out	0x3f, r0	; 63
 444:	cd bf       	out	0x3d, r28	; 61
 446:	7c 01       	movw	r14, r24
 448:	6b 01       	movw	r12, r22
 44a:	8a 01       	movw	r16, r20
 44c:	fc 01       	movw	r30, r24
 44e:	17 82       	std	Z+7, r1	; 0x07
 450:	16 82       	std	Z+6, r1	; 0x06
 452:	83 81       	ldd	r24, Z+3	; 0x03
 454:	81 ff       	sbrs	r24, 1
 456:	b0 c1       	rjmp	.+864    	; 0x7b8 <vfprintf+0x3a6>
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	4c 01       	movw	r8, r24
 45e:	f7 01       	movw	r30, r14
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	f6 01       	movw	r30, r12
 464:	93 fd       	sbrc	r25, 3
 466:	85 91       	lpm	r24, Z+
 468:	93 ff       	sbrs	r25, 3
 46a:	81 91       	ld	r24, Z+
 46c:	6f 01       	movw	r12, r30
 46e:	88 23       	and	r24, r24
 470:	09 f4       	brne	.+2      	; 0x474 <vfprintf+0x62>
 472:	9e c1       	rjmp	.+828    	; 0x7b0 <vfprintf+0x39e>
 474:	85 32       	cpi	r24, 0x25	; 37
 476:	39 f4       	brne	.+14     	; 0x486 <vfprintf+0x74>
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	6f 01       	movw	r12, r30
 482:	85 32       	cpi	r24, 0x25	; 37
 484:	21 f4       	brne	.+8      	; 0x48e <vfprintf+0x7c>
 486:	b7 01       	movw	r22, r14
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	0f d3       	rcall	.+1566   	; 0xaaa <fputc>
 48c:	e8 cf       	rjmp	.-48     	; 0x45e <vfprintf+0x4c>
 48e:	51 2c       	mov	r5, r1
 490:	31 2c       	mov	r3, r1
 492:	20 e0       	ldi	r18, 0x00	; 0
 494:	20 32       	cpi	r18, 0x20	; 32
 496:	a0 f4       	brcc	.+40     	; 0x4c0 <vfprintf+0xae>
 498:	8b 32       	cpi	r24, 0x2B	; 43
 49a:	69 f0       	breq	.+26     	; 0x4b6 <vfprintf+0xa4>
 49c:	30 f4       	brcc	.+12     	; 0x4aa <vfprintf+0x98>
 49e:	80 32       	cpi	r24, 0x20	; 32
 4a0:	59 f0       	breq	.+22     	; 0x4b8 <vfprintf+0xa6>
 4a2:	83 32       	cpi	r24, 0x23	; 35
 4a4:	69 f4       	brne	.+26     	; 0x4c0 <vfprintf+0xae>
 4a6:	20 61       	ori	r18, 0x10	; 16
 4a8:	2c c0       	rjmp	.+88     	; 0x502 <vfprintf+0xf0>
 4aa:	8d 32       	cpi	r24, 0x2D	; 45
 4ac:	39 f0       	breq	.+14     	; 0x4bc <vfprintf+0xaa>
 4ae:	80 33       	cpi	r24, 0x30	; 48
 4b0:	39 f4       	brne	.+14     	; 0x4c0 <vfprintf+0xae>
 4b2:	21 60       	ori	r18, 0x01	; 1
 4b4:	26 c0       	rjmp	.+76     	; 0x502 <vfprintf+0xf0>
 4b6:	22 60       	ori	r18, 0x02	; 2
 4b8:	24 60       	ori	r18, 0x04	; 4
 4ba:	23 c0       	rjmp	.+70     	; 0x502 <vfprintf+0xf0>
 4bc:	28 60       	ori	r18, 0x08	; 8
 4be:	21 c0       	rjmp	.+66     	; 0x502 <vfprintf+0xf0>
 4c0:	27 fd       	sbrc	r18, 7
 4c2:	27 c0       	rjmp	.+78     	; 0x512 <vfprintf+0x100>
 4c4:	30 ed       	ldi	r19, 0xD0	; 208
 4c6:	38 0f       	add	r19, r24
 4c8:	3a 30       	cpi	r19, 0x0A	; 10
 4ca:	78 f4       	brcc	.+30     	; 0x4ea <vfprintf+0xd8>
 4cc:	26 ff       	sbrs	r18, 6
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <vfprintf+0xca>
 4d0:	fa e0       	ldi	r31, 0x0A	; 10
 4d2:	5f 9e       	mul	r5, r31
 4d4:	30 0d       	add	r19, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	53 2e       	mov	r5, r19
 4da:	13 c0       	rjmp	.+38     	; 0x502 <vfprintf+0xf0>
 4dc:	8a e0       	ldi	r24, 0x0A	; 10
 4de:	38 9e       	mul	r3, r24
 4e0:	30 0d       	add	r19, r0
 4e2:	11 24       	eor	r1, r1
 4e4:	33 2e       	mov	r3, r19
 4e6:	20 62       	ori	r18, 0x20	; 32
 4e8:	0c c0       	rjmp	.+24     	; 0x502 <vfprintf+0xf0>
 4ea:	8e 32       	cpi	r24, 0x2E	; 46
 4ec:	21 f4       	brne	.+8      	; 0x4f6 <vfprintf+0xe4>
 4ee:	26 fd       	sbrc	r18, 6
 4f0:	5f c1       	rjmp	.+702    	; 0x7b0 <vfprintf+0x39e>
 4f2:	20 64       	ori	r18, 0x40	; 64
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <vfprintf+0xf0>
 4f6:	8c 36       	cpi	r24, 0x6C	; 108
 4f8:	11 f4       	brne	.+4      	; 0x4fe <vfprintf+0xec>
 4fa:	20 68       	ori	r18, 0x80	; 128
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <vfprintf+0xf0>
 4fe:	88 36       	cpi	r24, 0x68	; 104
 500:	41 f4       	brne	.+16     	; 0x512 <vfprintf+0x100>
 502:	f6 01       	movw	r30, r12
 504:	93 fd       	sbrc	r25, 3
 506:	85 91       	lpm	r24, Z+
 508:	93 ff       	sbrs	r25, 3
 50a:	81 91       	ld	r24, Z+
 50c:	6f 01       	movw	r12, r30
 50e:	81 11       	cpse	r24, r1
 510:	c1 cf       	rjmp	.-126    	; 0x494 <vfprintf+0x82>
 512:	98 2f       	mov	r25, r24
 514:	9f 7d       	andi	r25, 0xDF	; 223
 516:	95 54       	subi	r25, 0x45	; 69
 518:	93 30       	cpi	r25, 0x03	; 3
 51a:	28 f4       	brcc	.+10     	; 0x526 <vfprintf+0x114>
 51c:	0c 5f       	subi	r16, 0xFC	; 252
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	ff e3       	ldi	r31, 0x3F	; 63
 522:	f9 83       	std	Y+1, r31	; 0x01
 524:	0d c0       	rjmp	.+26     	; 0x540 <vfprintf+0x12e>
 526:	83 36       	cpi	r24, 0x63	; 99
 528:	31 f0       	breq	.+12     	; 0x536 <vfprintf+0x124>
 52a:	83 37       	cpi	r24, 0x73	; 115
 52c:	71 f0       	breq	.+28     	; 0x54a <vfprintf+0x138>
 52e:	83 35       	cpi	r24, 0x53	; 83
 530:	09 f0       	breq	.+2      	; 0x534 <vfprintf+0x122>
 532:	57 c0       	rjmp	.+174    	; 0x5e2 <vfprintf+0x1d0>
 534:	21 c0       	rjmp	.+66     	; 0x578 <vfprintf+0x166>
 536:	f8 01       	movw	r30, r16
 538:	80 81       	ld	r24, Z
 53a:	89 83       	std	Y+1, r24	; 0x01
 53c:	0e 5f       	subi	r16, 0xFE	; 254
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	44 24       	eor	r4, r4
 542:	43 94       	inc	r4
 544:	51 2c       	mov	r5, r1
 546:	54 01       	movw	r10, r8
 548:	14 c0       	rjmp	.+40     	; 0x572 <vfprintf+0x160>
 54a:	38 01       	movw	r6, r16
 54c:	f2 e0       	ldi	r31, 0x02	; 2
 54e:	6f 0e       	add	r6, r31
 550:	71 1c       	adc	r7, r1
 552:	f8 01       	movw	r30, r16
 554:	a0 80       	ld	r10, Z
 556:	b1 80       	ldd	r11, Z+1	; 0x01
 558:	26 ff       	sbrs	r18, 6
 55a:	03 c0       	rjmp	.+6      	; 0x562 <vfprintf+0x150>
 55c:	65 2d       	mov	r22, r5
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	02 c0       	rjmp	.+4      	; 0x566 <vfprintf+0x154>
 562:	6f ef       	ldi	r22, 0xFF	; 255
 564:	7f ef       	ldi	r23, 0xFF	; 255
 566:	c5 01       	movw	r24, r10
 568:	2c 87       	std	Y+12, r18	; 0x0c
 56a:	94 d2       	rcall	.+1320   	; 0xa94 <strnlen>
 56c:	2c 01       	movw	r4, r24
 56e:	83 01       	movw	r16, r6
 570:	2c 85       	ldd	r18, Y+12	; 0x0c
 572:	2f 77       	andi	r18, 0x7F	; 127
 574:	22 2e       	mov	r2, r18
 576:	16 c0       	rjmp	.+44     	; 0x5a4 <vfprintf+0x192>
 578:	38 01       	movw	r6, r16
 57a:	f2 e0       	ldi	r31, 0x02	; 2
 57c:	6f 0e       	add	r6, r31
 57e:	71 1c       	adc	r7, r1
 580:	f8 01       	movw	r30, r16
 582:	a0 80       	ld	r10, Z
 584:	b1 80       	ldd	r11, Z+1	; 0x01
 586:	26 ff       	sbrs	r18, 6
 588:	03 c0       	rjmp	.+6      	; 0x590 <vfprintf+0x17e>
 58a:	65 2d       	mov	r22, r5
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	02 c0       	rjmp	.+4      	; 0x594 <vfprintf+0x182>
 590:	6f ef       	ldi	r22, 0xFF	; 255
 592:	7f ef       	ldi	r23, 0xFF	; 255
 594:	c5 01       	movw	r24, r10
 596:	2c 87       	std	Y+12, r18	; 0x0c
 598:	6b d2       	rcall	.+1238   	; 0xa70 <strnlen_P>
 59a:	2c 01       	movw	r4, r24
 59c:	2c 85       	ldd	r18, Y+12	; 0x0c
 59e:	20 68       	ori	r18, 0x80	; 128
 5a0:	22 2e       	mov	r2, r18
 5a2:	83 01       	movw	r16, r6
 5a4:	23 fc       	sbrc	r2, 3
 5a6:	19 c0       	rjmp	.+50     	; 0x5da <vfprintf+0x1c8>
 5a8:	83 2d       	mov	r24, r3
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	48 16       	cp	r4, r24
 5ae:	59 06       	cpc	r5, r25
 5b0:	a0 f4       	brcc	.+40     	; 0x5da <vfprintf+0x1c8>
 5b2:	b7 01       	movw	r22, r14
 5b4:	80 e2       	ldi	r24, 0x20	; 32
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	78 d2       	rcall	.+1264   	; 0xaaa <fputc>
 5ba:	3a 94       	dec	r3
 5bc:	f5 cf       	rjmp	.-22     	; 0x5a8 <vfprintf+0x196>
 5be:	f5 01       	movw	r30, r10
 5c0:	27 fc       	sbrc	r2, 7
 5c2:	85 91       	lpm	r24, Z+
 5c4:	27 fe       	sbrs	r2, 7
 5c6:	81 91       	ld	r24, Z+
 5c8:	5f 01       	movw	r10, r30
 5ca:	b7 01       	movw	r22, r14
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	6d d2       	rcall	.+1242   	; 0xaaa <fputc>
 5d0:	31 10       	cpse	r3, r1
 5d2:	3a 94       	dec	r3
 5d4:	f1 e0       	ldi	r31, 0x01	; 1
 5d6:	4f 1a       	sub	r4, r31
 5d8:	51 08       	sbc	r5, r1
 5da:	41 14       	cp	r4, r1
 5dc:	51 04       	cpc	r5, r1
 5de:	79 f7       	brne	.-34     	; 0x5be <vfprintf+0x1ac>
 5e0:	de c0       	rjmp	.+444    	; 0x79e <vfprintf+0x38c>
 5e2:	84 36       	cpi	r24, 0x64	; 100
 5e4:	11 f0       	breq	.+4      	; 0x5ea <vfprintf+0x1d8>
 5e6:	89 36       	cpi	r24, 0x69	; 105
 5e8:	31 f5       	brne	.+76     	; 0x636 <vfprintf+0x224>
 5ea:	f8 01       	movw	r30, r16
 5ec:	27 ff       	sbrs	r18, 7
 5ee:	07 c0       	rjmp	.+14     	; 0x5fe <vfprintf+0x1ec>
 5f0:	60 81       	ld	r22, Z
 5f2:	71 81       	ldd	r23, Z+1	; 0x01
 5f4:	82 81       	ldd	r24, Z+2	; 0x02
 5f6:	93 81       	ldd	r25, Z+3	; 0x03
 5f8:	0c 5f       	subi	r16, 0xFC	; 252
 5fa:	1f 4f       	sbci	r17, 0xFF	; 255
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <vfprintf+0x1fc>
 5fe:	60 81       	ld	r22, Z
 600:	71 81       	ldd	r23, Z+1	; 0x01
 602:	88 27       	eor	r24, r24
 604:	77 fd       	sbrc	r23, 7
 606:	80 95       	com	r24
 608:	98 2f       	mov	r25, r24
 60a:	0e 5f       	subi	r16, 0xFE	; 254
 60c:	1f 4f       	sbci	r17, 0xFF	; 255
 60e:	2f 76       	andi	r18, 0x6F	; 111
 610:	b2 2e       	mov	r11, r18
 612:	97 ff       	sbrs	r25, 7
 614:	09 c0       	rjmp	.+18     	; 0x628 <vfprintf+0x216>
 616:	90 95       	com	r25
 618:	80 95       	com	r24
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	20 68       	ori	r18, 0x80	; 128
 626:	b2 2e       	mov	r11, r18
 628:	2a e0       	ldi	r18, 0x0A	; 10
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	a4 01       	movw	r20, r8
 62e:	6f d2       	rcall	.+1246   	; 0xb0e <__ultoa_invert>
 630:	a8 2e       	mov	r10, r24
 632:	a8 18       	sub	r10, r8
 634:	43 c0       	rjmp	.+134    	; 0x6bc <vfprintf+0x2aa>
 636:	85 37       	cpi	r24, 0x75	; 117
 638:	29 f4       	brne	.+10     	; 0x644 <vfprintf+0x232>
 63a:	2f 7e       	andi	r18, 0xEF	; 239
 63c:	b2 2e       	mov	r11, r18
 63e:	2a e0       	ldi	r18, 0x0A	; 10
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	25 c0       	rjmp	.+74     	; 0x68e <vfprintf+0x27c>
 644:	f2 2f       	mov	r31, r18
 646:	f9 7f       	andi	r31, 0xF9	; 249
 648:	bf 2e       	mov	r11, r31
 64a:	8f 36       	cpi	r24, 0x6F	; 111
 64c:	c1 f0       	breq	.+48     	; 0x67e <vfprintf+0x26c>
 64e:	18 f4       	brcc	.+6      	; 0x656 <vfprintf+0x244>
 650:	88 35       	cpi	r24, 0x58	; 88
 652:	79 f0       	breq	.+30     	; 0x672 <vfprintf+0x260>
 654:	ad c0       	rjmp	.+346    	; 0x7b0 <vfprintf+0x39e>
 656:	80 37       	cpi	r24, 0x70	; 112
 658:	19 f0       	breq	.+6      	; 0x660 <vfprintf+0x24e>
 65a:	88 37       	cpi	r24, 0x78	; 120
 65c:	21 f0       	breq	.+8      	; 0x666 <vfprintf+0x254>
 65e:	a8 c0       	rjmp	.+336    	; 0x7b0 <vfprintf+0x39e>
 660:	2f 2f       	mov	r18, r31
 662:	20 61       	ori	r18, 0x10	; 16
 664:	b2 2e       	mov	r11, r18
 666:	b4 fe       	sbrs	r11, 4
 668:	0d c0       	rjmp	.+26     	; 0x684 <vfprintf+0x272>
 66a:	8b 2d       	mov	r24, r11
 66c:	84 60       	ori	r24, 0x04	; 4
 66e:	b8 2e       	mov	r11, r24
 670:	09 c0       	rjmp	.+18     	; 0x684 <vfprintf+0x272>
 672:	24 ff       	sbrs	r18, 4
 674:	0a c0       	rjmp	.+20     	; 0x68a <vfprintf+0x278>
 676:	9f 2f       	mov	r25, r31
 678:	96 60       	ori	r25, 0x06	; 6
 67a:	b9 2e       	mov	r11, r25
 67c:	06 c0       	rjmp	.+12     	; 0x68a <vfprintf+0x278>
 67e:	28 e0       	ldi	r18, 0x08	; 8
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	05 c0       	rjmp	.+10     	; 0x68e <vfprintf+0x27c>
 684:	20 e1       	ldi	r18, 0x10	; 16
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	02 c0       	rjmp	.+4      	; 0x68e <vfprintf+0x27c>
 68a:	20 e1       	ldi	r18, 0x10	; 16
 68c:	32 e0       	ldi	r19, 0x02	; 2
 68e:	f8 01       	movw	r30, r16
 690:	b7 fe       	sbrs	r11, 7
 692:	07 c0       	rjmp	.+14     	; 0x6a2 <vfprintf+0x290>
 694:	60 81       	ld	r22, Z
 696:	71 81       	ldd	r23, Z+1	; 0x01
 698:	82 81       	ldd	r24, Z+2	; 0x02
 69a:	93 81       	ldd	r25, Z+3	; 0x03
 69c:	0c 5f       	subi	r16, 0xFC	; 252
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	06 c0       	rjmp	.+12     	; 0x6ae <vfprintf+0x29c>
 6a2:	60 81       	ld	r22, Z
 6a4:	71 81       	ldd	r23, Z+1	; 0x01
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 5f       	subi	r16, 0xFE	; 254
 6ac:	1f 4f       	sbci	r17, 0xFF	; 255
 6ae:	a4 01       	movw	r20, r8
 6b0:	2e d2       	rcall	.+1116   	; 0xb0e <__ultoa_invert>
 6b2:	a8 2e       	mov	r10, r24
 6b4:	a8 18       	sub	r10, r8
 6b6:	fb 2d       	mov	r31, r11
 6b8:	ff 77       	andi	r31, 0x7F	; 127
 6ba:	bf 2e       	mov	r11, r31
 6bc:	b6 fe       	sbrs	r11, 6
 6be:	0b c0       	rjmp	.+22     	; 0x6d6 <vfprintf+0x2c4>
 6c0:	2b 2d       	mov	r18, r11
 6c2:	2e 7f       	andi	r18, 0xFE	; 254
 6c4:	a5 14       	cp	r10, r5
 6c6:	50 f4       	brcc	.+20     	; 0x6dc <vfprintf+0x2ca>
 6c8:	b4 fe       	sbrs	r11, 4
 6ca:	0a c0       	rjmp	.+20     	; 0x6e0 <vfprintf+0x2ce>
 6cc:	b2 fc       	sbrc	r11, 2
 6ce:	08 c0       	rjmp	.+16     	; 0x6e0 <vfprintf+0x2ce>
 6d0:	2b 2d       	mov	r18, r11
 6d2:	2e 7e       	andi	r18, 0xEE	; 238
 6d4:	05 c0       	rjmp	.+10     	; 0x6e0 <vfprintf+0x2ce>
 6d6:	7a 2c       	mov	r7, r10
 6d8:	2b 2d       	mov	r18, r11
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x2d0>
 6dc:	7a 2c       	mov	r7, r10
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <vfprintf+0x2d0>
 6e0:	75 2c       	mov	r7, r5
 6e2:	24 ff       	sbrs	r18, 4
 6e4:	0d c0       	rjmp	.+26     	; 0x700 <vfprintf+0x2ee>
 6e6:	fe 01       	movw	r30, r28
 6e8:	ea 0d       	add	r30, r10
 6ea:	f1 1d       	adc	r31, r1
 6ec:	80 81       	ld	r24, Z
 6ee:	80 33       	cpi	r24, 0x30	; 48
 6f0:	11 f4       	brne	.+4      	; 0x6f6 <vfprintf+0x2e4>
 6f2:	29 7e       	andi	r18, 0xE9	; 233
 6f4:	09 c0       	rjmp	.+18     	; 0x708 <vfprintf+0x2f6>
 6f6:	22 ff       	sbrs	r18, 2
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <vfprintf+0x2f4>
 6fa:	73 94       	inc	r7
 6fc:	73 94       	inc	r7
 6fe:	04 c0       	rjmp	.+8      	; 0x708 <vfprintf+0x2f6>
 700:	82 2f       	mov	r24, r18
 702:	86 78       	andi	r24, 0x86	; 134
 704:	09 f0       	breq	.+2      	; 0x708 <vfprintf+0x2f6>
 706:	73 94       	inc	r7
 708:	23 fd       	sbrc	r18, 3
 70a:	12 c0       	rjmp	.+36     	; 0x730 <vfprintf+0x31e>
 70c:	20 ff       	sbrs	r18, 0
 70e:	06 c0       	rjmp	.+12     	; 0x71c <vfprintf+0x30a>
 710:	5a 2c       	mov	r5, r10
 712:	73 14       	cp	r7, r3
 714:	18 f4       	brcc	.+6      	; 0x71c <vfprintf+0x30a>
 716:	53 0c       	add	r5, r3
 718:	57 18       	sub	r5, r7
 71a:	73 2c       	mov	r7, r3
 71c:	73 14       	cp	r7, r3
 71e:	60 f4       	brcc	.+24     	; 0x738 <vfprintf+0x326>
 720:	b7 01       	movw	r22, r14
 722:	80 e2       	ldi	r24, 0x20	; 32
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	2c 87       	std	Y+12, r18	; 0x0c
 728:	c0 d1       	rcall	.+896    	; 0xaaa <fputc>
 72a:	73 94       	inc	r7
 72c:	2c 85       	ldd	r18, Y+12	; 0x0c
 72e:	f6 cf       	rjmp	.-20     	; 0x71c <vfprintf+0x30a>
 730:	73 14       	cp	r7, r3
 732:	10 f4       	brcc	.+4      	; 0x738 <vfprintf+0x326>
 734:	37 18       	sub	r3, r7
 736:	01 c0       	rjmp	.+2      	; 0x73a <vfprintf+0x328>
 738:	31 2c       	mov	r3, r1
 73a:	24 ff       	sbrs	r18, 4
 73c:	11 c0       	rjmp	.+34     	; 0x760 <vfprintf+0x34e>
 73e:	b7 01       	movw	r22, r14
 740:	80 e3       	ldi	r24, 0x30	; 48
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	2c 87       	std	Y+12, r18	; 0x0c
 746:	b1 d1       	rcall	.+866    	; 0xaaa <fputc>
 748:	2c 85       	ldd	r18, Y+12	; 0x0c
 74a:	22 ff       	sbrs	r18, 2
 74c:	16 c0       	rjmp	.+44     	; 0x77a <vfprintf+0x368>
 74e:	21 ff       	sbrs	r18, 1
 750:	03 c0       	rjmp	.+6      	; 0x758 <vfprintf+0x346>
 752:	88 e5       	ldi	r24, 0x58	; 88
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <vfprintf+0x34a>
 758:	88 e7       	ldi	r24, 0x78	; 120
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	b7 01       	movw	r22, r14
 75e:	0c c0       	rjmp	.+24     	; 0x778 <vfprintf+0x366>
 760:	82 2f       	mov	r24, r18
 762:	86 78       	andi	r24, 0x86	; 134
 764:	51 f0       	breq	.+20     	; 0x77a <vfprintf+0x368>
 766:	21 fd       	sbrc	r18, 1
 768:	02 c0       	rjmp	.+4      	; 0x76e <vfprintf+0x35c>
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	01 c0       	rjmp	.+2      	; 0x770 <vfprintf+0x35e>
 76e:	8b e2       	ldi	r24, 0x2B	; 43
 770:	27 fd       	sbrc	r18, 7
 772:	8d e2       	ldi	r24, 0x2D	; 45
 774:	b7 01       	movw	r22, r14
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	98 d1       	rcall	.+816    	; 0xaaa <fputc>
 77a:	a5 14       	cp	r10, r5
 77c:	30 f4       	brcc	.+12     	; 0x78a <vfprintf+0x378>
 77e:	b7 01       	movw	r22, r14
 780:	80 e3       	ldi	r24, 0x30	; 48
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	92 d1       	rcall	.+804    	; 0xaaa <fputc>
 786:	5a 94       	dec	r5
 788:	f8 cf       	rjmp	.-16     	; 0x77a <vfprintf+0x368>
 78a:	aa 94       	dec	r10
 78c:	f4 01       	movw	r30, r8
 78e:	ea 0d       	add	r30, r10
 790:	f1 1d       	adc	r31, r1
 792:	80 81       	ld	r24, Z
 794:	b7 01       	movw	r22, r14
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	88 d1       	rcall	.+784    	; 0xaaa <fputc>
 79a:	a1 10       	cpse	r10, r1
 79c:	f6 cf       	rjmp	.-20     	; 0x78a <vfprintf+0x378>
 79e:	33 20       	and	r3, r3
 7a0:	09 f4       	brne	.+2      	; 0x7a4 <vfprintf+0x392>
 7a2:	5d ce       	rjmp	.-838    	; 0x45e <vfprintf+0x4c>
 7a4:	b7 01       	movw	r22, r14
 7a6:	80 e2       	ldi	r24, 0x20	; 32
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	7f d1       	rcall	.+766    	; 0xaaa <fputc>
 7ac:	3a 94       	dec	r3
 7ae:	f7 cf       	rjmp	.-18     	; 0x79e <vfprintf+0x38c>
 7b0:	f7 01       	movw	r30, r14
 7b2:	86 81       	ldd	r24, Z+6	; 0x06
 7b4:	97 81       	ldd	r25, Z+7	; 0x07
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <vfprintf+0x3aa>
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	2c 96       	adiw	r28, 0x0c	; 12
 7be:	0f b6       	in	r0, 0x3f	; 63
 7c0:	f8 94       	cli
 7c2:	de bf       	out	0x3e, r29	; 62
 7c4:	0f be       	out	0x3f, r0	; 63
 7c6:	cd bf       	out	0x3d, r28	; 61
 7c8:	df 91       	pop	r29
 7ca:	cf 91       	pop	r28
 7cc:	1f 91       	pop	r17
 7ce:	0f 91       	pop	r16
 7d0:	ff 90       	pop	r15
 7d2:	ef 90       	pop	r14
 7d4:	df 90       	pop	r13
 7d6:	cf 90       	pop	r12
 7d8:	bf 90       	pop	r11
 7da:	af 90       	pop	r10
 7dc:	9f 90       	pop	r9
 7de:	8f 90       	pop	r8
 7e0:	7f 90       	pop	r7
 7e2:	6f 90       	pop	r6
 7e4:	5f 90       	pop	r5
 7e6:	4f 90       	pop	r4
 7e8:	3f 90       	pop	r3
 7ea:	2f 90       	pop	r2
 7ec:	08 95       	ret

000007ee <calloc>:
 7ee:	0f 93       	push	r16
 7f0:	1f 93       	push	r17
 7f2:	cf 93       	push	r28
 7f4:	df 93       	push	r29
 7f6:	86 9f       	mul	r24, r22
 7f8:	80 01       	movw	r16, r0
 7fa:	87 9f       	mul	r24, r23
 7fc:	10 0d       	add	r17, r0
 7fe:	96 9f       	mul	r25, r22
 800:	10 0d       	add	r17, r0
 802:	11 24       	eor	r1, r1
 804:	c8 01       	movw	r24, r16
 806:	0d d0       	rcall	.+26     	; 0x822 <malloc>
 808:	ec 01       	movw	r28, r24
 80a:	00 97       	sbiw	r24, 0x00	; 0
 80c:	21 f0       	breq	.+8      	; 0x816 <calloc+0x28>
 80e:	a8 01       	movw	r20, r16
 810:	60 e0       	ldi	r22, 0x00	; 0
 812:	70 e0       	ldi	r23, 0x00	; 0
 814:	38 d1       	rcall	.+624    	; 0xa86 <memset>
 816:	ce 01       	movw	r24, r28
 818:	df 91       	pop	r29
 81a:	cf 91       	pop	r28
 81c:	1f 91       	pop	r17
 81e:	0f 91       	pop	r16
 820:	08 95       	ret

00000822 <malloc>:
 822:	cf 93       	push	r28
 824:	df 93       	push	r29
 826:	82 30       	cpi	r24, 0x02	; 2
 828:	91 05       	cpc	r25, r1
 82a:	10 f4       	brcc	.+4      	; 0x830 <malloc+0xe>
 82c:	82 e0       	ldi	r24, 0x02	; 2
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	e0 91 46 02 	lds	r30, 0x0246
 834:	f0 91 47 02 	lds	r31, 0x0247
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	a0 e0       	ldi	r26, 0x00	; 0
 83e:	b0 e0       	ldi	r27, 0x00	; 0
 840:	30 97       	sbiw	r30, 0x00	; 0
 842:	39 f1       	breq	.+78     	; 0x892 <malloc+0x70>
 844:	40 81       	ld	r20, Z
 846:	51 81       	ldd	r21, Z+1	; 0x01
 848:	48 17       	cp	r20, r24
 84a:	59 07       	cpc	r21, r25
 84c:	b8 f0       	brcs	.+46     	; 0x87c <malloc+0x5a>
 84e:	48 17       	cp	r20, r24
 850:	59 07       	cpc	r21, r25
 852:	71 f4       	brne	.+28     	; 0x870 <malloc+0x4e>
 854:	82 81       	ldd	r24, Z+2	; 0x02
 856:	93 81       	ldd	r25, Z+3	; 0x03
 858:	10 97       	sbiw	r26, 0x00	; 0
 85a:	29 f0       	breq	.+10     	; 0x866 <malloc+0x44>
 85c:	13 96       	adiw	r26, 0x03	; 3
 85e:	9c 93       	st	X, r25
 860:	8e 93       	st	-X, r24
 862:	12 97       	sbiw	r26, 0x02	; 2
 864:	2c c0       	rjmp	.+88     	; 0x8be <malloc+0x9c>
 866:	90 93 47 02 	sts	0x0247, r25
 86a:	80 93 46 02 	sts	0x0246, r24
 86e:	27 c0       	rjmp	.+78     	; 0x8be <malloc+0x9c>
 870:	21 15       	cp	r18, r1
 872:	31 05       	cpc	r19, r1
 874:	31 f0       	breq	.+12     	; 0x882 <malloc+0x60>
 876:	42 17       	cp	r20, r18
 878:	53 07       	cpc	r21, r19
 87a:	18 f0       	brcs	.+6      	; 0x882 <malloc+0x60>
 87c:	a9 01       	movw	r20, r18
 87e:	db 01       	movw	r26, r22
 880:	01 c0       	rjmp	.+2      	; 0x884 <malloc+0x62>
 882:	ef 01       	movw	r28, r30
 884:	9a 01       	movw	r18, r20
 886:	bd 01       	movw	r22, r26
 888:	df 01       	movw	r26, r30
 88a:	02 80       	ldd	r0, Z+2	; 0x02
 88c:	f3 81       	ldd	r31, Z+3	; 0x03
 88e:	e0 2d       	mov	r30, r0
 890:	d7 cf       	rjmp	.-82     	; 0x840 <malloc+0x1e>
 892:	21 15       	cp	r18, r1
 894:	31 05       	cpc	r19, r1
 896:	f9 f0       	breq	.+62     	; 0x8d6 <malloc+0xb4>
 898:	28 1b       	sub	r18, r24
 89a:	39 0b       	sbc	r19, r25
 89c:	24 30       	cpi	r18, 0x04	; 4
 89e:	31 05       	cpc	r19, r1
 8a0:	80 f4       	brcc	.+32     	; 0x8c2 <malloc+0xa0>
 8a2:	8a 81       	ldd	r24, Y+2	; 0x02
 8a4:	9b 81       	ldd	r25, Y+3	; 0x03
 8a6:	61 15       	cp	r22, r1
 8a8:	71 05       	cpc	r23, r1
 8aa:	21 f0       	breq	.+8      	; 0x8b4 <malloc+0x92>
 8ac:	fb 01       	movw	r30, r22
 8ae:	93 83       	std	Z+3, r25	; 0x03
 8b0:	82 83       	std	Z+2, r24	; 0x02
 8b2:	04 c0       	rjmp	.+8      	; 0x8bc <malloc+0x9a>
 8b4:	90 93 47 02 	sts	0x0247, r25
 8b8:	80 93 46 02 	sts	0x0246, r24
 8bc:	fe 01       	movw	r30, r28
 8be:	32 96       	adiw	r30, 0x02	; 2
 8c0:	44 c0       	rjmp	.+136    	; 0x94a <malloc+0x128>
 8c2:	fe 01       	movw	r30, r28
 8c4:	e2 0f       	add	r30, r18
 8c6:	f3 1f       	adc	r31, r19
 8c8:	81 93       	st	Z+, r24
 8ca:	91 93       	st	Z+, r25
 8cc:	22 50       	subi	r18, 0x02	; 2
 8ce:	31 09       	sbc	r19, r1
 8d0:	39 83       	std	Y+1, r19	; 0x01
 8d2:	28 83       	st	Y, r18
 8d4:	3a c0       	rjmp	.+116    	; 0x94a <malloc+0x128>
 8d6:	20 91 44 02 	lds	r18, 0x0244
 8da:	30 91 45 02 	lds	r19, 0x0245
 8de:	23 2b       	or	r18, r19
 8e0:	41 f4       	brne	.+16     	; 0x8f2 <malloc+0xd0>
 8e2:	20 91 02 02 	lds	r18, 0x0202
 8e6:	30 91 03 02 	lds	r19, 0x0203
 8ea:	30 93 45 02 	sts	0x0245, r19
 8ee:	20 93 44 02 	sts	0x0244, r18
 8f2:	20 91 00 02 	lds	r18, 0x0200
 8f6:	30 91 01 02 	lds	r19, 0x0201
 8fa:	21 15       	cp	r18, r1
 8fc:	31 05       	cpc	r19, r1
 8fe:	41 f4       	brne	.+16     	; 0x910 <malloc+0xee>
 900:	2d b7       	in	r18, 0x3d	; 61
 902:	3e b7       	in	r19, 0x3e	; 62
 904:	40 91 04 02 	lds	r20, 0x0204
 908:	50 91 05 02 	lds	r21, 0x0205
 90c:	24 1b       	sub	r18, r20
 90e:	35 0b       	sbc	r19, r21
 910:	e0 91 44 02 	lds	r30, 0x0244
 914:	f0 91 45 02 	lds	r31, 0x0245
 918:	e2 17       	cp	r30, r18
 91a:	f3 07       	cpc	r31, r19
 91c:	a0 f4       	brcc	.+40     	; 0x946 <malloc+0x124>
 91e:	2e 1b       	sub	r18, r30
 920:	3f 0b       	sbc	r19, r31
 922:	28 17       	cp	r18, r24
 924:	39 07       	cpc	r19, r25
 926:	78 f0       	brcs	.+30     	; 0x946 <malloc+0x124>
 928:	ac 01       	movw	r20, r24
 92a:	4e 5f       	subi	r20, 0xFE	; 254
 92c:	5f 4f       	sbci	r21, 0xFF	; 255
 92e:	24 17       	cp	r18, r20
 930:	35 07       	cpc	r19, r21
 932:	48 f0       	brcs	.+18     	; 0x946 <malloc+0x124>
 934:	4e 0f       	add	r20, r30
 936:	5f 1f       	adc	r21, r31
 938:	50 93 45 02 	sts	0x0245, r21
 93c:	40 93 44 02 	sts	0x0244, r20
 940:	81 93       	st	Z+, r24
 942:	91 93       	st	Z+, r25
 944:	02 c0       	rjmp	.+4      	; 0x94a <malloc+0x128>
 946:	e0 e0       	ldi	r30, 0x00	; 0
 948:	f0 e0       	ldi	r31, 0x00	; 0
 94a:	cf 01       	movw	r24, r30
 94c:	df 91       	pop	r29
 94e:	cf 91       	pop	r28
 950:	08 95       	ret

00000952 <free>:
 952:	cf 93       	push	r28
 954:	df 93       	push	r29
 956:	00 97       	sbiw	r24, 0x00	; 0
 958:	09 f4       	brne	.+2      	; 0x95c <free+0xa>
 95a:	87 c0       	rjmp	.+270    	; 0xa6a <free+0x118>
 95c:	fc 01       	movw	r30, r24
 95e:	32 97       	sbiw	r30, 0x02	; 2
 960:	13 82       	std	Z+3, r1	; 0x03
 962:	12 82       	std	Z+2, r1	; 0x02
 964:	c0 91 46 02 	lds	r28, 0x0246
 968:	d0 91 47 02 	lds	r29, 0x0247
 96c:	20 97       	sbiw	r28, 0x00	; 0
 96e:	81 f4       	brne	.+32     	; 0x990 <free+0x3e>
 970:	20 81       	ld	r18, Z
 972:	31 81       	ldd	r19, Z+1	; 0x01
 974:	28 0f       	add	r18, r24
 976:	39 1f       	adc	r19, r25
 978:	80 91 44 02 	lds	r24, 0x0244
 97c:	90 91 45 02 	lds	r25, 0x0245
 980:	82 17       	cp	r24, r18
 982:	93 07       	cpc	r25, r19
 984:	79 f5       	brne	.+94     	; 0x9e4 <free+0x92>
 986:	f0 93 45 02 	sts	0x0245, r31
 98a:	e0 93 44 02 	sts	0x0244, r30
 98e:	6d c0       	rjmp	.+218    	; 0xa6a <free+0x118>
 990:	de 01       	movw	r26, r28
 992:	20 e0       	ldi	r18, 0x00	; 0
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	ae 17       	cp	r26, r30
 998:	bf 07       	cpc	r27, r31
 99a:	50 f4       	brcc	.+20     	; 0x9b0 <free+0x5e>
 99c:	12 96       	adiw	r26, 0x02	; 2
 99e:	4d 91       	ld	r20, X+
 9a0:	5c 91       	ld	r21, X
 9a2:	13 97       	sbiw	r26, 0x03	; 3
 9a4:	9d 01       	movw	r18, r26
 9a6:	41 15       	cp	r20, r1
 9a8:	51 05       	cpc	r21, r1
 9aa:	09 f1       	breq	.+66     	; 0x9ee <free+0x9c>
 9ac:	da 01       	movw	r26, r20
 9ae:	f3 cf       	rjmp	.-26     	; 0x996 <free+0x44>
 9b0:	b3 83       	std	Z+3, r27	; 0x03
 9b2:	a2 83       	std	Z+2, r26	; 0x02
 9b4:	40 81       	ld	r20, Z
 9b6:	51 81       	ldd	r21, Z+1	; 0x01
 9b8:	84 0f       	add	r24, r20
 9ba:	95 1f       	adc	r25, r21
 9bc:	8a 17       	cp	r24, r26
 9be:	9b 07       	cpc	r25, r27
 9c0:	71 f4       	brne	.+28     	; 0x9de <free+0x8c>
 9c2:	8d 91       	ld	r24, X+
 9c4:	9c 91       	ld	r25, X
 9c6:	11 97       	sbiw	r26, 0x01	; 1
 9c8:	84 0f       	add	r24, r20
 9ca:	95 1f       	adc	r25, r21
 9cc:	02 96       	adiw	r24, 0x02	; 2
 9ce:	91 83       	std	Z+1, r25	; 0x01
 9d0:	80 83       	st	Z, r24
 9d2:	12 96       	adiw	r26, 0x02	; 2
 9d4:	8d 91       	ld	r24, X+
 9d6:	9c 91       	ld	r25, X
 9d8:	13 97       	sbiw	r26, 0x03	; 3
 9da:	93 83       	std	Z+3, r25	; 0x03
 9dc:	82 83       	std	Z+2, r24	; 0x02
 9de:	21 15       	cp	r18, r1
 9e0:	31 05       	cpc	r19, r1
 9e2:	29 f4       	brne	.+10     	; 0x9ee <free+0x9c>
 9e4:	f0 93 47 02 	sts	0x0247, r31
 9e8:	e0 93 46 02 	sts	0x0246, r30
 9ec:	3e c0       	rjmp	.+124    	; 0xa6a <free+0x118>
 9ee:	d9 01       	movw	r26, r18
 9f0:	13 96       	adiw	r26, 0x03	; 3
 9f2:	fc 93       	st	X, r31
 9f4:	ee 93       	st	-X, r30
 9f6:	12 97       	sbiw	r26, 0x02	; 2
 9f8:	4d 91       	ld	r20, X+
 9fa:	5d 91       	ld	r21, X+
 9fc:	a4 0f       	add	r26, r20
 9fe:	b5 1f       	adc	r27, r21
 a00:	ea 17       	cp	r30, r26
 a02:	fb 07       	cpc	r31, r27
 a04:	79 f4       	brne	.+30     	; 0xa24 <free+0xd2>
 a06:	80 81       	ld	r24, Z
 a08:	91 81       	ldd	r25, Z+1	; 0x01
 a0a:	84 0f       	add	r24, r20
 a0c:	95 1f       	adc	r25, r21
 a0e:	02 96       	adiw	r24, 0x02	; 2
 a10:	d9 01       	movw	r26, r18
 a12:	11 96       	adiw	r26, 0x01	; 1
 a14:	9c 93       	st	X, r25
 a16:	8e 93       	st	-X, r24
 a18:	82 81       	ldd	r24, Z+2	; 0x02
 a1a:	93 81       	ldd	r25, Z+3	; 0x03
 a1c:	13 96       	adiw	r26, 0x03	; 3
 a1e:	9c 93       	st	X, r25
 a20:	8e 93       	st	-X, r24
 a22:	12 97       	sbiw	r26, 0x02	; 2
 a24:	e0 e0       	ldi	r30, 0x00	; 0
 a26:	f0 e0       	ldi	r31, 0x00	; 0
 a28:	8a 81       	ldd	r24, Y+2	; 0x02
 a2a:	9b 81       	ldd	r25, Y+3	; 0x03
 a2c:	00 97       	sbiw	r24, 0x00	; 0
 a2e:	19 f0       	breq	.+6      	; 0xa36 <free+0xe4>
 a30:	fe 01       	movw	r30, r28
 a32:	ec 01       	movw	r28, r24
 a34:	f9 cf       	rjmp	.-14     	; 0xa28 <free+0xd6>
 a36:	ce 01       	movw	r24, r28
 a38:	02 96       	adiw	r24, 0x02	; 2
 a3a:	28 81       	ld	r18, Y
 a3c:	39 81       	ldd	r19, Y+1	; 0x01
 a3e:	82 0f       	add	r24, r18
 a40:	93 1f       	adc	r25, r19
 a42:	20 91 44 02 	lds	r18, 0x0244
 a46:	30 91 45 02 	lds	r19, 0x0245
 a4a:	28 17       	cp	r18, r24
 a4c:	39 07       	cpc	r19, r25
 a4e:	69 f4       	brne	.+26     	; 0xa6a <free+0x118>
 a50:	30 97       	sbiw	r30, 0x00	; 0
 a52:	29 f4       	brne	.+10     	; 0xa5e <free+0x10c>
 a54:	10 92 47 02 	sts	0x0247, r1
 a58:	10 92 46 02 	sts	0x0246, r1
 a5c:	02 c0       	rjmp	.+4      	; 0xa62 <free+0x110>
 a5e:	13 82       	std	Z+3, r1	; 0x03
 a60:	12 82       	std	Z+2, r1	; 0x02
 a62:	d0 93 45 02 	sts	0x0245, r29
 a66:	c0 93 44 02 	sts	0x0244, r28
 a6a:	df 91       	pop	r29
 a6c:	cf 91       	pop	r28
 a6e:	08 95       	ret

00000a70 <strnlen_P>:
 a70:	fc 01       	movw	r30, r24
 a72:	05 90       	lpm	r0, Z+
 a74:	61 50       	subi	r22, 0x01	; 1
 a76:	70 40       	sbci	r23, 0x00	; 0
 a78:	01 10       	cpse	r0, r1
 a7a:	d8 f7       	brcc	.-10     	; 0xa72 <strnlen_P+0x2>
 a7c:	80 95       	com	r24
 a7e:	90 95       	com	r25
 a80:	8e 0f       	add	r24, r30
 a82:	9f 1f       	adc	r25, r31
 a84:	08 95       	ret

00000a86 <memset>:
 a86:	dc 01       	movw	r26, r24
 a88:	01 c0       	rjmp	.+2      	; 0xa8c <memset+0x6>
 a8a:	6d 93       	st	X+, r22
 a8c:	41 50       	subi	r20, 0x01	; 1
 a8e:	50 40       	sbci	r21, 0x00	; 0
 a90:	e0 f7       	brcc	.-8      	; 0xa8a <memset+0x4>
 a92:	08 95       	ret

00000a94 <strnlen>:
 a94:	fc 01       	movw	r30, r24
 a96:	61 50       	subi	r22, 0x01	; 1
 a98:	70 40       	sbci	r23, 0x00	; 0
 a9a:	01 90       	ld	r0, Z+
 a9c:	01 10       	cpse	r0, r1
 a9e:	d8 f7       	brcc	.-10     	; 0xa96 <strnlen+0x2>
 aa0:	80 95       	com	r24
 aa2:	90 95       	com	r25
 aa4:	8e 0f       	add	r24, r30
 aa6:	9f 1f       	adc	r25, r31
 aa8:	08 95       	ret

00000aaa <fputc>:
 aaa:	0f 93       	push	r16
 aac:	1f 93       	push	r17
 aae:	cf 93       	push	r28
 ab0:	df 93       	push	r29
 ab2:	18 2f       	mov	r17, r24
 ab4:	09 2f       	mov	r16, r25
 ab6:	eb 01       	movw	r28, r22
 ab8:	8b 81       	ldd	r24, Y+3	; 0x03
 aba:	81 fd       	sbrc	r24, 1
 abc:	03 c0       	rjmp	.+6      	; 0xac4 <fputc+0x1a>
 abe:	8f ef       	ldi	r24, 0xFF	; 255
 ac0:	9f ef       	ldi	r25, 0xFF	; 255
 ac2:	20 c0       	rjmp	.+64     	; 0xb04 <fputc+0x5a>
 ac4:	82 ff       	sbrs	r24, 2
 ac6:	10 c0       	rjmp	.+32     	; 0xae8 <fputc+0x3e>
 ac8:	4e 81       	ldd	r20, Y+6	; 0x06
 aca:	5f 81       	ldd	r21, Y+7	; 0x07
 acc:	2c 81       	ldd	r18, Y+4	; 0x04
 ace:	3d 81       	ldd	r19, Y+5	; 0x05
 ad0:	42 17       	cp	r20, r18
 ad2:	53 07       	cpc	r21, r19
 ad4:	7c f4       	brge	.+30     	; 0xaf4 <fputc+0x4a>
 ad6:	e8 81       	ld	r30, Y
 ad8:	f9 81       	ldd	r31, Y+1	; 0x01
 ada:	9f 01       	movw	r18, r30
 adc:	2f 5f       	subi	r18, 0xFF	; 255
 ade:	3f 4f       	sbci	r19, 0xFF	; 255
 ae0:	39 83       	std	Y+1, r19	; 0x01
 ae2:	28 83       	st	Y, r18
 ae4:	10 83       	st	Z, r17
 ae6:	06 c0       	rjmp	.+12     	; 0xaf4 <fputc+0x4a>
 ae8:	e8 85       	ldd	r30, Y+8	; 0x08
 aea:	f9 85       	ldd	r31, Y+9	; 0x09
 aec:	81 2f       	mov	r24, r17
 aee:	19 95       	eicall
 af0:	89 2b       	or	r24, r25
 af2:	29 f7       	brne	.-54     	; 0xabe <fputc+0x14>
 af4:	2e 81       	ldd	r18, Y+6	; 0x06
 af6:	3f 81       	ldd	r19, Y+7	; 0x07
 af8:	2f 5f       	subi	r18, 0xFF	; 255
 afa:	3f 4f       	sbci	r19, 0xFF	; 255
 afc:	3f 83       	std	Y+7, r19	; 0x07
 afe:	2e 83       	std	Y+6, r18	; 0x06
 b00:	81 2f       	mov	r24, r17
 b02:	90 2f       	mov	r25, r16
 b04:	df 91       	pop	r29
 b06:	cf 91       	pop	r28
 b08:	1f 91       	pop	r17
 b0a:	0f 91       	pop	r16
 b0c:	08 95       	ret

00000b0e <__ultoa_invert>:
 b0e:	fa 01       	movw	r30, r20
 b10:	aa 27       	eor	r26, r26
 b12:	28 30       	cpi	r18, 0x08	; 8
 b14:	51 f1       	breq	.+84     	; 0xb6a <__ultoa_invert+0x5c>
 b16:	20 31       	cpi	r18, 0x10	; 16
 b18:	81 f1       	breq	.+96     	; 0xb7a <__ultoa_invert+0x6c>
 b1a:	e8 94       	clt
 b1c:	6f 93       	push	r22
 b1e:	6e 7f       	andi	r22, 0xFE	; 254
 b20:	6e 5f       	subi	r22, 0xFE	; 254
 b22:	7f 4f       	sbci	r23, 0xFF	; 255
 b24:	8f 4f       	sbci	r24, 0xFF	; 255
 b26:	9f 4f       	sbci	r25, 0xFF	; 255
 b28:	af 4f       	sbci	r26, 0xFF	; 255
 b2a:	b1 e0       	ldi	r27, 0x01	; 1
 b2c:	3e d0       	rcall	.+124    	; 0xbaa <__ultoa_invert+0x9c>
 b2e:	b4 e0       	ldi	r27, 0x04	; 4
 b30:	3c d0       	rcall	.+120    	; 0xbaa <__ultoa_invert+0x9c>
 b32:	67 0f       	add	r22, r23
 b34:	78 1f       	adc	r23, r24
 b36:	89 1f       	adc	r24, r25
 b38:	9a 1f       	adc	r25, r26
 b3a:	a1 1d       	adc	r26, r1
 b3c:	68 0f       	add	r22, r24
 b3e:	79 1f       	adc	r23, r25
 b40:	8a 1f       	adc	r24, r26
 b42:	91 1d       	adc	r25, r1
 b44:	a1 1d       	adc	r26, r1
 b46:	6a 0f       	add	r22, r26
 b48:	71 1d       	adc	r23, r1
 b4a:	81 1d       	adc	r24, r1
 b4c:	91 1d       	adc	r25, r1
 b4e:	a1 1d       	adc	r26, r1
 b50:	20 d0       	rcall	.+64     	; 0xb92 <__ultoa_invert+0x84>
 b52:	09 f4       	brne	.+2      	; 0xb56 <__ultoa_invert+0x48>
 b54:	68 94       	set
 b56:	3f 91       	pop	r19
 b58:	2a e0       	ldi	r18, 0x0A	; 10
 b5a:	26 9f       	mul	r18, r22
 b5c:	11 24       	eor	r1, r1
 b5e:	30 19       	sub	r19, r0
 b60:	30 5d       	subi	r19, 0xD0	; 208
 b62:	31 93       	st	Z+, r19
 b64:	de f6       	brtc	.-74     	; 0xb1c <__ultoa_invert+0xe>
 b66:	cf 01       	movw	r24, r30
 b68:	08 95       	ret
 b6a:	46 2f       	mov	r20, r22
 b6c:	47 70       	andi	r20, 0x07	; 7
 b6e:	40 5d       	subi	r20, 0xD0	; 208
 b70:	41 93       	st	Z+, r20
 b72:	b3 e0       	ldi	r27, 0x03	; 3
 b74:	0f d0       	rcall	.+30     	; 0xb94 <__ultoa_invert+0x86>
 b76:	c9 f7       	brne	.-14     	; 0xb6a <__ultoa_invert+0x5c>
 b78:	f6 cf       	rjmp	.-20     	; 0xb66 <__ultoa_invert+0x58>
 b7a:	46 2f       	mov	r20, r22
 b7c:	4f 70       	andi	r20, 0x0F	; 15
 b7e:	40 5d       	subi	r20, 0xD0	; 208
 b80:	4a 33       	cpi	r20, 0x3A	; 58
 b82:	18 f0       	brcs	.+6      	; 0xb8a <__ultoa_invert+0x7c>
 b84:	49 5d       	subi	r20, 0xD9	; 217
 b86:	31 fd       	sbrc	r19, 1
 b88:	40 52       	subi	r20, 0x20	; 32
 b8a:	41 93       	st	Z+, r20
 b8c:	02 d0       	rcall	.+4      	; 0xb92 <__ultoa_invert+0x84>
 b8e:	a9 f7       	brne	.-22     	; 0xb7a <__ultoa_invert+0x6c>
 b90:	ea cf       	rjmp	.-44     	; 0xb66 <__ultoa_invert+0x58>
 b92:	b4 e0       	ldi	r27, 0x04	; 4
 b94:	a6 95       	lsr	r26
 b96:	97 95       	ror	r25
 b98:	87 95       	ror	r24
 b9a:	77 95       	ror	r23
 b9c:	67 95       	ror	r22
 b9e:	ba 95       	dec	r27
 ba0:	c9 f7       	brne	.-14     	; 0xb94 <__ultoa_invert+0x86>
 ba2:	00 97       	sbiw	r24, 0x00	; 0
 ba4:	61 05       	cpc	r22, r1
 ba6:	71 05       	cpc	r23, r1
 ba8:	08 95       	ret
 baa:	9b 01       	movw	r18, r22
 bac:	ac 01       	movw	r20, r24
 bae:	0a 2e       	mov	r0, r26
 bb0:	06 94       	lsr	r0
 bb2:	57 95       	ror	r21
 bb4:	47 95       	ror	r20
 bb6:	37 95       	ror	r19
 bb8:	27 95       	ror	r18
 bba:	ba 95       	dec	r27
 bbc:	c9 f7       	brne	.-14     	; 0xbb0 <__ultoa_invert+0xa2>
 bbe:	62 0f       	add	r22, r18
 bc0:	73 1f       	adc	r23, r19
 bc2:	84 1f       	adc	r24, r20
 bc4:	95 1f       	adc	r25, r21
 bc6:	a0 1d       	adc	r26, r0
 bc8:	08 95       	ret

00000bca <_exit>:
 bca:	f8 94       	cli

00000bcc <__stop_program>:
 bcc:	ff cf       	rjmp	.-2      	; 0xbcc <__stop_program>


Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800200  00000c8c  00000d20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080028c  0080028c  00000dac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d24  00000000  00000000  00000f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000631  00000000  00000000  00001c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000832  00000000  00000000  00002285  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000260  00000000  00000000  00002ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000366  00000000  00000000  00002d18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000056a  00000000  00000000  0000307e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  000035e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e8       	ldi	r30, 0x8C	; 140
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 38       	cpi	r26, 0x8C	; 140
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ac e8       	ldi	r26, 0x8C	; 140
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 39       	cpi	r26, 0x96	; 150
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	9a d0       	rcall	.+308    	; 0x254 <main>
 120:	b3 c5       	rjmp	.+2918   	; 0xc88 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:
		MCP_write(MCP_TXB0CTRL + 6 + i, msg->data[i]);
	}
	
	/* Request to send contents of TXB0 */
	MCP_request_to_send(MCP_RTS_TX0);
}
 124:	8a c0       	rjmp	.+276    	; 0x23a <MCP_init>
 126:	08 95       	ret

00000128 <CAN_message_receive>:

can_message_t CAN_message_receive(void)
{
 128:	9f 92       	push	r9
 12a:	af 92       	push	r10
 12c:	bf 92       	push	r11
 12e:	cf 92       	push	r12
 130:	df 92       	push	r13
 132:	ef 92       	push	r14
 134:	ff 92       	push	r15
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	2b 97       	sbiw	r28, 0x0b	; 11
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	7c 01       	movw	r14, r24
	/* Only RXB0 is used */
	
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
 150:	82 e6       	ldi	r24, 0x62	; 98
 152:	45 d0       	rcall	.+138    	; 0x1de <MCP_read>
	message.id = (buffer >> 5);
 154:	82 95       	swap	r24
 156:	86 95       	lsr	r24
 158:	87 70       	andi	r24, 0x07	; 7
 15a:	c8 2e       	mov	r12, r24
 15c:	d1 2c       	mov	r13, r1
	buffer = MCP_read(MCP_RXB0CTRL + 5);
 15e:	85 e6       	ldi	r24, 0x65	; 101
 160:	3e d0       	rcall	.+124    	; 0x1de <MCP_read>
	message.length = (buffer & 0x0F);
 162:	8f 70       	andi	r24, 0x0F	; 15
 164:	98 2e       	mov	r9, r24
	for (uint8_t i = 0; i < message.length; i++) {
 166:	a1 f0       	breq	.+40     	; 0x190 <CAN_message_receive+0x68>
 168:	8e 01       	movw	r16, r28
 16a:	0c 5f       	subi	r16, 0xFC	; 252
 16c:	1f 4f       	sbci	r17, 0xFF	; 255
 16e:	0f 2e       	mov	r0, r31
 170:	f6 e6       	ldi	r31, 0x66	; 102
 172:	af 2e       	mov	r10, r31
 174:	f0 2d       	mov	r31, r0
 176:	a8 0e       	add	r10, r24
 178:	0f 2e       	mov	r0, r31
 17a:	f6 e6       	ldi	r31, 0x66	; 102
 17c:	bf 2e       	mov	r11, r31
 17e:	f0 2d       	mov	r31, r0
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
 180:	8b 2d       	mov	r24, r11
 182:	2d d0       	rcall	.+90     	; 0x1de <MCP_read>
 184:	f8 01       	movw	r30, r16
 186:	81 93       	st	Z+, r24
 188:	8f 01       	movw	r16, r30
 18a:	b3 94       	inc	r11
	can_message_t message;
	uint8_t buffer = MCP_read(MCP_RXB0SIDH + 1);
	message.id = (buffer >> 5);
	buffer = MCP_read(MCP_RXB0CTRL + 5);
	message.length = (buffer & 0x0F);
	for (uint8_t i = 0; i < message.length; i++) {
 18c:	ba 10       	cpse	r11, r10
 18e:	f8 cf       	rjmp	.-16     	; 0x180 <CAN_message_receive+0x58>
		message.data[i] = MCP_read(MCP_RXB0CTRL + 6 + i);
	}
	
	/* Clear CANINTF.RX0IF */
	MCP_modify_bit(MCP_CANINTF, 0x01, 0x00);
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	8c e2       	ldi	r24, 0x2C	; 44
 196:	38 d0       	rcall	.+112    	; 0x208 <MCP_modify_bit>
	
	return message;
 198:	da 82       	std	Y+2, r13	; 0x02
 19a:	c9 82       	std	Y+1, r12	; 0x01
 19c:	9b 82       	std	Y+3, r9	; 0x03
 19e:	8b e0       	ldi	r24, 0x0B	; 11
 1a0:	fe 01       	movw	r30, r28
 1a2:	31 96       	adiw	r30, 0x01	; 1
 1a4:	d7 01       	movw	r26, r14
 1a6:	01 90       	ld	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	8a 95       	dec	r24
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <CAN_message_receive+0x7e>
}
 1ae:	c7 01       	movw	r24, r14
 1b0:	2b 96       	adiw	r28, 0x0b	; 11
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	f8 94       	cli
 1b6:	de bf       	out	0x3e, r29	; 62
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	cd bf       	out	0x3d, r28	; 61
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	ff 90       	pop	r15
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	bf 90       	pop	r11
 1ce:	af 90       	pop	r10
 1d0:	9f 90       	pop	r9
 1d2:	08 95       	ret

000001d4 <MCP_reset>:
	SPI_master_transmit(MCP_RX_STATUS);
	//SPI_master_transmit(0x00); // Unneccessary because of "repeat data out"?
	char status = SPDR;
	PORTB |= (1 << PB0);
	return status;
}
 1d4:	28 98       	cbi	0x05, 0	; 5
 1d6:	80 ec       	ldi	r24, 0xC0	; 192
 1d8:	d3 d0       	rcall	.+422    	; 0x380 <SPI_master_transmit>
 1da:	28 9a       	sbi	0x05, 0	; 5
 1dc:	08 95       	ret

000001de <MCP_read>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24
 1e2:	28 98       	cbi	0x05, 0	; 5
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	cc d0       	rcall	.+408    	; 0x380 <SPI_master_transmit>
 1e8:	8c 2f       	mov	r24, r28
 1ea:	ca d0       	rcall	.+404    	; 0x380 <SPI_master_transmit>
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	c8 d0       	rcall	.+400    	; 0x380 <SPI_master_transmit>
 1f0:	8e b5       	in	r24, 0x2e	; 46
 1f2:	28 9a       	sbi	0x05, 0	; 5
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <MCP_read_status>:
 1f8:	28 98       	cbi	0x05, 0	; 5
 1fa:	80 ea       	ldi	r24, 0xA0	; 160
 1fc:	c1 d0       	rcall	.+386    	; 0x380 <SPI_master_transmit>
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	bf d0       	rcall	.+382    	; 0x380 <SPI_master_transmit>
 202:	8e b5       	in	r24, 0x2e	; 46
 204:	28 9a       	sbi	0x05, 0	; 5
 206:	08 95       	ret

00000208 <MCP_modify_bit>:
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
}

/* Changes the value of the register bits specified by the mask */
void MCP_modify_bit(uint8_t addr, uint8_t mask, uint8_t data)
{
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	18 2f       	mov	r17, r24
 210:	d6 2f       	mov	r29, r22
 212:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB0);
 214:	28 98       	cbi	0x05, 0	; 5
	SPI_master_transmit(MCP_BITMOD);
 216:	85 e0       	ldi	r24, 0x05	; 5
 218:	b3 d0       	rcall	.+358    	; 0x380 <SPI_master_transmit>
	SPI_master_transmit(addr);
 21a:	81 2f       	mov	r24, r17
 21c:	b1 d0       	rcall	.+354    	; 0x380 <SPI_master_transmit>
	SPI_master_transmit(mask);
 21e:	8d 2f       	mov	r24, r29
 220:	af d0       	rcall	.+350    	; 0x380 <SPI_master_transmit>
	SPI_master_transmit(data);
 222:	8c 2f       	mov	r24, r28
 224:	ad d0       	rcall	.+346    	; 0x380 <SPI_master_transmit>
	PORTB |= (1 << PB0);
 226:	28 9a       	sbi	0x05, 0	; 5
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	1f 91       	pop	r17
 22e:	08 95       	ret

00000230 <MCP_set_mode>:
			break;
		default:
			break;
	}
	
	MCP_modify_bit(MCP_CANCTRL, mask, mode);
 230:	48 2f       	mov	r20, r24
 232:	60 ee       	ldi	r22, 0xE0	; 224
 234:	8f e0       	ldi	r24, 0x0F	; 15
 236:	e8 cf       	rjmp	.-48     	; 0x208 <MCP_modify_bit>
 238:	08 95       	ret

0000023a <MCP_init>:
#include "MCP2515.h"
#include "mcp.h"

void MCP_init(void)
{
	SPI_master_init();
 23a:	9d d0       	rcall	.+314    	; 0x376 <SPI_master_init>
	MCP_reset();
 23c:	cb df       	rcall	.-106    	; 0x1d4 <MCP_reset>
	
	MCP_modify_bit(MCP_RXB0CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX0
 23e:	4f ef       	ldi	r20, 0xFF	; 255
 240:	60 e6       	ldi	r22, 0x60	; 96
 242:	80 e6       	ldi	r24, 0x60	; 96
 244:	e1 df       	rcall	.-62     	; 0x208 <MCP_modify_bit>
	MCP_modify_bit(MCP_RXB1CTRL, 0b01100000, 0xFF); // Turns masks/filters off for RX1
 246:	4f ef       	ldi	r20, 0xFF	; 255
 248:	60 e6       	ldi	r22, 0x60	; 96
 24a:	80 e7       	ldi	r24, 0x70	; 112
 24c:	dd df       	rcall	.-70     	; 0x208 <MCP_modify_bit>
	//MCP_set_mode(MODE_LOOPBACK); // Sets loopback operation mode for testing
	MCP_set_mode(MODE_NORMAL); // Sets normal operation mode
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	ef cf       	rjmp	.-34     	; 0x230 <MCP_set_mode>
 252:	08 95       	ret

00000254 <main>:

#include "usart.h"
#include "can.h"

int main(void)
{
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	2b 97       	sbiw	r28, 0x0b	; 11
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
	fdevopen(USART_transmit, USART_receive);
 268:	68 ed       	ldi	r22, 0xD8	; 216
 26a:	71 e0       	ldi	r23, 0x01	; 1
 26c:	80 ed       	ldi	r24, 0xD0	; 208
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	a7 d0       	rcall	.+334    	; 0x3c0 <fdevopen>
	USART_init(MYUBRR);
 272:	87 e6       	ldi	r24, 0x67	; 103
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	89 d0       	rcall	.+274    	; 0x38a <USART_init>
	CAN_init();
 278:	55 df       	rcall	.-342    	; 0x124 <CAN_init>
		
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		status = MCP_read_status();
		printf("Status: %02x\n", status);
 27a:	06 e0       	ldi	r16, 0x06	; 6
 27c:	12 e0       	ldi	r17, 0x02	; 2
		msg_arrived = (status & 1);
		if (msg_arrived) {
			received_message = CAN_message_receive();
			printf("ID: %02x\n", received_message.id);
 27e:	0f 2e       	mov	r0, r31
 280:	f4 e1       	ldi	r31, 0x14	; 20
 282:	8f 2e       	mov	r8, r31
 284:	f2 e0       	ldi	r31, 0x02	; 2
 286:	9f 2e       	mov	r9, r31
 288:	f0 2d       	mov	r31, r0
			printf("length: %02x\n", received_message.length);
 28a:	0f 2e       	mov	r0, r31
 28c:	fe e1       	ldi	r31, 0x1E	; 30
 28e:	af 2e       	mov	r10, r31
 290:	f2 e0       	ldi	r31, 0x02	; 2
 292:	bf 2e       	mov	r11, r31
 294:	f0 2d       	mov	r31, r0
			printf("Message type: %s\n", received_message.data[0]);
 296:	0f 2e       	mov	r0, r31
 298:	fc e2       	ldi	r31, 0x2C	; 44
 29a:	cf 2e       	mov	r12, r31
 29c:	f2 e0       	ldi	r31, 0x02	; 2
 29e:	df 2e       	mov	r13, r31
 2a0:	f0 2d       	mov	r31, r0
			printf("Direction: %i\n", received_message.data[1]);
			printf("X: %i\n", received_message.data[2]);
 2a2:	0f 2e       	mov	r0, r31
 2a4:	fd e4       	ldi	r31, 0x4D	; 77
 2a6:	6f 2e       	mov	r6, r31
 2a8:	f2 e0       	ldi	r31, 0x02	; 2
 2aa:	7f 2e       	mov	r7, r31
 2ac:	f0 2d       	mov	r31, r0
			printf("Y: %i\n", received_message.data[3]);
 2ae:	0f 2e       	mov	r0, r31
 2b0:	f4 e5       	ldi	r31, 0x54	; 84
 2b2:	4f 2e       	mov	r4, r31
 2b4:	f2 e0       	ldi	r31, 0x02	; 2
 2b6:	5f 2e       	mov	r5, r31
 2b8:	f0 2d       	mov	r31, r0
			printf("Slider l: %i\n", received_message.data[4]);
 2ba:	0f 2e       	mov	r0, r31
 2bc:	fb e5       	ldi	r31, 0x5B	; 91
 2be:	2f 2e       	mov	r2, r31
 2c0:	f2 e0       	ldi	r31, 0x02	; 2
 2c2:	3f 2e       	mov	r3, r31
 2c4:	f0 2d       	mov	r31, r0
	while(1) {	
		
		/* CAN test begin */
		//CAN_message_send(&can_message);
		
		status = MCP_read_status();
 2c6:	98 df       	rcall	.-208    	; 0x1f8 <MCP_read_status>
 2c8:	f8 2e       	mov	r15, r24
		printf("Status: %02x\n", status);
 2ca:	1f 92       	push	r1
 2cc:	8f 93       	push	r24
 2ce:	1f 93       	push	r17
 2d0:	0f 93       	push	r16
 2d2:	c0 d0       	rcall	.+384    	; 0x454 <printf>
		msg_arrived = (status & 1);
		if (msg_arrived) {
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	0f 90       	pop	r0
 2da:	0f 90       	pop	r0
 2dc:	f0 fe       	sbrs	r15, 0
 2de:	3e c0       	rjmp	.+124    	; 0x35c <main+0x108>
			received_message = CAN_message_receive();
 2e0:	ce 01       	movw	r24, r28
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	21 df       	rcall	.-446    	; 0x128 <CAN_message_receive>
			printf("ID: %02x\n", received_message.id);
 2e6:	8a 81       	ldd	r24, Y+2	; 0x02
 2e8:	8f 93       	push	r24
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
 2ec:	8f 93       	push	r24
 2ee:	9f 92       	push	r9
 2f0:	8f 92       	push	r8
 2f2:	b0 d0       	rcall	.+352    	; 0x454 <printf>
			printf("length: %02x\n", received_message.length);
 2f4:	8b 81       	ldd	r24, Y+3	; 0x03
 2f6:	1f 92       	push	r1
 2f8:	8f 93       	push	r24
 2fa:	bf 92       	push	r11
 2fc:	af 92       	push	r10
 2fe:	aa d0       	rcall	.+340    	; 0x454 <printf>
			printf("Message type: %s\n", received_message.data[0]);
 300:	8c 81       	ldd	r24, Y+4	; 0x04
 302:	1f 92       	push	r1
 304:	8f 93       	push	r24
 306:	df 92       	push	r13
 308:	cf 92       	push	r12
 30a:	a4 d0       	rcall	.+328    	; 0x454 <printf>
			printf("Direction: %i\n", received_message.data[1]);
 30c:	8d 81       	ldd	r24, Y+5	; 0x05
 30e:	1f 92       	push	r1
 310:	8f 93       	push	r24
 312:	ae e3       	ldi	r26, 0x3E	; 62
 314:	b2 e0       	ldi	r27, 0x02	; 2
 316:	bf 93       	push	r27
 318:	af 93       	push	r26
 31a:	9c d0       	rcall	.+312    	; 0x454 <printf>
			printf("X: %i\n", received_message.data[2]);
 31c:	8e 81       	ldd	r24, Y+6	; 0x06
 31e:	1f 92       	push	r1
 320:	8f 93       	push	r24
 322:	7f 92       	push	r7
 324:	6f 92       	push	r6
 326:	96 d0       	rcall	.+300    	; 0x454 <printf>
			printf("Y: %i\n", received_message.data[3]);
 328:	8f 81       	ldd	r24, Y+7	; 0x07
 32a:	1f 92       	push	r1
 32c:	8f 93       	push	r24
 32e:	5f 92       	push	r5
 330:	4f 92       	push	r4
 332:	90 d0       	rcall	.+288    	; 0x454 <printf>
			printf("Slider l: %i\n", received_message.data[4]);
 334:	88 85       	ldd	r24, Y+8	; 0x08
 336:	1f 92       	push	r1
 338:	8f 93       	push	r24
 33a:	3f 92       	push	r3
 33c:	2f 92       	push	r2
 33e:	8a d0       	rcall	.+276    	; 0x454 <printf>
			printf("Slider r: %i\n", received_message.data[5]);
 340:	89 85       	ldd	r24, Y+9	; 0x09
 342:	1f 92       	push	r1
 344:	8f 93       	push	r24
 346:	a9 e6       	ldi	r26, 0x69	; 105
 348:	b2 e0       	ldi	r27, 0x02	; 2
 34a:	bf 93       	push	r27
 34c:	af 93       	push	r26
 34e:	82 d0       	rcall	.+260    	; 0x454 <printf>
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	f8 94       	cli
 354:	de bf       	out	0x3e, r29	; 62
 356:	0f be       	out	0x3f, r0	; 63
 358:	cd bf       	out	0x3d, r28	; 61
 35a:	03 c0       	rjmp	.+6      	; 0x362 <main+0x10e>
			for (uint8_t i = 0; i < received_message.length; i++) {
				printf("Received: %02x\n", received_message.data[i]);
			}
			*/
		} else {
			printf("%s\n", "No message in buffer");
 35c:	87 e7       	ldi	r24, 0x77	; 119
 35e:	92 e0       	ldi	r25, 0x02	; 2
 360:	8a d0       	rcall	.+276    	; 0x476 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 362:	9f ef       	ldi	r25, 0xFF	; 255
 364:	a9 e6       	ldi	r26, 0x69	; 105
 366:	b8 e1       	ldi	r27, 0x18	; 24
 368:	91 50       	subi	r25, 0x01	; 1
 36a:	a0 40       	sbci	r26, 0x00	; 0
 36c:	b0 40       	sbci	r27, 0x00	; 0
 36e:	e1 f7       	brne	.-8      	; 0x368 <main+0x114>
 370:	00 c0       	rjmp	.+0      	; 0x372 <main+0x11e>
 372:	00 00       	nop
 374:	a8 cf       	rjmp	.-176    	; 0x2c6 <main+0x72>

00000376 <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB0)|(1 << PB2)|(1 << PB1); // Setting ~SS necessary?
 376:	87 e0       	ldi	r24, 0x07	; 7
 378:	84 b9       	out	0x04, r24	; 4
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
 37a:	81 e5       	ldi	r24, 0x51	; 81
 37c:	8c bd       	out	0x2c, r24	; 44
 37e:	08 95       	ret

00000380 <SPI_master_transmit>:
}

void SPI_master_transmit(uint8_t cData)
{
	/* Start transmission */
	SPDR = cData;
 380:	8e bd       	out	0x2e, r24	; 46
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
 382:	0d b4       	in	r0, 0x2d	; 45
 384:	07 fe       	sbrs	r0, 7
 386:	fd cf       	rjmp	.-6      	; 0x382 <SPI_master_transmit+0x2>
		;
	}
}
 388:	08 95       	ret

0000038a <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 38a:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 38e:	80 93 c4 00 	sts	0x00C4, r24
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 392:	88 e1       	ldi	r24, 0x18	; 24
 394:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << USBS0)|(3 << UCSZ10);
 398:	8e e0       	ldi	r24, 0x0E	; 14
 39a:	80 93 c2 00 	sts	0x00C2, r24
 39e:	08 95       	ret

000003a0 <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 3a0:	e0 ec       	ldi	r30, 0xC0	; 192
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	90 81       	ld	r25, Z
 3a6:	95 ff       	sbrs	r25, 5
 3a8:	fd cf       	rjmp	.-6      	; 0x3a4 <USART_transmit+0x4>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 3aa:	80 93 c6 00 	sts	0x00C6, r24
 3ae:	08 95       	ret

000003b0 <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 3b0:	e0 ec       	ldi	r30, 0xC0	; 192
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	88 23       	and	r24, r24
 3b8:	ec f7       	brge	.-6      	; 0x3b4 <USART_receive+0x4>
		;
	/* Get and return received data from buffer */
	return UDR0;
 3ba:	80 91 c6 00 	lds	r24, 0x00C6
}
 3be:	08 95       	ret

000003c0 <fdevopen>:
 3c0:	0f 93       	push	r16
 3c2:	1f 93       	push	r17
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	ec 01       	movw	r28, r24
 3ca:	8b 01       	movw	r16, r22
 3cc:	00 97       	sbiw	r24, 0x00	; 0
 3ce:	31 f4       	brne	.+12     	; 0x3dc <fdevopen+0x1c>
 3d0:	61 15       	cp	r22, r1
 3d2:	71 05       	cpc	r23, r1
 3d4:	19 f4       	brne	.+6      	; 0x3dc <fdevopen+0x1c>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	37 c0       	rjmp	.+110    	; 0x44a <fdevopen+0x8a>
 3dc:	6e e0       	ldi	r22, 0x0E	; 14
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	63 d2       	rcall	.+1222   	; 0x8ac <calloc>
 3e6:	fc 01       	movw	r30, r24
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	a9 f3       	breq	.-22     	; 0x3d6 <fdevopen+0x16>
 3ec:	80 e8       	ldi	r24, 0x80	; 128
 3ee:	83 83       	std	Z+3, r24	; 0x03
 3f0:	01 15       	cp	r16, r1
 3f2:	11 05       	cpc	r17, r1
 3f4:	71 f0       	breq	.+28     	; 0x412 <fdevopen+0x52>
 3f6:	13 87       	std	Z+11, r17	; 0x0b
 3f8:	02 87       	std	Z+10, r16	; 0x0a
 3fa:	81 e8       	ldi	r24, 0x81	; 129
 3fc:	83 83       	std	Z+3, r24	; 0x03
 3fe:	80 91 8c 02 	lds	r24, 0x028C
 402:	90 91 8d 02 	lds	r25, 0x028D
 406:	89 2b       	or	r24, r25
 408:	21 f4       	brne	.+8      	; 0x412 <fdevopen+0x52>
 40a:	f0 93 8d 02 	sts	0x028D, r31
 40e:	e0 93 8c 02 	sts	0x028C, r30
 412:	20 97       	sbiw	r28, 0x00	; 0
 414:	c9 f0       	breq	.+50     	; 0x448 <fdevopen+0x88>
 416:	d1 87       	std	Z+9, r29	; 0x09
 418:	c0 87       	std	Z+8, r28	; 0x08
 41a:	83 81       	ldd	r24, Z+3	; 0x03
 41c:	82 60       	ori	r24, 0x02	; 2
 41e:	83 83       	std	Z+3, r24	; 0x03
 420:	80 91 8e 02 	lds	r24, 0x028E
 424:	90 91 8f 02 	lds	r25, 0x028F
 428:	89 2b       	or	r24, r25
 42a:	71 f4       	brne	.+28     	; 0x448 <fdevopen+0x88>
 42c:	f0 93 8f 02 	sts	0x028F, r31
 430:	e0 93 8e 02 	sts	0x028E, r30
 434:	80 91 90 02 	lds	r24, 0x0290
 438:	90 91 91 02 	lds	r25, 0x0291
 43c:	89 2b       	or	r24, r25
 43e:	21 f4       	brne	.+8      	; 0x448 <fdevopen+0x88>
 440:	f0 93 91 02 	sts	0x0291, r31
 444:	e0 93 90 02 	sts	0x0290, r30
 448:	cf 01       	movw	r24, r30
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	1f 91       	pop	r17
 450:	0f 91       	pop	r16
 452:	08 95       	ret

00000454 <printf>:
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	cd b7       	in	r28, 0x3d	; 61
 45a:	de b7       	in	r29, 0x3e	; 62
 45c:	fe 01       	movw	r30, r28
 45e:	36 96       	adiw	r30, 0x06	; 6
 460:	61 91       	ld	r22, Z+
 462:	71 91       	ld	r23, Z+
 464:	af 01       	movw	r20, r30
 466:	80 91 8e 02 	lds	r24, 0x028E
 46a:	90 91 8f 02 	lds	r25, 0x028F
 46e:	30 d0       	rcall	.+96     	; 0x4d0 <vfprintf>
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	08 95       	ret

00000476 <puts>:
 476:	0f 93       	push	r16
 478:	1f 93       	push	r17
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	e0 91 8e 02 	lds	r30, 0x028E
 482:	f0 91 8f 02 	lds	r31, 0x028F
 486:	23 81       	ldd	r18, Z+3	; 0x03
 488:	21 ff       	sbrs	r18, 1
 48a:	1b c0       	rjmp	.+54     	; 0x4c2 <puts+0x4c>
 48c:	ec 01       	movw	r28, r24
 48e:	00 e0       	ldi	r16, 0x00	; 0
 490:	10 e0       	ldi	r17, 0x00	; 0
 492:	89 91       	ld	r24, Y+
 494:	60 91 8e 02 	lds	r22, 0x028E
 498:	70 91 8f 02 	lds	r23, 0x028F
 49c:	db 01       	movw	r26, r22
 49e:	18 96       	adiw	r26, 0x08	; 8
 4a0:	ed 91       	ld	r30, X+
 4a2:	fc 91       	ld	r31, X
 4a4:	19 97       	sbiw	r26, 0x09	; 9
 4a6:	88 23       	and	r24, r24
 4a8:	31 f0       	breq	.+12     	; 0x4b6 <puts+0x40>
 4aa:	19 95       	eicall
 4ac:	89 2b       	or	r24, r25
 4ae:	89 f3       	breq	.-30     	; 0x492 <puts+0x1c>
 4b0:	0f ef       	ldi	r16, 0xFF	; 255
 4b2:	1f ef       	ldi	r17, 0xFF	; 255
 4b4:	ee cf       	rjmp	.-36     	; 0x492 <puts+0x1c>
 4b6:	8a e0       	ldi	r24, 0x0A	; 10
 4b8:	19 95       	eicall
 4ba:	89 2b       	or	r24, r25
 4bc:	11 f4       	brne	.+4      	; 0x4c2 <puts+0x4c>
 4be:	c8 01       	movw	r24, r16
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <puts+0x50>
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	9f ef       	ldi	r25, 0xFF	; 255
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	1f 91       	pop	r17
 4cc:	0f 91       	pop	r16
 4ce:	08 95       	ret

000004d0 <vfprintf>:
 4d0:	2f 92       	push	r2
 4d2:	3f 92       	push	r3
 4d4:	4f 92       	push	r4
 4d6:	5f 92       	push	r5
 4d8:	6f 92       	push	r6
 4da:	7f 92       	push	r7
 4dc:	8f 92       	push	r8
 4de:	9f 92       	push	r9
 4e0:	af 92       	push	r10
 4e2:	bf 92       	push	r11
 4e4:	cf 92       	push	r12
 4e6:	df 92       	push	r13
 4e8:	ef 92       	push	r14
 4ea:	ff 92       	push	r15
 4ec:	0f 93       	push	r16
 4ee:	1f 93       	push	r17
 4f0:	cf 93       	push	r28
 4f2:	df 93       	push	r29
 4f4:	cd b7       	in	r28, 0x3d	; 61
 4f6:	de b7       	in	r29, 0x3e	; 62
 4f8:	2c 97       	sbiw	r28, 0x0c	; 12
 4fa:	0f b6       	in	r0, 0x3f	; 63
 4fc:	f8 94       	cli
 4fe:	de bf       	out	0x3e, r29	; 62
 500:	0f be       	out	0x3f, r0	; 63
 502:	cd bf       	out	0x3d, r28	; 61
 504:	7c 01       	movw	r14, r24
 506:	6b 01       	movw	r12, r22
 508:	8a 01       	movw	r16, r20
 50a:	fc 01       	movw	r30, r24
 50c:	17 82       	std	Z+7, r1	; 0x07
 50e:	16 82       	std	Z+6, r1	; 0x06
 510:	83 81       	ldd	r24, Z+3	; 0x03
 512:	81 ff       	sbrs	r24, 1
 514:	b0 c1       	rjmp	.+864    	; 0x876 <vfprintf+0x3a6>
 516:	ce 01       	movw	r24, r28
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	4c 01       	movw	r8, r24
 51c:	f7 01       	movw	r30, r14
 51e:	93 81       	ldd	r25, Z+3	; 0x03
 520:	f6 01       	movw	r30, r12
 522:	93 fd       	sbrc	r25, 3
 524:	85 91       	lpm	r24, Z+
 526:	93 ff       	sbrs	r25, 3
 528:	81 91       	ld	r24, Z+
 52a:	6f 01       	movw	r12, r30
 52c:	88 23       	and	r24, r24
 52e:	09 f4       	brne	.+2      	; 0x532 <vfprintf+0x62>
 530:	9e c1       	rjmp	.+828    	; 0x86e <vfprintf+0x39e>
 532:	85 32       	cpi	r24, 0x25	; 37
 534:	39 f4       	brne	.+14     	; 0x544 <vfprintf+0x74>
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	6f 01       	movw	r12, r30
 540:	85 32       	cpi	r24, 0x25	; 37
 542:	21 f4       	brne	.+8      	; 0x54c <vfprintf+0x7c>
 544:	b7 01       	movw	r22, r14
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0f d3       	rcall	.+1566   	; 0xb68 <fputc>
 54a:	e8 cf       	rjmp	.-48     	; 0x51c <vfprintf+0x4c>
 54c:	51 2c       	mov	r5, r1
 54e:	31 2c       	mov	r3, r1
 550:	20 e0       	ldi	r18, 0x00	; 0
 552:	20 32       	cpi	r18, 0x20	; 32
 554:	a0 f4       	brcc	.+40     	; 0x57e <vfprintf+0xae>
 556:	8b 32       	cpi	r24, 0x2B	; 43
 558:	69 f0       	breq	.+26     	; 0x574 <vfprintf+0xa4>
 55a:	30 f4       	brcc	.+12     	; 0x568 <vfprintf+0x98>
 55c:	80 32       	cpi	r24, 0x20	; 32
 55e:	59 f0       	breq	.+22     	; 0x576 <vfprintf+0xa6>
 560:	83 32       	cpi	r24, 0x23	; 35
 562:	69 f4       	brne	.+26     	; 0x57e <vfprintf+0xae>
 564:	20 61       	ori	r18, 0x10	; 16
 566:	2c c0       	rjmp	.+88     	; 0x5c0 <vfprintf+0xf0>
 568:	8d 32       	cpi	r24, 0x2D	; 45
 56a:	39 f0       	breq	.+14     	; 0x57a <vfprintf+0xaa>
 56c:	80 33       	cpi	r24, 0x30	; 48
 56e:	39 f4       	brne	.+14     	; 0x57e <vfprintf+0xae>
 570:	21 60       	ori	r18, 0x01	; 1
 572:	26 c0       	rjmp	.+76     	; 0x5c0 <vfprintf+0xf0>
 574:	22 60       	ori	r18, 0x02	; 2
 576:	24 60       	ori	r18, 0x04	; 4
 578:	23 c0       	rjmp	.+70     	; 0x5c0 <vfprintf+0xf0>
 57a:	28 60       	ori	r18, 0x08	; 8
 57c:	21 c0       	rjmp	.+66     	; 0x5c0 <vfprintf+0xf0>
 57e:	27 fd       	sbrc	r18, 7
 580:	27 c0       	rjmp	.+78     	; 0x5d0 <vfprintf+0x100>
 582:	30 ed       	ldi	r19, 0xD0	; 208
 584:	38 0f       	add	r19, r24
 586:	3a 30       	cpi	r19, 0x0A	; 10
 588:	78 f4       	brcc	.+30     	; 0x5a8 <vfprintf+0xd8>
 58a:	26 ff       	sbrs	r18, 6
 58c:	06 c0       	rjmp	.+12     	; 0x59a <vfprintf+0xca>
 58e:	fa e0       	ldi	r31, 0x0A	; 10
 590:	5f 9e       	mul	r5, r31
 592:	30 0d       	add	r19, r0
 594:	11 24       	eor	r1, r1
 596:	53 2e       	mov	r5, r19
 598:	13 c0       	rjmp	.+38     	; 0x5c0 <vfprintf+0xf0>
 59a:	8a e0       	ldi	r24, 0x0A	; 10
 59c:	38 9e       	mul	r3, r24
 59e:	30 0d       	add	r19, r0
 5a0:	11 24       	eor	r1, r1
 5a2:	33 2e       	mov	r3, r19
 5a4:	20 62       	ori	r18, 0x20	; 32
 5a6:	0c c0       	rjmp	.+24     	; 0x5c0 <vfprintf+0xf0>
 5a8:	8e 32       	cpi	r24, 0x2E	; 46
 5aa:	21 f4       	brne	.+8      	; 0x5b4 <vfprintf+0xe4>
 5ac:	26 fd       	sbrc	r18, 6
 5ae:	5f c1       	rjmp	.+702    	; 0x86e <vfprintf+0x39e>
 5b0:	20 64       	ori	r18, 0x40	; 64
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <vfprintf+0xf0>
 5b4:	8c 36       	cpi	r24, 0x6C	; 108
 5b6:	11 f4       	brne	.+4      	; 0x5bc <vfprintf+0xec>
 5b8:	20 68       	ori	r18, 0x80	; 128
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <vfprintf+0xf0>
 5bc:	88 36       	cpi	r24, 0x68	; 104
 5be:	41 f4       	brne	.+16     	; 0x5d0 <vfprintf+0x100>
 5c0:	f6 01       	movw	r30, r12
 5c2:	93 fd       	sbrc	r25, 3
 5c4:	85 91       	lpm	r24, Z+
 5c6:	93 ff       	sbrs	r25, 3
 5c8:	81 91       	ld	r24, Z+
 5ca:	6f 01       	movw	r12, r30
 5cc:	81 11       	cpse	r24, r1
 5ce:	c1 cf       	rjmp	.-126    	; 0x552 <vfprintf+0x82>
 5d0:	98 2f       	mov	r25, r24
 5d2:	9f 7d       	andi	r25, 0xDF	; 223
 5d4:	95 54       	subi	r25, 0x45	; 69
 5d6:	93 30       	cpi	r25, 0x03	; 3
 5d8:	28 f4       	brcc	.+10     	; 0x5e4 <vfprintf+0x114>
 5da:	0c 5f       	subi	r16, 0xFC	; 252
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	ff e3       	ldi	r31, 0x3F	; 63
 5e0:	f9 83       	std	Y+1, r31	; 0x01
 5e2:	0d c0       	rjmp	.+26     	; 0x5fe <vfprintf+0x12e>
 5e4:	83 36       	cpi	r24, 0x63	; 99
 5e6:	31 f0       	breq	.+12     	; 0x5f4 <vfprintf+0x124>
 5e8:	83 37       	cpi	r24, 0x73	; 115
 5ea:	71 f0       	breq	.+28     	; 0x608 <vfprintf+0x138>
 5ec:	83 35       	cpi	r24, 0x53	; 83
 5ee:	09 f0       	breq	.+2      	; 0x5f2 <vfprintf+0x122>
 5f0:	57 c0       	rjmp	.+174    	; 0x6a0 <vfprintf+0x1d0>
 5f2:	21 c0       	rjmp	.+66     	; 0x636 <vfprintf+0x166>
 5f4:	f8 01       	movw	r30, r16
 5f6:	80 81       	ld	r24, Z
 5f8:	89 83       	std	Y+1, r24	; 0x01
 5fa:	0e 5f       	subi	r16, 0xFE	; 254
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
 5fe:	44 24       	eor	r4, r4
 600:	43 94       	inc	r4
 602:	51 2c       	mov	r5, r1
 604:	54 01       	movw	r10, r8
 606:	14 c0       	rjmp	.+40     	; 0x630 <vfprintf+0x160>
 608:	38 01       	movw	r6, r16
 60a:	f2 e0       	ldi	r31, 0x02	; 2
 60c:	6f 0e       	add	r6, r31
 60e:	71 1c       	adc	r7, r1
 610:	f8 01       	movw	r30, r16
 612:	a0 80       	ld	r10, Z
 614:	b1 80       	ldd	r11, Z+1	; 0x01
 616:	26 ff       	sbrs	r18, 6
 618:	03 c0       	rjmp	.+6      	; 0x620 <vfprintf+0x150>
 61a:	65 2d       	mov	r22, r5
 61c:	70 e0       	ldi	r23, 0x00	; 0
 61e:	02 c0       	rjmp	.+4      	; 0x624 <vfprintf+0x154>
 620:	6f ef       	ldi	r22, 0xFF	; 255
 622:	7f ef       	ldi	r23, 0xFF	; 255
 624:	c5 01       	movw	r24, r10
 626:	2c 87       	std	Y+12, r18	; 0x0c
 628:	94 d2       	rcall	.+1320   	; 0xb52 <strnlen>
 62a:	2c 01       	movw	r4, r24
 62c:	83 01       	movw	r16, r6
 62e:	2c 85       	ldd	r18, Y+12	; 0x0c
 630:	2f 77       	andi	r18, 0x7F	; 127
 632:	22 2e       	mov	r2, r18
 634:	16 c0       	rjmp	.+44     	; 0x662 <vfprintf+0x192>
 636:	38 01       	movw	r6, r16
 638:	f2 e0       	ldi	r31, 0x02	; 2
 63a:	6f 0e       	add	r6, r31
 63c:	71 1c       	adc	r7, r1
 63e:	f8 01       	movw	r30, r16
 640:	a0 80       	ld	r10, Z
 642:	b1 80       	ldd	r11, Z+1	; 0x01
 644:	26 ff       	sbrs	r18, 6
 646:	03 c0       	rjmp	.+6      	; 0x64e <vfprintf+0x17e>
 648:	65 2d       	mov	r22, r5
 64a:	70 e0       	ldi	r23, 0x00	; 0
 64c:	02 c0       	rjmp	.+4      	; 0x652 <vfprintf+0x182>
 64e:	6f ef       	ldi	r22, 0xFF	; 255
 650:	7f ef       	ldi	r23, 0xFF	; 255
 652:	c5 01       	movw	r24, r10
 654:	2c 87       	std	Y+12, r18	; 0x0c
 656:	6b d2       	rcall	.+1238   	; 0xb2e <strnlen_P>
 658:	2c 01       	movw	r4, r24
 65a:	2c 85       	ldd	r18, Y+12	; 0x0c
 65c:	20 68       	ori	r18, 0x80	; 128
 65e:	22 2e       	mov	r2, r18
 660:	83 01       	movw	r16, r6
 662:	23 fc       	sbrc	r2, 3
 664:	19 c0       	rjmp	.+50     	; 0x698 <vfprintf+0x1c8>
 666:	83 2d       	mov	r24, r3
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	48 16       	cp	r4, r24
 66c:	59 06       	cpc	r5, r25
 66e:	a0 f4       	brcc	.+40     	; 0x698 <vfprintf+0x1c8>
 670:	b7 01       	movw	r22, r14
 672:	80 e2       	ldi	r24, 0x20	; 32
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	78 d2       	rcall	.+1264   	; 0xb68 <fputc>
 678:	3a 94       	dec	r3
 67a:	f5 cf       	rjmp	.-22     	; 0x666 <vfprintf+0x196>
 67c:	f5 01       	movw	r30, r10
 67e:	27 fc       	sbrc	r2, 7
 680:	85 91       	lpm	r24, Z+
 682:	27 fe       	sbrs	r2, 7
 684:	81 91       	ld	r24, Z+
 686:	5f 01       	movw	r10, r30
 688:	b7 01       	movw	r22, r14
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	6d d2       	rcall	.+1242   	; 0xb68 <fputc>
 68e:	31 10       	cpse	r3, r1
 690:	3a 94       	dec	r3
 692:	f1 e0       	ldi	r31, 0x01	; 1
 694:	4f 1a       	sub	r4, r31
 696:	51 08       	sbc	r5, r1
 698:	41 14       	cp	r4, r1
 69a:	51 04       	cpc	r5, r1
 69c:	79 f7       	brne	.-34     	; 0x67c <vfprintf+0x1ac>
 69e:	de c0       	rjmp	.+444    	; 0x85c <vfprintf+0x38c>
 6a0:	84 36       	cpi	r24, 0x64	; 100
 6a2:	11 f0       	breq	.+4      	; 0x6a8 <vfprintf+0x1d8>
 6a4:	89 36       	cpi	r24, 0x69	; 105
 6a6:	31 f5       	brne	.+76     	; 0x6f4 <vfprintf+0x224>
 6a8:	f8 01       	movw	r30, r16
 6aa:	27 ff       	sbrs	r18, 7
 6ac:	07 c0       	rjmp	.+14     	; 0x6bc <vfprintf+0x1ec>
 6ae:	60 81       	ld	r22, Z
 6b0:	71 81       	ldd	r23, Z+1	; 0x01
 6b2:	82 81       	ldd	r24, Z+2	; 0x02
 6b4:	93 81       	ldd	r25, Z+3	; 0x03
 6b6:	0c 5f       	subi	r16, 0xFC	; 252
 6b8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ba:	08 c0       	rjmp	.+16     	; 0x6cc <vfprintf+0x1fc>
 6bc:	60 81       	ld	r22, Z
 6be:	71 81       	ldd	r23, Z+1	; 0x01
 6c0:	88 27       	eor	r24, r24
 6c2:	77 fd       	sbrc	r23, 7
 6c4:	80 95       	com	r24
 6c6:	98 2f       	mov	r25, r24
 6c8:	0e 5f       	subi	r16, 0xFE	; 254
 6ca:	1f 4f       	sbci	r17, 0xFF	; 255
 6cc:	2f 76       	andi	r18, 0x6F	; 111
 6ce:	b2 2e       	mov	r11, r18
 6d0:	97 ff       	sbrs	r25, 7
 6d2:	09 c0       	rjmp	.+18     	; 0x6e6 <vfprintf+0x216>
 6d4:	90 95       	com	r25
 6d6:	80 95       	com	r24
 6d8:	70 95       	com	r23
 6da:	61 95       	neg	r22
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8f 4f       	sbci	r24, 0xFF	; 255
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	20 68       	ori	r18, 0x80	; 128
 6e4:	b2 2e       	mov	r11, r18
 6e6:	2a e0       	ldi	r18, 0x0A	; 10
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	a4 01       	movw	r20, r8
 6ec:	6f d2       	rcall	.+1246   	; 0xbcc <__ultoa_invert>
 6ee:	a8 2e       	mov	r10, r24
 6f0:	a8 18       	sub	r10, r8
 6f2:	43 c0       	rjmp	.+134    	; 0x77a <vfprintf+0x2aa>
 6f4:	85 37       	cpi	r24, 0x75	; 117
 6f6:	29 f4       	brne	.+10     	; 0x702 <vfprintf+0x232>
 6f8:	2f 7e       	andi	r18, 0xEF	; 239
 6fa:	b2 2e       	mov	r11, r18
 6fc:	2a e0       	ldi	r18, 0x0A	; 10
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	25 c0       	rjmp	.+74     	; 0x74c <vfprintf+0x27c>
 702:	f2 2f       	mov	r31, r18
 704:	f9 7f       	andi	r31, 0xF9	; 249
 706:	bf 2e       	mov	r11, r31
 708:	8f 36       	cpi	r24, 0x6F	; 111
 70a:	c1 f0       	breq	.+48     	; 0x73c <vfprintf+0x26c>
 70c:	18 f4       	brcc	.+6      	; 0x714 <vfprintf+0x244>
 70e:	88 35       	cpi	r24, 0x58	; 88
 710:	79 f0       	breq	.+30     	; 0x730 <vfprintf+0x260>
 712:	ad c0       	rjmp	.+346    	; 0x86e <vfprintf+0x39e>
 714:	80 37       	cpi	r24, 0x70	; 112
 716:	19 f0       	breq	.+6      	; 0x71e <vfprintf+0x24e>
 718:	88 37       	cpi	r24, 0x78	; 120
 71a:	21 f0       	breq	.+8      	; 0x724 <vfprintf+0x254>
 71c:	a8 c0       	rjmp	.+336    	; 0x86e <vfprintf+0x39e>
 71e:	2f 2f       	mov	r18, r31
 720:	20 61       	ori	r18, 0x10	; 16
 722:	b2 2e       	mov	r11, r18
 724:	b4 fe       	sbrs	r11, 4
 726:	0d c0       	rjmp	.+26     	; 0x742 <vfprintf+0x272>
 728:	8b 2d       	mov	r24, r11
 72a:	84 60       	ori	r24, 0x04	; 4
 72c:	b8 2e       	mov	r11, r24
 72e:	09 c0       	rjmp	.+18     	; 0x742 <vfprintf+0x272>
 730:	24 ff       	sbrs	r18, 4
 732:	0a c0       	rjmp	.+20     	; 0x748 <vfprintf+0x278>
 734:	9f 2f       	mov	r25, r31
 736:	96 60       	ori	r25, 0x06	; 6
 738:	b9 2e       	mov	r11, r25
 73a:	06 c0       	rjmp	.+12     	; 0x748 <vfprintf+0x278>
 73c:	28 e0       	ldi	r18, 0x08	; 8
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	05 c0       	rjmp	.+10     	; 0x74c <vfprintf+0x27c>
 742:	20 e1       	ldi	r18, 0x10	; 16
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	02 c0       	rjmp	.+4      	; 0x74c <vfprintf+0x27c>
 748:	20 e1       	ldi	r18, 0x10	; 16
 74a:	32 e0       	ldi	r19, 0x02	; 2
 74c:	f8 01       	movw	r30, r16
 74e:	b7 fe       	sbrs	r11, 7
 750:	07 c0       	rjmp	.+14     	; 0x760 <vfprintf+0x290>
 752:	60 81       	ld	r22, Z
 754:	71 81       	ldd	r23, Z+1	; 0x01
 756:	82 81       	ldd	r24, Z+2	; 0x02
 758:	93 81       	ldd	r25, Z+3	; 0x03
 75a:	0c 5f       	subi	r16, 0xFC	; 252
 75c:	1f 4f       	sbci	r17, 0xFF	; 255
 75e:	06 c0       	rjmp	.+12     	; 0x76c <vfprintf+0x29c>
 760:	60 81       	ld	r22, Z
 762:	71 81       	ldd	r23, Z+1	; 0x01
 764:	80 e0       	ldi	r24, 0x00	; 0
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 5f       	subi	r16, 0xFE	; 254
 76a:	1f 4f       	sbci	r17, 0xFF	; 255
 76c:	a4 01       	movw	r20, r8
 76e:	2e d2       	rcall	.+1116   	; 0xbcc <__ultoa_invert>
 770:	a8 2e       	mov	r10, r24
 772:	a8 18       	sub	r10, r8
 774:	fb 2d       	mov	r31, r11
 776:	ff 77       	andi	r31, 0x7F	; 127
 778:	bf 2e       	mov	r11, r31
 77a:	b6 fe       	sbrs	r11, 6
 77c:	0b c0       	rjmp	.+22     	; 0x794 <vfprintf+0x2c4>
 77e:	2b 2d       	mov	r18, r11
 780:	2e 7f       	andi	r18, 0xFE	; 254
 782:	a5 14       	cp	r10, r5
 784:	50 f4       	brcc	.+20     	; 0x79a <vfprintf+0x2ca>
 786:	b4 fe       	sbrs	r11, 4
 788:	0a c0       	rjmp	.+20     	; 0x79e <vfprintf+0x2ce>
 78a:	b2 fc       	sbrc	r11, 2
 78c:	08 c0       	rjmp	.+16     	; 0x79e <vfprintf+0x2ce>
 78e:	2b 2d       	mov	r18, r11
 790:	2e 7e       	andi	r18, 0xEE	; 238
 792:	05 c0       	rjmp	.+10     	; 0x79e <vfprintf+0x2ce>
 794:	7a 2c       	mov	r7, r10
 796:	2b 2d       	mov	r18, r11
 798:	03 c0       	rjmp	.+6      	; 0x7a0 <vfprintf+0x2d0>
 79a:	7a 2c       	mov	r7, r10
 79c:	01 c0       	rjmp	.+2      	; 0x7a0 <vfprintf+0x2d0>
 79e:	75 2c       	mov	r7, r5
 7a0:	24 ff       	sbrs	r18, 4
 7a2:	0d c0       	rjmp	.+26     	; 0x7be <vfprintf+0x2ee>
 7a4:	fe 01       	movw	r30, r28
 7a6:	ea 0d       	add	r30, r10
 7a8:	f1 1d       	adc	r31, r1
 7aa:	80 81       	ld	r24, Z
 7ac:	80 33       	cpi	r24, 0x30	; 48
 7ae:	11 f4       	brne	.+4      	; 0x7b4 <vfprintf+0x2e4>
 7b0:	29 7e       	andi	r18, 0xE9	; 233
 7b2:	09 c0       	rjmp	.+18     	; 0x7c6 <vfprintf+0x2f6>
 7b4:	22 ff       	sbrs	r18, 2
 7b6:	06 c0       	rjmp	.+12     	; 0x7c4 <vfprintf+0x2f4>
 7b8:	73 94       	inc	r7
 7ba:	73 94       	inc	r7
 7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <vfprintf+0x2f6>
 7be:	82 2f       	mov	r24, r18
 7c0:	86 78       	andi	r24, 0x86	; 134
 7c2:	09 f0       	breq	.+2      	; 0x7c6 <vfprintf+0x2f6>
 7c4:	73 94       	inc	r7
 7c6:	23 fd       	sbrc	r18, 3
 7c8:	12 c0       	rjmp	.+36     	; 0x7ee <vfprintf+0x31e>
 7ca:	20 ff       	sbrs	r18, 0
 7cc:	06 c0       	rjmp	.+12     	; 0x7da <vfprintf+0x30a>
 7ce:	5a 2c       	mov	r5, r10
 7d0:	73 14       	cp	r7, r3
 7d2:	18 f4       	brcc	.+6      	; 0x7da <vfprintf+0x30a>
 7d4:	53 0c       	add	r5, r3
 7d6:	57 18       	sub	r5, r7
 7d8:	73 2c       	mov	r7, r3
 7da:	73 14       	cp	r7, r3
 7dc:	60 f4       	brcc	.+24     	; 0x7f6 <vfprintf+0x326>
 7de:	b7 01       	movw	r22, r14
 7e0:	80 e2       	ldi	r24, 0x20	; 32
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	2c 87       	std	Y+12, r18	; 0x0c
 7e6:	c0 d1       	rcall	.+896    	; 0xb68 <fputc>
 7e8:	73 94       	inc	r7
 7ea:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ec:	f6 cf       	rjmp	.-20     	; 0x7da <vfprintf+0x30a>
 7ee:	73 14       	cp	r7, r3
 7f0:	10 f4       	brcc	.+4      	; 0x7f6 <vfprintf+0x326>
 7f2:	37 18       	sub	r3, r7
 7f4:	01 c0       	rjmp	.+2      	; 0x7f8 <vfprintf+0x328>
 7f6:	31 2c       	mov	r3, r1
 7f8:	24 ff       	sbrs	r18, 4
 7fa:	11 c0       	rjmp	.+34     	; 0x81e <vfprintf+0x34e>
 7fc:	b7 01       	movw	r22, r14
 7fe:	80 e3       	ldi	r24, 0x30	; 48
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	2c 87       	std	Y+12, r18	; 0x0c
 804:	b1 d1       	rcall	.+866    	; 0xb68 <fputc>
 806:	2c 85       	ldd	r18, Y+12	; 0x0c
 808:	22 ff       	sbrs	r18, 2
 80a:	16 c0       	rjmp	.+44     	; 0x838 <vfprintf+0x368>
 80c:	21 ff       	sbrs	r18, 1
 80e:	03 c0       	rjmp	.+6      	; 0x816 <vfprintf+0x346>
 810:	88 e5       	ldi	r24, 0x58	; 88
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	02 c0       	rjmp	.+4      	; 0x81a <vfprintf+0x34a>
 816:	88 e7       	ldi	r24, 0x78	; 120
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	b7 01       	movw	r22, r14
 81c:	0c c0       	rjmp	.+24     	; 0x836 <vfprintf+0x366>
 81e:	82 2f       	mov	r24, r18
 820:	86 78       	andi	r24, 0x86	; 134
 822:	51 f0       	breq	.+20     	; 0x838 <vfprintf+0x368>
 824:	21 fd       	sbrc	r18, 1
 826:	02 c0       	rjmp	.+4      	; 0x82c <vfprintf+0x35c>
 828:	80 e2       	ldi	r24, 0x20	; 32
 82a:	01 c0       	rjmp	.+2      	; 0x82e <vfprintf+0x35e>
 82c:	8b e2       	ldi	r24, 0x2B	; 43
 82e:	27 fd       	sbrc	r18, 7
 830:	8d e2       	ldi	r24, 0x2D	; 45
 832:	b7 01       	movw	r22, r14
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	98 d1       	rcall	.+816    	; 0xb68 <fputc>
 838:	a5 14       	cp	r10, r5
 83a:	30 f4       	brcc	.+12     	; 0x848 <vfprintf+0x378>
 83c:	b7 01       	movw	r22, r14
 83e:	80 e3       	ldi	r24, 0x30	; 48
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	92 d1       	rcall	.+804    	; 0xb68 <fputc>
 844:	5a 94       	dec	r5
 846:	f8 cf       	rjmp	.-16     	; 0x838 <vfprintf+0x368>
 848:	aa 94       	dec	r10
 84a:	f4 01       	movw	r30, r8
 84c:	ea 0d       	add	r30, r10
 84e:	f1 1d       	adc	r31, r1
 850:	80 81       	ld	r24, Z
 852:	b7 01       	movw	r22, r14
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	88 d1       	rcall	.+784    	; 0xb68 <fputc>
 858:	a1 10       	cpse	r10, r1
 85a:	f6 cf       	rjmp	.-20     	; 0x848 <vfprintf+0x378>
 85c:	33 20       	and	r3, r3
 85e:	09 f4       	brne	.+2      	; 0x862 <vfprintf+0x392>
 860:	5d ce       	rjmp	.-838    	; 0x51c <vfprintf+0x4c>
 862:	b7 01       	movw	r22, r14
 864:	80 e2       	ldi	r24, 0x20	; 32
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	7f d1       	rcall	.+766    	; 0xb68 <fputc>
 86a:	3a 94       	dec	r3
 86c:	f7 cf       	rjmp	.-18     	; 0x85c <vfprintf+0x38c>
 86e:	f7 01       	movw	r30, r14
 870:	86 81       	ldd	r24, Z+6	; 0x06
 872:	97 81       	ldd	r25, Z+7	; 0x07
 874:	02 c0       	rjmp	.+4      	; 0x87a <vfprintf+0x3aa>
 876:	8f ef       	ldi	r24, 0xFF	; 255
 878:	9f ef       	ldi	r25, 0xFF	; 255
 87a:	2c 96       	adiw	r28, 0x0c	; 12
 87c:	0f b6       	in	r0, 0x3f	; 63
 87e:	f8 94       	cli
 880:	de bf       	out	0x3e, r29	; 62
 882:	0f be       	out	0x3f, r0	; 63
 884:	cd bf       	out	0x3d, r28	; 61
 886:	df 91       	pop	r29
 888:	cf 91       	pop	r28
 88a:	1f 91       	pop	r17
 88c:	0f 91       	pop	r16
 88e:	ff 90       	pop	r15
 890:	ef 90       	pop	r14
 892:	df 90       	pop	r13
 894:	cf 90       	pop	r12
 896:	bf 90       	pop	r11
 898:	af 90       	pop	r10
 89a:	9f 90       	pop	r9
 89c:	8f 90       	pop	r8
 89e:	7f 90       	pop	r7
 8a0:	6f 90       	pop	r6
 8a2:	5f 90       	pop	r5
 8a4:	4f 90       	pop	r4
 8a6:	3f 90       	pop	r3
 8a8:	2f 90       	pop	r2
 8aa:	08 95       	ret

000008ac <calloc>:
 8ac:	0f 93       	push	r16
 8ae:	1f 93       	push	r17
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	86 9f       	mul	r24, r22
 8b6:	80 01       	movw	r16, r0
 8b8:	87 9f       	mul	r24, r23
 8ba:	10 0d       	add	r17, r0
 8bc:	96 9f       	mul	r25, r22
 8be:	10 0d       	add	r17, r0
 8c0:	11 24       	eor	r1, r1
 8c2:	c8 01       	movw	r24, r16
 8c4:	0d d0       	rcall	.+26     	; 0x8e0 <malloc>
 8c6:	ec 01       	movw	r28, r24
 8c8:	00 97       	sbiw	r24, 0x00	; 0
 8ca:	21 f0       	breq	.+8      	; 0x8d4 <calloc+0x28>
 8cc:	a8 01       	movw	r20, r16
 8ce:	60 e0       	ldi	r22, 0x00	; 0
 8d0:	70 e0       	ldi	r23, 0x00	; 0
 8d2:	38 d1       	rcall	.+624    	; 0xb44 <memset>
 8d4:	ce 01       	movw	r24, r28
 8d6:	df 91       	pop	r29
 8d8:	cf 91       	pop	r28
 8da:	1f 91       	pop	r17
 8dc:	0f 91       	pop	r16
 8de:	08 95       	ret

000008e0 <malloc>:
 8e0:	cf 93       	push	r28
 8e2:	df 93       	push	r29
 8e4:	82 30       	cpi	r24, 0x02	; 2
 8e6:	91 05       	cpc	r25, r1
 8e8:	10 f4       	brcc	.+4      	; 0x8ee <malloc+0xe>
 8ea:	82 e0       	ldi	r24, 0x02	; 2
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	e0 91 94 02 	lds	r30, 0x0294
 8f2:	f0 91 95 02 	lds	r31, 0x0295
 8f6:	20 e0       	ldi	r18, 0x00	; 0
 8f8:	30 e0       	ldi	r19, 0x00	; 0
 8fa:	a0 e0       	ldi	r26, 0x00	; 0
 8fc:	b0 e0       	ldi	r27, 0x00	; 0
 8fe:	30 97       	sbiw	r30, 0x00	; 0
 900:	39 f1       	breq	.+78     	; 0x950 <malloc+0x70>
 902:	40 81       	ld	r20, Z
 904:	51 81       	ldd	r21, Z+1	; 0x01
 906:	48 17       	cp	r20, r24
 908:	59 07       	cpc	r21, r25
 90a:	b8 f0       	brcs	.+46     	; 0x93a <malloc+0x5a>
 90c:	48 17       	cp	r20, r24
 90e:	59 07       	cpc	r21, r25
 910:	71 f4       	brne	.+28     	; 0x92e <malloc+0x4e>
 912:	82 81       	ldd	r24, Z+2	; 0x02
 914:	93 81       	ldd	r25, Z+3	; 0x03
 916:	10 97       	sbiw	r26, 0x00	; 0
 918:	29 f0       	breq	.+10     	; 0x924 <malloc+0x44>
 91a:	13 96       	adiw	r26, 0x03	; 3
 91c:	9c 93       	st	X, r25
 91e:	8e 93       	st	-X, r24
 920:	12 97       	sbiw	r26, 0x02	; 2
 922:	2c c0       	rjmp	.+88     	; 0x97c <malloc+0x9c>
 924:	90 93 95 02 	sts	0x0295, r25
 928:	80 93 94 02 	sts	0x0294, r24
 92c:	27 c0       	rjmp	.+78     	; 0x97c <malloc+0x9c>
 92e:	21 15       	cp	r18, r1
 930:	31 05       	cpc	r19, r1
 932:	31 f0       	breq	.+12     	; 0x940 <malloc+0x60>
 934:	42 17       	cp	r20, r18
 936:	53 07       	cpc	r21, r19
 938:	18 f0       	brcs	.+6      	; 0x940 <malloc+0x60>
 93a:	a9 01       	movw	r20, r18
 93c:	db 01       	movw	r26, r22
 93e:	01 c0       	rjmp	.+2      	; 0x942 <malloc+0x62>
 940:	ef 01       	movw	r28, r30
 942:	9a 01       	movw	r18, r20
 944:	bd 01       	movw	r22, r26
 946:	df 01       	movw	r26, r30
 948:	02 80       	ldd	r0, Z+2	; 0x02
 94a:	f3 81       	ldd	r31, Z+3	; 0x03
 94c:	e0 2d       	mov	r30, r0
 94e:	d7 cf       	rjmp	.-82     	; 0x8fe <malloc+0x1e>
 950:	21 15       	cp	r18, r1
 952:	31 05       	cpc	r19, r1
 954:	f9 f0       	breq	.+62     	; 0x994 <malloc+0xb4>
 956:	28 1b       	sub	r18, r24
 958:	39 0b       	sbc	r19, r25
 95a:	24 30       	cpi	r18, 0x04	; 4
 95c:	31 05       	cpc	r19, r1
 95e:	80 f4       	brcc	.+32     	; 0x980 <malloc+0xa0>
 960:	8a 81       	ldd	r24, Y+2	; 0x02
 962:	9b 81       	ldd	r25, Y+3	; 0x03
 964:	61 15       	cp	r22, r1
 966:	71 05       	cpc	r23, r1
 968:	21 f0       	breq	.+8      	; 0x972 <malloc+0x92>
 96a:	fb 01       	movw	r30, r22
 96c:	93 83       	std	Z+3, r25	; 0x03
 96e:	82 83       	std	Z+2, r24	; 0x02
 970:	04 c0       	rjmp	.+8      	; 0x97a <malloc+0x9a>
 972:	90 93 95 02 	sts	0x0295, r25
 976:	80 93 94 02 	sts	0x0294, r24
 97a:	fe 01       	movw	r30, r28
 97c:	32 96       	adiw	r30, 0x02	; 2
 97e:	44 c0       	rjmp	.+136    	; 0xa08 <malloc+0x128>
 980:	fe 01       	movw	r30, r28
 982:	e2 0f       	add	r30, r18
 984:	f3 1f       	adc	r31, r19
 986:	81 93       	st	Z+, r24
 988:	91 93       	st	Z+, r25
 98a:	22 50       	subi	r18, 0x02	; 2
 98c:	31 09       	sbc	r19, r1
 98e:	39 83       	std	Y+1, r19	; 0x01
 990:	28 83       	st	Y, r18
 992:	3a c0       	rjmp	.+116    	; 0xa08 <malloc+0x128>
 994:	20 91 92 02 	lds	r18, 0x0292
 998:	30 91 93 02 	lds	r19, 0x0293
 99c:	23 2b       	or	r18, r19
 99e:	41 f4       	brne	.+16     	; 0x9b0 <malloc+0xd0>
 9a0:	20 91 02 02 	lds	r18, 0x0202
 9a4:	30 91 03 02 	lds	r19, 0x0203
 9a8:	30 93 93 02 	sts	0x0293, r19
 9ac:	20 93 92 02 	sts	0x0292, r18
 9b0:	20 91 00 02 	lds	r18, 0x0200
 9b4:	30 91 01 02 	lds	r19, 0x0201
 9b8:	21 15       	cp	r18, r1
 9ba:	31 05       	cpc	r19, r1
 9bc:	41 f4       	brne	.+16     	; 0x9ce <malloc+0xee>
 9be:	2d b7       	in	r18, 0x3d	; 61
 9c0:	3e b7       	in	r19, 0x3e	; 62
 9c2:	40 91 04 02 	lds	r20, 0x0204
 9c6:	50 91 05 02 	lds	r21, 0x0205
 9ca:	24 1b       	sub	r18, r20
 9cc:	35 0b       	sbc	r19, r21
 9ce:	e0 91 92 02 	lds	r30, 0x0292
 9d2:	f0 91 93 02 	lds	r31, 0x0293
 9d6:	e2 17       	cp	r30, r18
 9d8:	f3 07       	cpc	r31, r19
 9da:	a0 f4       	brcc	.+40     	; 0xa04 <malloc+0x124>
 9dc:	2e 1b       	sub	r18, r30
 9de:	3f 0b       	sbc	r19, r31
 9e0:	28 17       	cp	r18, r24
 9e2:	39 07       	cpc	r19, r25
 9e4:	78 f0       	brcs	.+30     	; 0xa04 <malloc+0x124>
 9e6:	ac 01       	movw	r20, r24
 9e8:	4e 5f       	subi	r20, 0xFE	; 254
 9ea:	5f 4f       	sbci	r21, 0xFF	; 255
 9ec:	24 17       	cp	r18, r20
 9ee:	35 07       	cpc	r19, r21
 9f0:	48 f0       	brcs	.+18     	; 0xa04 <malloc+0x124>
 9f2:	4e 0f       	add	r20, r30
 9f4:	5f 1f       	adc	r21, r31
 9f6:	50 93 93 02 	sts	0x0293, r21
 9fa:	40 93 92 02 	sts	0x0292, r20
 9fe:	81 93       	st	Z+, r24
 a00:	91 93       	st	Z+, r25
 a02:	02 c0       	rjmp	.+4      	; 0xa08 <malloc+0x128>
 a04:	e0 e0       	ldi	r30, 0x00	; 0
 a06:	f0 e0       	ldi	r31, 0x00	; 0
 a08:	cf 01       	movw	r24, r30
 a0a:	df 91       	pop	r29
 a0c:	cf 91       	pop	r28
 a0e:	08 95       	ret

00000a10 <free>:
 a10:	cf 93       	push	r28
 a12:	df 93       	push	r29
 a14:	00 97       	sbiw	r24, 0x00	; 0
 a16:	09 f4       	brne	.+2      	; 0xa1a <free+0xa>
 a18:	87 c0       	rjmp	.+270    	; 0xb28 <free+0x118>
 a1a:	fc 01       	movw	r30, r24
 a1c:	32 97       	sbiw	r30, 0x02	; 2
 a1e:	13 82       	std	Z+3, r1	; 0x03
 a20:	12 82       	std	Z+2, r1	; 0x02
 a22:	c0 91 94 02 	lds	r28, 0x0294
 a26:	d0 91 95 02 	lds	r29, 0x0295
 a2a:	20 97       	sbiw	r28, 0x00	; 0
 a2c:	81 f4       	brne	.+32     	; 0xa4e <free+0x3e>
 a2e:	20 81       	ld	r18, Z
 a30:	31 81       	ldd	r19, Z+1	; 0x01
 a32:	28 0f       	add	r18, r24
 a34:	39 1f       	adc	r19, r25
 a36:	80 91 92 02 	lds	r24, 0x0292
 a3a:	90 91 93 02 	lds	r25, 0x0293
 a3e:	82 17       	cp	r24, r18
 a40:	93 07       	cpc	r25, r19
 a42:	79 f5       	brne	.+94     	; 0xaa2 <free+0x92>
 a44:	f0 93 93 02 	sts	0x0293, r31
 a48:	e0 93 92 02 	sts	0x0292, r30
 a4c:	6d c0       	rjmp	.+218    	; 0xb28 <free+0x118>
 a4e:	de 01       	movw	r26, r28
 a50:	20 e0       	ldi	r18, 0x00	; 0
 a52:	30 e0       	ldi	r19, 0x00	; 0
 a54:	ae 17       	cp	r26, r30
 a56:	bf 07       	cpc	r27, r31
 a58:	50 f4       	brcc	.+20     	; 0xa6e <free+0x5e>
 a5a:	12 96       	adiw	r26, 0x02	; 2
 a5c:	4d 91       	ld	r20, X+
 a5e:	5c 91       	ld	r21, X
 a60:	13 97       	sbiw	r26, 0x03	; 3
 a62:	9d 01       	movw	r18, r26
 a64:	41 15       	cp	r20, r1
 a66:	51 05       	cpc	r21, r1
 a68:	09 f1       	breq	.+66     	; 0xaac <free+0x9c>
 a6a:	da 01       	movw	r26, r20
 a6c:	f3 cf       	rjmp	.-26     	; 0xa54 <free+0x44>
 a6e:	b3 83       	std	Z+3, r27	; 0x03
 a70:	a2 83       	std	Z+2, r26	; 0x02
 a72:	40 81       	ld	r20, Z
 a74:	51 81       	ldd	r21, Z+1	; 0x01
 a76:	84 0f       	add	r24, r20
 a78:	95 1f       	adc	r25, r21
 a7a:	8a 17       	cp	r24, r26
 a7c:	9b 07       	cpc	r25, r27
 a7e:	71 f4       	brne	.+28     	; 0xa9c <free+0x8c>
 a80:	8d 91       	ld	r24, X+
 a82:	9c 91       	ld	r25, X
 a84:	11 97       	sbiw	r26, 0x01	; 1
 a86:	84 0f       	add	r24, r20
 a88:	95 1f       	adc	r25, r21
 a8a:	02 96       	adiw	r24, 0x02	; 2
 a8c:	91 83       	std	Z+1, r25	; 0x01
 a8e:	80 83       	st	Z, r24
 a90:	12 96       	adiw	r26, 0x02	; 2
 a92:	8d 91       	ld	r24, X+
 a94:	9c 91       	ld	r25, X
 a96:	13 97       	sbiw	r26, 0x03	; 3
 a98:	93 83       	std	Z+3, r25	; 0x03
 a9a:	82 83       	std	Z+2, r24	; 0x02
 a9c:	21 15       	cp	r18, r1
 a9e:	31 05       	cpc	r19, r1
 aa0:	29 f4       	brne	.+10     	; 0xaac <free+0x9c>
 aa2:	f0 93 95 02 	sts	0x0295, r31
 aa6:	e0 93 94 02 	sts	0x0294, r30
 aaa:	3e c0       	rjmp	.+124    	; 0xb28 <free+0x118>
 aac:	d9 01       	movw	r26, r18
 aae:	13 96       	adiw	r26, 0x03	; 3
 ab0:	fc 93       	st	X, r31
 ab2:	ee 93       	st	-X, r30
 ab4:	12 97       	sbiw	r26, 0x02	; 2
 ab6:	4d 91       	ld	r20, X+
 ab8:	5d 91       	ld	r21, X+
 aba:	a4 0f       	add	r26, r20
 abc:	b5 1f       	adc	r27, r21
 abe:	ea 17       	cp	r30, r26
 ac0:	fb 07       	cpc	r31, r27
 ac2:	79 f4       	brne	.+30     	; 0xae2 <free+0xd2>
 ac4:	80 81       	ld	r24, Z
 ac6:	91 81       	ldd	r25, Z+1	; 0x01
 ac8:	84 0f       	add	r24, r20
 aca:	95 1f       	adc	r25, r21
 acc:	02 96       	adiw	r24, 0x02	; 2
 ace:	d9 01       	movw	r26, r18
 ad0:	11 96       	adiw	r26, 0x01	; 1
 ad2:	9c 93       	st	X, r25
 ad4:	8e 93       	st	-X, r24
 ad6:	82 81       	ldd	r24, Z+2	; 0x02
 ad8:	93 81       	ldd	r25, Z+3	; 0x03
 ada:	13 96       	adiw	r26, 0x03	; 3
 adc:	9c 93       	st	X, r25
 ade:	8e 93       	st	-X, r24
 ae0:	12 97       	sbiw	r26, 0x02	; 2
 ae2:	e0 e0       	ldi	r30, 0x00	; 0
 ae4:	f0 e0       	ldi	r31, 0x00	; 0
 ae6:	8a 81       	ldd	r24, Y+2	; 0x02
 ae8:	9b 81       	ldd	r25, Y+3	; 0x03
 aea:	00 97       	sbiw	r24, 0x00	; 0
 aec:	19 f0       	breq	.+6      	; 0xaf4 <free+0xe4>
 aee:	fe 01       	movw	r30, r28
 af0:	ec 01       	movw	r28, r24
 af2:	f9 cf       	rjmp	.-14     	; 0xae6 <free+0xd6>
 af4:	ce 01       	movw	r24, r28
 af6:	02 96       	adiw	r24, 0x02	; 2
 af8:	28 81       	ld	r18, Y
 afa:	39 81       	ldd	r19, Y+1	; 0x01
 afc:	82 0f       	add	r24, r18
 afe:	93 1f       	adc	r25, r19
 b00:	20 91 92 02 	lds	r18, 0x0292
 b04:	30 91 93 02 	lds	r19, 0x0293
 b08:	28 17       	cp	r18, r24
 b0a:	39 07       	cpc	r19, r25
 b0c:	69 f4       	brne	.+26     	; 0xb28 <free+0x118>
 b0e:	30 97       	sbiw	r30, 0x00	; 0
 b10:	29 f4       	brne	.+10     	; 0xb1c <free+0x10c>
 b12:	10 92 95 02 	sts	0x0295, r1
 b16:	10 92 94 02 	sts	0x0294, r1
 b1a:	02 c0       	rjmp	.+4      	; 0xb20 <free+0x110>
 b1c:	13 82       	std	Z+3, r1	; 0x03
 b1e:	12 82       	std	Z+2, r1	; 0x02
 b20:	d0 93 93 02 	sts	0x0293, r29
 b24:	c0 93 92 02 	sts	0x0292, r28
 b28:	df 91       	pop	r29
 b2a:	cf 91       	pop	r28
 b2c:	08 95       	ret

00000b2e <strnlen_P>:
 b2e:	fc 01       	movw	r30, r24
 b30:	05 90       	lpm	r0, Z+
 b32:	61 50       	subi	r22, 0x01	; 1
 b34:	70 40       	sbci	r23, 0x00	; 0
 b36:	01 10       	cpse	r0, r1
 b38:	d8 f7       	brcc	.-10     	; 0xb30 <strnlen_P+0x2>
 b3a:	80 95       	com	r24
 b3c:	90 95       	com	r25
 b3e:	8e 0f       	add	r24, r30
 b40:	9f 1f       	adc	r25, r31
 b42:	08 95       	ret

00000b44 <memset>:
 b44:	dc 01       	movw	r26, r24
 b46:	01 c0       	rjmp	.+2      	; 0xb4a <memset+0x6>
 b48:	6d 93       	st	X+, r22
 b4a:	41 50       	subi	r20, 0x01	; 1
 b4c:	50 40       	sbci	r21, 0x00	; 0
 b4e:	e0 f7       	brcc	.-8      	; 0xb48 <memset+0x4>
 b50:	08 95       	ret

00000b52 <strnlen>:
 b52:	fc 01       	movw	r30, r24
 b54:	61 50       	subi	r22, 0x01	; 1
 b56:	70 40       	sbci	r23, 0x00	; 0
 b58:	01 90       	ld	r0, Z+
 b5a:	01 10       	cpse	r0, r1
 b5c:	d8 f7       	brcc	.-10     	; 0xb54 <strnlen+0x2>
 b5e:	80 95       	com	r24
 b60:	90 95       	com	r25
 b62:	8e 0f       	add	r24, r30
 b64:	9f 1f       	adc	r25, r31
 b66:	08 95       	ret

00000b68 <fputc>:
 b68:	0f 93       	push	r16
 b6a:	1f 93       	push	r17
 b6c:	cf 93       	push	r28
 b6e:	df 93       	push	r29
 b70:	18 2f       	mov	r17, r24
 b72:	09 2f       	mov	r16, r25
 b74:	eb 01       	movw	r28, r22
 b76:	8b 81       	ldd	r24, Y+3	; 0x03
 b78:	81 fd       	sbrc	r24, 1
 b7a:	03 c0       	rjmp	.+6      	; 0xb82 <fputc+0x1a>
 b7c:	8f ef       	ldi	r24, 0xFF	; 255
 b7e:	9f ef       	ldi	r25, 0xFF	; 255
 b80:	20 c0       	rjmp	.+64     	; 0xbc2 <fputc+0x5a>
 b82:	82 ff       	sbrs	r24, 2
 b84:	10 c0       	rjmp	.+32     	; 0xba6 <fputc+0x3e>
 b86:	4e 81       	ldd	r20, Y+6	; 0x06
 b88:	5f 81       	ldd	r21, Y+7	; 0x07
 b8a:	2c 81       	ldd	r18, Y+4	; 0x04
 b8c:	3d 81       	ldd	r19, Y+5	; 0x05
 b8e:	42 17       	cp	r20, r18
 b90:	53 07       	cpc	r21, r19
 b92:	7c f4       	brge	.+30     	; 0xbb2 <fputc+0x4a>
 b94:	e8 81       	ld	r30, Y
 b96:	f9 81       	ldd	r31, Y+1	; 0x01
 b98:	9f 01       	movw	r18, r30
 b9a:	2f 5f       	subi	r18, 0xFF	; 255
 b9c:	3f 4f       	sbci	r19, 0xFF	; 255
 b9e:	39 83       	std	Y+1, r19	; 0x01
 ba0:	28 83       	st	Y, r18
 ba2:	10 83       	st	Z, r17
 ba4:	06 c0       	rjmp	.+12     	; 0xbb2 <fputc+0x4a>
 ba6:	e8 85       	ldd	r30, Y+8	; 0x08
 ba8:	f9 85       	ldd	r31, Y+9	; 0x09
 baa:	81 2f       	mov	r24, r17
 bac:	19 95       	eicall
 bae:	89 2b       	or	r24, r25
 bb0:	29 f7       	brne	.-54     	; 0xb7c <fputc+0x14>
 bb2:	2e 81       	ldd	r18, Y+6	; 0x06
 bb4:	3f 81       	ldd	r19, Y+7	; 0x07
 bb6:	2f 5f       	subi	r18, 0xFF	; 255
 bb8:	3f 4f       	sbci	r19, 0xFF	; 255
 bba:	3f 83       	std	Y+7, r19	; 0x07
 bbc:	2e 83       	std	Y+6, r18	; 0x06
 bbe:	81 2f       	mov	r24, r17
 bc0:	90 2f       	mov	r25, r16
 bc2:	df 91       	pop	r29
 bc4:	cf 91       	pop	r28
 bc6:	1f 91       	pop	r17
 bc8:	0f 91       	pop	r16
 bca:	08 95       	ret

00000bcc <__ultoa_invert>:
 bcc:	fa 01       	movw	r30, r20
 bce:	aa 27       	eor	r26, r26
 bd0:	28 30       	cpi	r18, 0x08	; 8
 bd2:	51 f1       	breq	.+84     	; 0xc28 <__ultoa_invert+0x5c>
 bd4:	20 31       	cpi	r18, 0x10	; 16
 bd6:	81 f1       	breq	.+96     	; 0xc38 <__ultoa_invert+0x6c>
 bd8:	e8 94       	clt
 bda:	6f 93       	push	r22
 bdc:	6e 7f       	andi	r22, 0xFE	; 254
 bde:	6e 5f       	subi	r22, 0xFE	; 254
 be0:	7f 4f       	sbci	r23, 0xFF	; 255
 be2:	8f 4f       	sbci	r24, 0xFF	; 255
 be4:	9f 4f       	sbci	r25, 0xFF	; 255
 be6:	af 4f       	sbci	r26, 0xFF	; 255
 be8:	b1 e0       	ldi	r27, 0x01	; 1
 bea:	3e d0       	rcall	.+124    	; 0xc68 <__ultoa_invert+0x9c>
 bec:	b4 e0       	ldi	r27, 0x04	; 4
 bee:	3c d0       	rcall	.+120    	; 0xc68 <__ultoa_invert+0x9c>
 bf0:	67 0f       	add	r22, r23
 bf2:	78 1f       	adc	r23, r24
 bf4:	89 1f       	adc	r24, r25
 bf6:	9a 1f       	adc	r25, r26
 bf8:	a1 1d       	adc	r26, r1
 bfa:	68 0f       	add	r22, r24
 bfc:	79 1f       	adc	r23, r25
 bfe:	8a 1f       	adc	r24, r26
 c00:	91 1d       	adc	r25, r1
 c02:	a1 1d       	adc	r26, r1
 c04:	6a 0f       	add	r22, r26
 c06:	71 1d       	adc	r23, r1
 c08:	81 1d       	adc	r24, r1
 c0a:	91 1d       	adc	r25, r1
 c0c:	a1 1d       	adc	r26, r1
 c0e:	20 d0       	rcall	.+64     	; 0xc50 <__ultoa_invert+0x84>
 c10:	09 f4       	brne	.+2      	; 0xc14 <__ultoa_invert+0x48>
 c12:	68 94       	set
 c14:	3f 91       	pop	r19
 c16:	2a e0       	ldi	r18, 0x0A	; 10
 c18:	26 9f       	mul	r18, r22
 c1a:	11 24       	eor	r1, r1
 c1c:	30 19       	sub	r19, r0
 c1e:	30 5d       	subi	r19, 0xD0	; 208
 c20:	31 93       	st	Z+, r19
 c22:	de f6       	brtc	.-74     	; 0xbda <__ultoa_invert+0xe>
 c24:	cf 01       	movw	r24, r30
 c26:	08 95       	ret
 c28:	46 2f       	mov	r20, r22
 c2a:	47 70       	andi	r20, 0x07	; 7
 c2c:	40 5d       	subi	r20, 0xD0	; 208
 c2e:	41 93       	st	Z+, r20
 c30:	b3 e0       	ldi	r27, 0x03	; 3
 c32:	0f d0       	rcall	.+30     	; 0xc52 <__ultoa_invert+0x86>
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0x5c>
 c36:	f6 cf       	rjmp	.-20     	; 0xc24 <__ultoa_invert+0x58>
 c38:	46 2f       	mov	r20, r22
 c3a:	4f 70       	andi	r20, 0x0F	; 15
 c3c:	40 5d       	subi	r20, 0xD0	; 208
 c3e:	4a 33       	cpi	r20, 0x3A	; 58
 c40:	18 f0       	brcs	.+6      	; 0xc48 <__ultoa_invert+0x7c>
 c42:	49 5d       	subi	r20, 0xD9	; 217
 c44:	31 fd       	sbrc	r19, 1
 c46:	40 52       	subi	r20, 0x20	; 32
 c48:	41 93       	st	Z+, r20
 c4a:	02 d0       	rcall	.+4      	; 0xc50 <__ultoa_invert+0x84>
 c4c:	a9 f7       	brne	.-22     	; 0xc38 <__ultoa_invert+0x6c>
 c4e:	ea cf       	rjmp	.-44     	; 0xc24 <__ultoa_invert+0x58>
 c50:	b4 e0       	ldi	r27, 0x04	; 4
 c52:	a6 95       	lsr	r26
 c54:	97 95       	ror	r25
 c56:	87 95       	ror	r24
 c58:	77 95       	ror	r23
 c5a:	67 95       	ror	r22
 c5c:	ba 95       	dec	r27
 c5e:	c9 f7       	brne	.-14     	; 0xc52 <__ultoa_invert+0x86>
 c60:	00 97       	sbiw	r24, 0x00	; 0
 c62:	61 05       	cpc	r22, r1
 c64:	71 05       	cpc	r23, r1
 c66:	08 95       	ret
 c68:	9b 01       	movw	r18, r22
 c6a:	ac 01       	movw	r20, r24
 c6c:	0a 2e       	mov	r0, r26
 c6e:	06 94       	lsr	r0
 c70:	57 95       	ror	r21
 c72:	47 95       	ror	r20
 c74:	37 95       	ror	r19
 c76:	27 95       	ror	r18
 c78:	ba 95       	dec	r27
 c7a:	c9 f7       	brne	.-14     	; 0xc6e <__ultoa_invert+0xa2>
 c7c:	62 0f       	add	r22, r18
 c7e:	73 1f       	adc	r23, r19
 c80:	84 1f       	adc	r24, r20
 c82:	95 1f       	adc	r25, r21
 c84:	a0 1d       	adc	r26, r0
 c86:	08 95       	ret

00000c88 <_exit>:
 c88:	f8 94       	cli

00000c8a <__stop_program>:
 c8a:	ff cf       	rjmp	.-2      	; 0xc8a <__stop_program>


Group52.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000138  00800100  000014e0  00001574  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800238  00800238  000016ac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000016ac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00001708  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000023bd  00000000  00000000  00001908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aff  00000000  00000000  00003cc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ae4  00000000  00000000  000047c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004b0  00000000  00000000  000052a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000692  00000000  00000000  00005758  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000112b  00000000  00000000  00005dea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d8  00000000  00000000  00006f15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e0 ee       	ldi	r30, 0xE0	; 224
     200:	f4 e1       	ldi	r31, 0x14	; 20
     202:	02 c0       	rjmp	.+4      	; 0x208 <__do_copy_data+0x10>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	a8 33       	cpi	r26, 0x38	; 56
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__do_copy_data+0xc>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	a8 e3       	ldi	r26, 0x38	; 56
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	a2 34       	cpi	r26, 0x42	; 66
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <main>
     222:	0c 94 6e 0a 	jmp	0x14dc	; 0x14dc <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <adc_read>:
#include <util/delay.h>
#include "adc.h"

uint8_t adc_read(DeviceType device){
	volatile char *adc = (char *) 0x1400;
	switch (device) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	69 f0       	breq	.+26     	; 0x248 <adc_read+0x1e>
     22e:	18 f4       	brcc	.+6      	; 0x236 <adc_read+0xc>
     230:	81 30       	cpi	r24, 0x01	; 1
     232:	31 f0       	breq	.+12     	; 0x240 <adc_read+0x16>
     234:	14 c0       	rjmp	.+40     	; 0x25e <adc_read+0x34>
     236:	83 30       	cpi	r24, 0x03	; 3
     238:	59 f0       	breq	.+22     	; 0x250 <adc_read+0x26>
     23a:	84 30       	cpi	r24, 0x04	; 4
     23c:	69 f0       	breq	.+26     	; 0x258 <adc_read+0x2e>
     23e:	0f c0       	rjmp	.+30     	; 0x25e <adc_read+0x34>
		case JOYAXIS1:
		/* Select CH1 */
		adc[0] = 0b00000100;
     240:	84 e0       	ldi	r24, 0x04	; 4
     242:	80 93 00 14 	sts	0x1400, r24
		break;
     246:	0b c0       	rjmp	.+22     	; 0x25e <adc_read+0x34>
		
		case JOYAXIS2:
		/* Select CH2 */
		adc[0] = 0b00000101;
     248:	85 e0       	ldi	r24, 0x05	; 5
     24a:	80 93 00 14 	sts	0x1400, r24
		break;
     24e:	07 c0       	rjmp	.+14     	; 0x25e <adc_read+0x34>
		
		case LSLIDER:
		/* Select CH3 */
		adc[0] = 0b00000110;
     250:	86 e0       	ldi	r24, 0x06	; 6
     252:	80 93 00 14 	sts	0x1400, r24
		break;
     256:	03 c0       	rjmp	.+6      	; 0x25e <adc_read+0x34>
		
		case RSLIDER:
		/* Select CH1 */
		adc[0] = 0b00000111;
     258:	87 e0       	ldi	r24, 0x07	; 7
     25a:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25e:	2c ec       	ldi	r18, 0xCC	; 204
     260:	8c e0       	ldi	r24, 0x0C	; 12
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	21 50       	subi	r18, 0x01	; 1
     266:	80 40       	sbci	r24, 0x00	; 0
     268:	90 40       	sbci	r25, 0x00	; 0
     26a:	e1 f7       	brne	.-8      	; 0x264 <adc_read+0x3a>
     26c:	00 c0       	rjmp	.+0      	; 0x26e <adc_read+0x44>
		break;
		default:
		break;
	}
	_delay_ms(70);
	return adc[0];
     26e:	80 91 00 14 	lds	r24, 0x1400
     272:	08 95       	ret

00000274 <JOYSTICK_init>:
#include "math.h"

void JOYSTICK_init(void)
{
	/* Set PB2 as input for button*/
	DDRB &= ~(1 << PB2);
     274:	ba 98       	cbi	0x17, 2	; 23
	PORTB &= (1 << PB2);
     276:	88 b3       	in	r24, 0x18	; 24
     278:	84 70       	andi	r24, 0x04	; 4
     27a:	88 bb       	out	0x18, r24	; 24
     27c:	08 95       	ret

0000027e <toPositionPercent>:
	return NEUTRAL;
}

int16_t toPositionPercent(int16_t value)
{
	value -= 127;
     27e:	8f 57       	subi	r24, 0x7F	; 127
     280:	91 09       	sbc	r25, r1
	int16_t percentValue = round((float)value / 127 * 100);
     282:	bc 01       	movw	r22, r24
     284:	88 27       	eor	r24, r24
     286:	77 fd       	sbrc	r23, 7
     288:	80 95       	com	r24
     28a:	98 2f       	mov	r25, r24
     28c:	0e 94 de 04 	call	0x9bc	; 0x9bc <__floatsisf>
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	4e ef       	ldi	r20, 0xFE	; 254
     296:	52 e4       	ldi	r21, 0x42	; 66
     298:	0e 94 43 04 	call	0x886	; 0x886 <__divsf3>
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	48 ec       	ldi	r20, 0xC8	; 200
     2a2:	52 e4       	ldi	r21, 0x42	; 66
     2a4:	0e 94 6a 05 	call	0xad4	; 0xad4 <__mulsf3>
     2a8:	0e 94 cd 05 	call	0xb9a	; 0xb9a <round>
     2ac:	0e 94 ab 04 	call	0x956	; 0x956 <__fixsfsi>
	return percentValue;
}
     2b0:	cb 01       	movw	r24, r22
     2b2:	08 95       	ret

000002b4 <JOYSTICK_get_position>:
{
	
}

struct positions JOYSTICK_get_position(void)
{
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	28 97       	sbiw	r28, 0x08	; 8
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
	int16_t yValue = (int16_t) adc_read(JOYAXIS1);
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
     2d4:	f8 2e       	mov	r15, r24
	int16_t xValue = (int16_t) adc_read(JOYAXIS2);
     2d6:	82 e0       	ldi	r24, 0x02	; 2
     2d8:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
	
	int16_t xPosition = toPositionPercent(xValue);
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
     2e2:	18 2f       	mov	r17, r24
     2e4:	09 2f       	mov	r16, r25
	int16_t yPosition = toPositionPercent(yValue);
     2e6:	8f 2d       	mov	r24, r15
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
	
	struct positions pos;
	pos.x = xPosition;
	pos.y = yPosition;
	
	return pos;
     2ee:	19 83       	std	Y+1, r17	; 0x01
     2f0:	0a 83       	std	Y+2, r16	; 0x02
     2f2:	8b 83       	std	Y+3, r24	; 0x03
     2f4:	9c 83       	std	Y+4, r25	; 0x04
     2f6:	21 2f       	mov	r18, r17
     2f8:	30 2f       	mov	r19, r16
     2fa:	48 2f       	mov	r20, r24
     2fc:	59 2f       	mov	r21, r25
     2fe:	6d 81       	ldd	r22, Y+5	; 0x05
     300:	7e 81       	ldd	r23, Y+6	; 0x06
}
     302:	8f 81       	ldd	r24, Y+7	; 0x07
     304:	98 85       	ldd	r25, Y+8	; 0x08
     306:	28 96       	adiw	r28, 0x08	; 8
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	f8 94       	cli
     30c:	de bf       	out	0x3e, r29	; 62
     30e:	0f be       	out	0x3f, r0	; 63
     310:	cd bf       	out	0x3d, r28	; 61
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	ff 90       	pop	r15
     31c:	08 95       	ret

0000031e <JOYSTICK_get_direction>:


DirectionType JOYSTICK_get_direction(void)
{
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	28 97       	sbiw	r28, 0x08	; 8
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	f8 94       	cli
     32c:	de bf       	out	0x3e, r29	; 62
     32e:	0f be       	out	0x3f, r0	; 63
     330:	cd bf       	out	0x3d, r28	; 61
	struct positions pos = JOYSTICK_get_position();
     332:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <JOYSTICK_get_position>
     336:	29 83       	std	Y+1, r18	; 0x01
     338:	3a 83       	std	Y+2, r19	; 0x02
     33a:	4b 83       	std	Y+3, r20	; 0x03
     33c:	5c 83       	std	Y+4, r21	; 0x04
     33e:	29 81       	ldd	r18, Y+1	; 0x01
     340:	3a 81       	ldd	r19, Y+2	; 0x02
     342:	8b 81       	ldd	r24, Y+3	; 0x03
     344:	9c 81       	ldd	r25, Y+4	; 0x04
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
     346:	ac 01       	movw	r20, r24
     348:	48 5e       	subi	r20, 0xE8	; 232
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	41 33       	cpi	r20, 0x31	; 49
     34e:	51 05       	cpc	r21, r1
     350:	48 f4       	brcc	.+18     	; 0x364 <JOYSTICK_get_direction+0x46>
		
		if (pos.x < -THRESHOLD) {
     352:	27 3e       	cpi	r18, 0xE7	; 231
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	38 07       	cpc	r19, r24
     358:	94 f0       	brlt	.+36     	; 0x37e <JOYSTICK_get_direction+0x60>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
     35a:	2a 31       	cpi	r18, 0x1A	; 26
     35c:	31 05       	cpc	r19, r1
     35e:	8c f4       	brge	.+34     	; 0x382 <JOYSTICK_get_direction+0x64>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	16 c0       	rjmp	.+44     	; 0x390 <JOYSTICK_get_direction+0x72>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
     364:	28 5e       	subi	r18, 0xE8	; 232
     366:	3f 4f       	sbci	r19, 0xFF	; 255
     368:	21 33       	cpi	r18, 0x31	; 49
     36a:	31 05       	cpc	r19, r1
     36c:	60 f4       	brcc	.+24     	; 0x386 <JOYSTICK_get_direction+0x68>
		
		if (pos.y < -THRESHOLD) {
     36e:	87 3e       	cpi	r24, 0xE7	; 231
     370:	2f ef       	ldi	r18, 0xFF	; 255
     372:	92 07       	cpc	r25, r18
     374:	54 f0       	brlt	.+20     	; 0x38a <JOYSTICK_get_direction+0x6c>
			return DOWN;
		} else if (pos.y > THRESHOLD) {
     376:	4a 97       	sbiw	r24, 0x1a	; 26
     378:	54 f4       	brge	.+20     	; 0x38e <JOYSTICK_get_direction+0x70>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	09 c0       	rjmp	.+18     	; 0x390 <JOYSTICK_get_direction+0x72>
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
		
		if (pos.x < -THRESHOLD) {
			return LEFT;
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	07 c0       	rjmp	.+14     	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
     382:	82 e0       	ldi	r24, 0x02	; 2
     384:	05 c0       	rjmp	.+10     	; 0x390 <JOYSTICK_get_direction+0x72>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	03 c0       	rjmp	.+6      	; 0x390 <JOYSTICK_get_direction+0x72>
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
		
		if (pos.y < -THRESHOLD) {
			return DOWN;
     38a:	84 e0       	ldi	r24, 0x04	; 4
     38c:	01 c0       	rjmp	.+2      	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.y > THRESHOLD) {
			return UP;
     38e:	83 e0       	ldi	r24, 0x03	; 3
		}
		
	}
	
	return NEUTRAL;
}
     390:	28 96       	adiw	r28, 0x08	; 8
     392:	0f b6       	in	r0, 0x3f	; 63
     394:	f8 94       	cli
     396:	de bf       	out	0x3e, r29	; 62
     398:	0f be       	out	0x3f, r0	; 63
     39a:	cd bf       	out	0x3d, r28	; 61
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <JOYSTICK_read_button>:
	return pos;
}

uint8_t JOYSTICK_read_button(void)
{
	return (PINB & (1 << PB2)) == 0;
     3a2:	86 b3       	in	r24, 0x16	; 22
     3a4:	82 fb       	bst	r24, 2
     3a6:	88 27       	eor	r24, r24
     3a8:	80 f9       	bld	r24, 0
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	89 27       	eor	r24, r25
     3ae:	08 95       	ret

000003b0 <main>:


int main(void)
{
	/* Needs to be set when using external memory */
	MCUCR |= (1 << SRE);
     3b0:	85 b7       	in	r24, 0x35	; 53
     3b2:	80 68       	ori	r24, 0x80	; 128
     3b4:	85 bf       	out	0x35, r24	; 53

	fdevopen(USART_transmit, USART_receive);
     3b6:	6f e3       	ldi	r22, 0x3F	; 63
     3b8:	74 e0       	ldi	r23, 0x04	; 4
     3ba:	8b e3       	ldi	r24, 0x3B	; 59
     3bc:	94 e0       	ldi	r25, 0x04	; 4
     3be:	0e 94 3d 07 	call	0xe7a	; 0xe7a <fdevopen>
	USART_init(MYUBBR);
     3c2:	8f e1       	ldi	r24, 0x1F	; 31
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	0e 94 34 04 	call	0x868	; 0x868 <USART_init>
	OLED_init();
     3ca:	0e 94 12 03 	call	0x624	; 0x624 <OLED_init>
	JOYSTICK_init();
     3ce:	0e 94 3a 01 	call	0x274	; 0x274 <JOYSTICK_init>
	SPI_master_init();
     3d2:	0e 94 2b 04 	call	0x856	; 0x856 <SPI_master_init>
	MCP_init();
     3d6:	0e 94 77 02 	call	0x4ee	; 0x4ee <MCP_init>
	
	OLED_reset();
     3da:	0e 94 04 03 	call	0x608	; 0x608 <OLED_reset>
	OLED_pos(2,20);
     3de:	64 e1       	ldi	r22, 0x14	; 20
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	
	menuNode *menu = OLED_generate_menu();
     3e6:	0e 94 a7 03 	call	0x74e	; 0x74e <OLED_generate_menu>
	OLED_print_menu(menu);
     3ea:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <OLED_print_menu>
	uint8_t currentRow = 1;
	uint8_t lastRow = 0;
	DirectionType joydir = NEUTRAL;
	uint8_t buttonPressed = 0;
	
	MCP_set_mode(LOOPBACK);
     3ee:	85 e0       	ldi	r24, 0x05	; 5
     3f0:	0e 94 c5 02 	call	0x58a	; 0x58a <MCP_set_mode>
	// Turn mask off for both receive buffers
	MCP_modify_bit(0x60, 0b01100000, 0x00);
     3f4:	40 e0       	ldi	r20, 0x00	; 0
     3f6:	60 e6       	ldi	r22, 0x60	; 96
     3f8:	80 e6       	ldi	r24, 0x60	; 96
     3fa:	0e 94 a9 02 	call	0x552	; 0x552 <MCP_modify_bit>
	MCP_modify_bit(0x70, 0b01100000, 0x00);
     3fe:	40 e0       	ldi	r20, 0x00	; 0
     400:	60 e6       	ldi	r22, 0x60	; 96
     402:	80 e7       	ldi	r24, 0x70	; 112
     404:	0e 94 a9 02 	call	0x552	; 0x552 <MCP_modify_bit>
	
	// Set TXB0CTRL.TXREQ
	MCP_modify_bit(0x30, 0b00001000, 0b00001000);
     408:	48 e0       	ldi	r20, 0x08	; 8
     40a:	68 e0       	ldi	r22, 0x08	; 8
     40c:	80 e3       	ldi	r24, 0x30	; 48
     40e:	0e 94 a9 02 	call	0x552	; 0x552 <MCP_modify_bit>
	
	MCP_write(0b00110001, 'A');
     412:	61 e4       	ldi	r22, 0x41	; 65
     414:	81 e3       	ldi	r24, 0x31	; 49
     416:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110010, 'A');
     41a:	61 e4       	ldi	r22, 0x41	; 65
     41c:	82 e3       	ldi	r24, 0x32	; 50
     41e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110011, 'A');
     422:	61 e4       	ldi	r22, 0x41	; 65
     424:	83 e3       	ldi	r24, 0x33	; 51
     426:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110100, 'A');
     42a:	61 e4       	ldi	r22, 0x41	; 65
     42c:	84 e3       	ldi	r24, 0x34	; 52
     42e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110101, 'A');
     432:	61 e4       	ldi	r22, 0x41	; 65
     434:	85 e3       	ldi	r24, 0x35	; 53
     436:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110110, 'A');
     43a:	61 e4       	ldi	r22, 0x41	; 65
     43c:	86 e3       	ldi	r24, 0x36	; 54
     43e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00110111, 'A');
     442:	61 e4       	ldi	r22, 0x41	; 65
     444:	87 e3       	ldi	r24, 0x37	; 55
     446:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111000, 'A');
     44a:	61 e4       	ldi	r22, 0x41	; 65
     44c:	88 e3       	ldi	r24, 0x38	; 56
     44e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111001, 'A');
     452:	61 e4       	ldi	r22, 0x41	; 65
     454:	89 e3       	ldi	r24, 0x39	; 57
     456:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111010, 'A');
     45a:	61 e4       	ldi	r22, 0x41	; 65
     45c:	8a e3       	ldi	r24, 0x3A	; 58
     45e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111011, 'A');
     462:	61 e4       	ldi	r22, 0x41	; 65
     464:	8b e3       	ldi	r24, 0x3B	; 59
     466:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111100, 'A');
     46a:	61 e4       	ldi	r22, 0x41	; 65
     46c:	8c e3       	ldi	r24, 0x3C	; 60
     46e:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	MCP_write(0b00111101, 'A');
     472:	61 e4       	ldi	r22, 0x41	; 65
     474:	8d e3       	ldi	r24, 0x3D	; 61
     476:	0e 94 8d 02 	call	0x51a	; 0x51a <MCP_write>
	
	MCP_request_to_send();
     47a:	0e 94 a2 02 	call	0x544	; 0x544 <MCP_request_to_send>
	char response = MCP_read(0x0F);
     47e:	8f e0       	ldi	r24, 0x0F	; 15
     480:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <MCP_read>
	printf("CANSTAT: %d\n", response);
     484:	1f 92       	push	r1
     486:	8f 93       	push	r24
     488:	86 e0       	ldi	r24, 0x06	; 6
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	9f 93       	push	r25
     48e:	8f 93       	push	r24
     490:	0e 94 88 07 	call	0xf10	; 0xf10 <printf>
     494:	0f 90       	pop	r0
     496:	0f 90       	pop	r0
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
	OLED_pos(2,20);
	
	menuNode *menu = OLED_generate_menu();
	OLED_print_menu(menu);
	
	uint8_t currentRow = 1;
     49c:	c1 e0       	ldi	r28, 0x01	; 1
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     49e:	01 e0       	ldi	r16, 0x01	; 1
	{	
		joydir = JOYSTICK_get_direction();
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     4a0:	17 e0       	ldi	r17, 0x07	; 7
	char response = MCP_read(0x0F);
	printf("CANSTAT: %d\n", response);
	
	while(1)
	{	
		joydir = JOYSTICK_get_direction();
     4a2:	0e 94 8f 01 	call	0x31e	; 0x31e <JOYSTICK_get_direction>
		lastRow = currentRow;
		if (joydir == UP) {
     4a6:	83 30       	cpi	r24, 0x03	; 3
     4a8:	29 f4       	brne	.+10     	; 0x4b4 <main+0x104>
			if (currentRow == 1) {
     4aa:	c1 30       	cpi	r28, 0x01	; 1
     4ac:	51 f0       	breq	.+20     	; 0x4c2 <main+0x112>
				currentRow = 7;
			} else {
				currentRow -= 1;
     4ae:	df ef       	ldi	r29, 0xFF	; 255
     4b0:	dc 0f       	add	r29, r28
     4b2:	0c c0       	rjmp	.+24     	; 0x4cc <main+0x11c>
			}
			
		} else if (joydir == DOWN) {
     4b4:	84 30       	cpi	r24, 0x04	; 4
     4b6:	39 f4       	brne	.+14     	; 0x4c6 <main+0x116>
			if (currentRow == 7) {
     4b8:	c7 30       	cpi	r28, 0x07	; 7
     4ba:	39 f0       	breq	.+14     	; 0x4ca <main+0x11a>
				currentRow = 1;
			} else {
				currentRow += 1;
     4bc:	d1 e0       	ldi	r29, 0x01	; 1
     4be:	dc 0f       	add	r29, r28
     4c0:	05 c0       	rjmp	.+10     	; 0x4cc <main+0x11c>
	{	
		joydir = JOYSTICK_get_direction();
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     4c2:	d1 2f       	mov	r29, r17
     4c4:	03 c0       	rjmp	.+6      	; 0x4cc <main+0x11c>
     4c6:	dc 2f       	mov	r29, r28
     4c8:	01 c0       	rjmp	.+2      	; 0x4cc <main+0x11c>
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     4ca:	d0 2f       	mov	r29, r16
			} else {
				currentRow += 1;
			}
		}
		
		OLED_move_arrow(currentRow, 20, lastRow, 20);
     4cc:	24 e1       	ldi	r18, 0x14	; 20
     4ce:	4c 2f       	mov	r20, r28
     4d0:	64 e1       	ldi	r22, 0x14	; 20
     4d2:	8d 2f       	mov	r24, r29
     4d4:	0e 94 82 03 	call	0x704	; 0x704 <OLED_move_arrow>
		buttonPressed = JOYSTICK_read_button();
     4d8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <JOYSTICK_read_button>
     4dc:	cd 2f       	mov	r28, r29
     4de:	e1 cf       	rjmp	.-62     	; 0x4a2 <main+0xf2>

000004e0 <MCP_reset>:
	MCP_reset();
}

void MCP_reset(void)
{
	PORTB &= ~(1 << PB4);
     4e0:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(0xC0);
     4e2:	80 ec       	ldi	r24, 0xC0	; 192
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     4ea:	c4 9a       	sbi	0x18, 4	; 24
     4ec:	08 95       	ret

000004ee <MCP_init>:
#include <stdlib.h>
#include "mcp.h"

void MCP_init(void)
{
	MCP_reset();
     4ee:	0e 94 70 02 	call	0x4e0	; 0x4e0 <MCP_reset>
     4f2:	08 95       	ret

000004f4 <MCP_read>:
	SPI_master_transmit(0xC0);
	PORTB |= (1 << PB4);
}

char MCP_read(char addr)
{
     4f4:	cf 93       	push	r28
     4f6:	c8 2f       	mov	r28, r24
	PORTB &= ~(1 << PB4);
     4f8:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(0x03);
     4fa:	83 e0       	ldi	r24, 0x03	; 3
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(addr);
     502:	8c 2f       	mov	r24, r28
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(0x00);
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	char data = SPDR;
     512:	8f b1       	in	r24, 0x0f	; 15
	PORTB |= (1 << PB4);
     514:	c4 9a       	sbi	0x18, 4	; 24
	return data;
}
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <MCP_write>:

void MCP_write(char addr, char data)
{
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	d8 2f       	mov	r29, r24
     520:	c6 2f       	mov	r28, r22
	PORTB &= ~(1 << PB4);
     522:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(0x02);
     524:	82 e0       	ldi	r24, 0x02	; 2
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(addr);
     52c:	8d 2f       	mov	r24, r29
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(data);
     534:	8c 2f       	mov	r24, r28
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     53c:	c4 9a       	sbi	0x18, 4	; 24
}
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	08 95       	ret

00000544 <MCP_request_to_send>:

void MCP_request_to_send(void)
{
	char command = 0b10000000;
	//command = (1 << 1);
	PORTB &= ~(1 << PB4);
     544:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(command);
     546:	80 e8       	ldi	r24, 0x80	; 128
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     54e:	c4 9a       	sbi	0x18, 4	; 24
     550:	08 95       	ret

00000552 <MCP_modify_bit>:
	MCP_modify_bit(CANCTRL, mask, data);
}


void MCP_modify_bit(char addr, char mask, char data)
{
     552:	1f 93       	push	r17
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	18 2f       	mov	r17, r24
     55a:	d6 2f       	mov	r29, r22
     55c:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB4);
     55e:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(0x05);
     560:	85 e0       	ldi	r24, 0x05	; 5
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(addr);
     568:	81 2f       	mov	r24, r17
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(mask);
     570:	8d 2f       	mov	r24, r29
     572:	90 e0       	ldi	r25, 0x00	; 0
     574:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	SPI_master_transmit(data);
     578:	8c 2f       	mov	r24, r28
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 30 04 	call	0x860	; 0x860 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     580:	c4 9a       	sbi	0x18, 4	; 24
}
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	1f 91       	pop	r17
     588:	08 95       	ret

0000058a <MCP_set_mode>:

void MCP_set_mode(OperatingMode mode)
{
	char mask = 0b11100000;
	char data = 0b00000000;
	switch (mode) {
     58a:	83 30       	cpi	r24, 0x03	; 3
     58c:	51 f0       	breq	.+20     	; 0x5a2 <MCP_set_mode+0x18>
     58e:	18 f4       	brcc	.+6      	; 0x596 <MCP_set_mode+0xc>
     590:	81 30       	cpi	r24, 0x01	; 1
     592:	69 f0       	breq	.+26     	; 0x5ae <MCP_set_mode+0x24>
     594:	04 c0       	rjmp	.+8      	; 0x59e <MCP_set_mode+0x14>
     596:	84 30       	cpi	r24, 0x04	; 4
     598:	31 f0       	breq	.+12     	; 0x5a6 <MCP_set_mode+0x1c>
     59a:	85 30       	cpi	r24, 0x05	; 5
     59c:	31 f0       	breq	.+12     	; 0x5aa <MCP_set_mode+0x20>
}

void MCP_set_mode(OperatingMode mode)
{
	char mask = 0b11100000;
	char data = 0b00000000;
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	07 c0       	rjmp	.+14     	; 0x5b0 <MCP_set_mode+0x26>
			break;
		case CONFIGURATION:
			data = 0b10000000;
			break;
		case SLEEP:
			data = 0b00100000;
     5a2:	40 e2       	ldi	r20, 0x20	; 32
			break;
     5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <MCP_set_mode+0x26>
		case LISTEN:
			data = 0b01100000;
     5a6:	40 e6       	ldi	r20, 0x60	; 96
			break;
     5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <MCP_set_mode+0x26>
		case LOOPBACK:
			data = 0b01000000;
     5aa:	40 e4       	ldi	r20, 0x40	; 64
			break;
     5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <MCP_set_mode+0x26>
	char data = 0b00000000;
	switch (mode) {
		case NORMAL:
			break;
		case CONFIGURATION:
			data = 0b10000000;
     5ae:	40 e8       	ldi	r20, 0x80	; 128
			data = 0b01000000;
			break;
		default:
			break;
	}
	MCP_modify_bit(CANCTRL, mask, data);
     5b0:	60 ee       	ldi	r22, 0xE0	; 224
     5b2:	8f e0       	ldi	r24, 0x0F	; 15
     5b4:	0e 94 a9 02 	call	0x552	; 0x552 <MCP_modify_bit>
     5b8:	08 95       	ret

000005ba <OLED_goto_line>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     5ba:	e0 e0       	ldi	r30, 0x00	; 0
     5bc:	f0 e1       	ldi	r31, 0x10	; 16
     5be:	92 e2       	ldi	r25, 0x22	; 34
     5c0:	90 83       	st	Z, r25
     5c2:	80 83       	st	Z, r24
     5c4:	87 e0       	ldi	r24, 0x07	; 7
     5c6:	80 83       	st	Z, r24
     5c8:	08 95       	ret

000005ca <OLED_clear_line>:
	OLED_write_c(0x07);
}

void OLED_clear_line(uint8_t line)
{
	OLED_goto_line(line);
     5ca:	0e 94 dd 02 	call	0x5ba	; 0x5ba <OLED_goto_line>
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     5ce:	e0 e0       	ldi	r30, 0x00	; 0
     5d0:	f0 e1       	ldi	r31, 0x10	; 16
     5d2:	81 e2       	ldi	r24, 0x21	; 33
     5d4:	80 83       	st	Z, r24
     5d6:	10 82       	st	Z, r1
     5d8:	8f e7       	ldi	r24, 0x7F	; 127
     5da:	80 83       	st	Z, r24
     5dc:	80 e8       	ldi	r24, 0x80	; 128
     5de:	90 e0       	ldi	r25, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     5e0:	e0 e0       	ldi	r30, 0x00	; 0
     5e2:	f2 e1       	ldi	r31, 0x12	; 18
     5e4:	10 82       	st	Z, r1
     5e6:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x21);
	OLED_write_c(0x00);
	OLED_write_c(0x7F);

	/* Write zeros to line */
	for (int i = 0; i < 128; i++) {
     5e8:	00 97       	sbiw	r24, 0x00	; 0
     5ea:	e1 f7       	brne	.-8      	; 0x5e4 <OLED_clear_line+0x1a>
		OLED_write_d(0x00);
	}
}
     5ec:	08 95       	ret

000005ee <OLED_pos>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     5ee:	e0 e0       	ldi	r30, 0x00	; 0
     5f0:	f0 e1       	ldi	r31, 0x10	; 16
     5f2:	92 e2       	ldi	r25, 0x22	; 34
     5f4:	90 83       	st	Z, r25
     5f6:	80 83       	st	Z, r24
     5f8:	87 e0       	ldi	r24, 0x07	; 7
     5fa:	80 83       	st	Z, r24
     5fc:	81 e2       	ldi	r24, 0x21	; 33
     5fe:	80 83       	st	Z, r24
     600:	60 83       	st	Z, r22
     602:	8f e7       	ldi	r24, 0x7F	; 127
     604:	80 83       	st	Z, r24
     606:	08 95       	ret

00000608 <OLED_reset>:
	OLED_write_c(column);
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
     608:	cf 93       	push	r28
	for (uint8_t i = 0; i < 8; i++) {
     60a:	c0 e0       	ldi	r28, 0x00	; 0
		OLED_clear_line(i);
     60c:	8c 2f       	mov	r24, r28
     60e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <OLED_clear_line>
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
	for (uint8_t i = 0; i < 8; i++) {
     612:	cf 5f       	subi	r28, 0xFF	; 255
     614:	c8 30       	cpi	r28, 0x08	; 8
     616:	d1 f7       	brne	.-12     	; 0x60c <OLED_reset+0x4>
		OLED_clear_line(i);
	}
	OLED_pos(0,0);
     618:	60 e0       	ldi	r22, 0x00	; 0
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>

	// Redraw from SRAM?
}
     620:	cf 91       	pop	r28
     622:	08 95       	ret

00000624 <OLED_init>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     624:	e0 e0       	ldi	r30, 0x00	; 0
     626:	f0 e1       	ldi	r31, 0x10	; 16
     628:	8e ea       	ldi	r24, 0xAE	; 174
     62a:	80 83       	st	Z, r24
     62c:	81 ea       	ldi	r24, 0xA1	; 161
     62e:	80 83       	st	Z, r24
     630:	8a ed       	ldi	r24, 0xDA	; 218
     632:	80 83       	st	Z, r24
     634:	82 e1       	ldi	r24, 0x12	; 18
     636:	80 83       	st	Z, r24
     638:	88 ec       	ldi	r24, 0xC8	; 200
     63a:	80 83       	st	Z, r24
     63c:	88 ea       	ldi	r24, 0xA8	; 168
     63e:	80 83       	st	Z, r24
     640:	8f e3       	ldi	r24, 0x3F	; 63
     642:	80 83       	st	Z, r24
     644:	85 ed       	ldi	r24, 0xD5	; 213
     646:	80 83       	st	Z, r24
     648:	80 e8       	ldi	r24, 0x80	; 128
     64a:	80 83       	st	Z, r24
     64c:	81 e8       	ldi	r24, 0x81	; 129
     64e:	80 83       	st	Z, r24
     650:	80 e5       	ldi	r24, 0x50	; 80
     652:	80 83       	st	Z, r24
     654:	89 ed       	ldi	r24, 0xD9	; 217
     656:	80 83       	st	Z, r24
     658:	81 e2       	ldi	r24, 0x21	; 33
     65a:	80 83       	st	Z, r24
     65c:	80 e2       	ldi	r24, 0x20	; 32
     65e:	80 83       	st	Z, r24
     660:	10 82       	st	Z, r1
     662:	8b ed       	ldi	r24, 0xDB	; 219
     664:	80 83       	st	Z, r24
     666:	80 e3       	ldi	r24, 0x30	; 48
     668:	80 83       	st	Z, r24
     66a:	8d ea       	ldi	r24, 0xAD	; 173
     66c:	80 83       	st	Z, r24
     66e:	10 82       	st	Z, r1
     670:	84 ea       	ldi	r24, 0xA4	; 164
     672:	80 83       	st	Z, r24
     674:	86 ea       	ldi	r24, 0xA6	; 166
     676:	80 83       	st	Z, r24
     678:	8f ea       	ldi	r24, 0xAF	; 175
     67a:	80 83       	st	Z, r24
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	92 e0       	ldi	r25, 0x02	; 2
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     680:	e0 e0       	ldi	r30, 0x00	; 0
     682:	f2 e1       	ldi	r31, 0x12	; 18
     684:	2f ef       	ldi	r18, 0xFF	; 255
     686:	20 83       	st	Z, r18
     688:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x00);
	OLED_write_c(0xa4); //out follows RAM content
	OLED_write_c(0xa6); //set normal display
	OLED_write_c(0xaf); // display on
	
	for (int i = 0; i < 512; i++)
     68a:	00 97       	sbiw	r24, 0x00	; 0
     68c:	e1 f7       	brne	.-8      	; 0x686 <OLED_init+0x62>
	{
		OLED_write_d(0xFF);
	}
	
	OLED_reset();
     68e:	0e 94 04 03 	call	0x608	; 0x608 <OLED_reset>
     692:	08 95       	ret

00000694 <OLED_print_string>:

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     698:	fc 01       	movw	r30, r24
     69a:	20 81       	ld	r18, Z
     69c:	22 23       	and	r18, r18
     69e:	11 f1       	breq	.+68     	; 0x6e4 <OLED_print_string+0x50>
     6a0:	dc 01       	movw	r26, r24

void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
     6a2:	40 e0       	ldi	r20, 0x00	; 0

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	50 e0       	ldi	r21, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     6a8:	c0 e0       	ldi	r28, 0x00	; 0
     6aa:	d2 e1       	ldi	r29, 0x12	; 18
     6ac:	18 c0       	rjmp	.+48     	; 0x6de <OLED_print_string+0x4a>
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
			c = pgm_read_byte_near(font[str[i]-32] + j);
     6ae:	ec 91       	ld	r30, X
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	ee 0f       	add	r30, r30
     6b4:	ff 1f       	adc	r31, r31
     6b6:	ee 0f       	add	r30, r30
     6b8:	ff 1f       	adc	r31, r31
     6ba:	e0 51       	subi	r30, 0x10	; 16
     6bc:	f0 40       	sbci	r31, 0x00	; 0
     6be:	e2 0f       	add	r30, r18
     6c0:	f3 1f       	adc	r31, r19
     6c2:	e4 91       	lpm	r30, Z
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     6c4:	e8 83       	st	Y, r30
     6c6:	2f 5f       	subi	r18, 0xFF	; 255
     6c8:	3f 4f       	sbci	r19, 0xFF	; 255
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
     6ca:	24 30       	cpi	r18, 0x04	; 4
     6cc:	31 05       	cpc	r19, r1
     6ce:	79 f7       	brne	.-34     	; 0x6ae <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
     6d0:	4f 5f       	subi	r20, 0xFF	; 255
void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     6d2:	dc 01       	movw	r26, r24
     6d4:	a4 0f       	add	r26, r20
     6d6:	b1 1d       	adc	r27, r1
     6d8:	2c 91       	ld	r18, X
     6da:	22 23       	and	r18, r18
     6dc:	19 f0       	breq	.+6      	; 0x6e4 <OLED_print_string+0x50>

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     6de:	26 2f       	mov	r18, r22
     6e0:	35 2f       	mov	r19, r21
     6e2:	e5 cf       	rjmp	.-54     	; 0x6ae <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
	}
}
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	08 95       	ret

000006ea <OLED_print_arrow>:

void OLED_print_arrow(uint8_t row, uint8_t col)
{
	OLED_pos(row, col);
     6ea:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     6ee:	e0 e0       	ldi	r30, 0x00	; 0
     6f0:	f2 e1       	ldi	r31, 0x12	; 18
     6f2:	88 e1       	ldi	r24, 0x18	; 24
     6f4:	80 83       	st	Z, r24
     6f6:	80 83       	st	Z, r24
     6f8:	9e e7       	ldi	r25, 0x7E	; 126
     6fa:	90 83       	st	Z, r25
     6fc:	9c e3       	ldi	r25, 0x3C	; 60
     6fe:	90 83       	st	Z, r25
     700:	80 83       	st	Z, r24
     702:	08 95       	ret

00000704 <OLED_move_arrow>:
	OLED_write_d(0b00111100);
	OLED_write_d(0b00011000);
}

void OLED_move_arrow(uint8_t newRow, uint8_t newCol, uint8_t currentRow, uint8_t currentCol)
{
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	c8 2f       	mov	r28, r24
     70a:	d6 2f       	mov	r29, r22
     70c:	84 2f       	mov	r24, r20
	OLED_pos(currentRow, currentCol);
     70e:	62 2f       	mov	r22, r18
     710:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     714:	e0 e0       	ldi	r30, 0x00	; 0
     716:	f2 e1       	ldi	r31, 0x12	; 18
     718:	10 82       	st	Z, r1
     71a:	10 82       	st	Z, r1
     71c:	10 82       	st	Z, r1
     71e:	10 82       	st	Z, r1
     720:	10 82       	st	Z, r1
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	
	OLED_print_arrow(newRow, newCol);
     722:	6d 2f       	mov	r22, r29
     724:	8c 2f       	mov	r24, r28
     726:	0e 94 75 03 	call	0x6ea	; 0x6ea <OLED_print_arrow>
}
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	08 95       	ret

00000730 <OLED_create_node>:


menuNode *OLED_create_node(char* name, menuNode* parent)
{
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	ec 01       	movw	r28, r24
	menuNode* ret = (menuNode*) malloc(sizeof(menuNode));
     736:	84 e1       	ldi	r24, 0x14	; 20
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 16 06 	call	0xc2c	; 0xc2c <malloc>
	ret->name = name;
     73e:	fc 01       	movw	r30, r24
     740:	d1 83       	std	Z+1, r29	; 0x01
     742:	c0 83       	st	Z, r28
	ret->parent = NULL;
     744:	13 82       	std	Z+3, r1	; 0x03
     746:	12 82       	std	Z+2, r1	; 0x02
	return ret;
}
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	08 95       	ret

0000074e <OLED_generate_menu>:

// Implement function for freeing memory

menuNode *OLED_generate_menu(void)
{	
     74e:	af 92       	push	r10
     750:	bf 92       	push	r11
     752:	cf 92       	push	r12
     754:	df 92       	push	r13
     756:	ef 92       	push	r14
     758:	ff 92       	push	r15
     75a:	0f 93       	push	r16
     75c:	1f 93       	push	r17
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
	menuNode *mainmenu = OLED_create_node("MAIN MENU", NULL);
     762:	60 e0       	ldi	r22, 0x00	; 0
     764:	70 e0       	ldi	r23, 0x00	; 0
     766:	85 ef       	ldi	r24, 0xF5	; 245
     768:	91 e0       	ldi	r25, 0x01	; 1
     76a:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
     76e:	ec 01       	movw	r28, r24
	menuNode *highscores = OLED_create_node("Highscores", mainmenu);
     770:	bc 01       	movw	r22, r24
     772:	8f ef       	ldi	r24, 0xFF	; 255
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
     77a:	6c 01       	movw	r12, r24
	menuNode *playgame = OLED_create_node("Start new game", mainmenu);
     77c:	be 01       	movw	r22, r28
     77e:	8a e0       	ldi	r24, 0x0A	; 10
     780:	92 e0       	ldi	r25, 0x02	; 2
     782:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
     786:	5c 01       	movw	r10, r24
	menuNode *debugging = OLED_create_node("Debugging", mainmenu);
     788:	be 01       	movw	r22, r28
     78a:	89 e1       	ldi	r24, 0x19	; 25
     78c:	92 e0       	ldi	r25, 0x02	; 2
     78e:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
     792:	8c 01       	movw	r16, r24
	menuNode *calibrate = OLED_create_node("Calibrate", mainmenu);
     794:	be 01       	movw	r22, r28
     796:	83 e2       	ldi	r24, 0x23	; 35
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
     79e:	7c 01       	movw	r14, r24
	menuNode *difficulty = OLED_create_node("Difficulty", mainmenu);
     7a0:	be 01       	movw	r22, r28
     7a2:	8d e2       	ldi	r24, 0x2D	; 45
     7a4:	92 e0       	ldi	r25, 0x02	; 2
     7a6:	0e 94 98 03 	call	0x730	; 0x730 <OLED_create_node>
	calibrate->parent = mainmenu;
	difficulty->parent = mainmenu;
	debugging->parent = mainmenu;
	*/
	
	mainmenu->children[1] = playgame;
     7aa:	bf 82       	std	Y+7, r11	; 0x07
     7ac:	ae 82       	std	Y+6, r10	; 0x06
	mainmenu->children[2] = highscores;
     7ae:	d9 86       	std	Y+9, r13	; 0x09
     7b0:	c8 86       	std	Y+8, r12	; 0x08
	mainmenu->children[3] = difficulty;
     7b2:	9b 87       	std	Y+11, r25	; 0x0b
     7b4:	8a 87       	std	Y+10, r24	; 0x0a
	mainmenu->children[4] = calibrate;
     7b6:	fd 86       	std	Y+13, r15	; 0x0d
     7b8:	ec 86       	std	Y+12, r14	; 0x0c
	mainmenu->children[5] = debugging;
     7ba:	1f 87       	std	Y+15, r17	; 0x0f
     7bc:	0e 87       	std	Y+14, r16	; 0x0e
	
	return mainmenu;
}
     7be:	ce 01       	movw	r24, r28
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	1f 91       	pop	r17
     7c6:	0f 91       	pop	r16
     7c8:	ff 90       	pop	r15
     7ca:	ef 90       	pop	r14
     7cc:	df 90       	pop	r13
     7ce:	cf 90       	pop	r12
     7d0:	bf 90       	pop	r11
     7d2:	af 90       	pop	r10
     7d4:	08 95       	ret

000007d6 <OLED_print_menu>:

void OLED_print_menu(menuNode *node)
{
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	ec 01       	movw	r28, r24
	OLED_pos(0,50);
     7dc:	62 e3       	ldi	r22, 0x32	; 50
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->name);
     7e4:	88 81       	ld	r24, Y
     7e6:	99 81       	ldd	r25, Y+1	; 0x01
     7e8:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
	//printf("%s\n", node->name);
	OLED_pos(1,50);
     7ec:	62 e3       	ldi	r22, 0x32	; 50
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->children[1]->name);
     7f4:	ee 81       	ldd	r30, Y+6	; 0x06
     7f6:	ff 81       	ldd	r31, Y+7	; 0x07
     7f8:	80 81       	ld	r24, Z
     7fa:	91 81       	ldd	r25, Z+1	; 0x01
     7fc:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
	OLED_pos(2,50);
     800:	62 e3       	ldi	r22, 0x32	; 50
     802:	82 e0       	ldi	r24, 0x02	; 2
     804:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->children[2]->name);
     808:	e8 85       	ldd	r30, Y+8	; 0x08
     80a:	f9 85       	ldd	r31, Y+9	; 0x09
     80c:	80 81       	ld	r24, Z
     80e:	91 81       	ldd	r25, Z+1	; 0x01
     810:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
	OLED_pos(3,50);
     814:	62 e3       	ldi	r22, 0x32	; 50
     816:	83 e0       	ldi	r24, 0x03	; 3
     818:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->children[3]->name);
     81c:	ea 85       	ldd	r30, Y+10	; 0x0a
     81e:	fb 85       	ldd	r31, Y+11	; 0x0b
     820:	80 81       	ld	r24, Z
     822:	91 81       	ldd	r25, Z+1	; 0x01
     824:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
	OLED_pos(4,50);
     828:	62 e3       	ldi	r22, 0x32	; 50
     82a:	84 e0       	ldi	r24, 0x04	; 4
     82c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->children[4]->name);
     830:	ec 85       	ldd	r30, Y+12	; 0x0c
     832:	fd 85       	ldd	r31, Y+13	; 0x0d
     834:	80 81       	ld	r24, Z
     836:	91 81       	ldd	r25, Z+1	; 0x01
     838:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
	OLED_pos(5,50);
     83c:	62 e3       	ldi	r22, 0x32	; 50
     83e:	85 e0       	ldi	r24, 0x05	; 5
     840:	0e 94 f7 02 	call	0x5ee	; 0x5ee <OLED_pos>
	OLED_print_string(node->children[5]->name);
     844:	ee 85       	ldd	r30, Y+14	; 0x0e
     846:	ff 85       	ldd	r31, Y+15	; 0x0f
     848:	80 81       	ld	r24, Z
     84a:	91 81       	ldd	r25, Z+1	; 0x01
     84c:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_print_string>
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	08 95       	ret

00000856 <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB4)|(1 << PB5)|(1 << PB7);
     856:	80 eb       	ldi	r24, 0xB0	; 176
     858:	87 bb       	out	0x17, r24	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
     85a:	81 e5       	ldi	r24, 0x51	; 81
     85c:	8d b9       	out	0x0d, r24	; 13
     85e:	08 95       	ret

00000860 <SPI_master_transmit>:
}

void SPI_master_transmit(char cData)
{
	/* Start transmission */
	SPDR = cData;
     860:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
     862:	77 9b       	sbis	0x0e, 7	; 14
     864:	fe cf       	rjmp	.-4      	; 0x862 <SPI_master_transmit+0x2>
		;
	}
	
	// Interrupt here?
}
     866:	08 95       	ret

00000868 <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
     868:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     86a:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
     86c:	88 e1       	ldi	r24, 0x18	; 24
     86e:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ10);
     870:	8e e8       	ldi	r24, 0x8E	; 142
     872:	80 bd       	out	0x20, r24	; 32
     874:	08 95       	ret

00000876 <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
     876:	5d 9b       	sbis	0x0b, 5	; 11
     878:	fe cf       	rjmp	.-4      	; 0x876 <USART_transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     87a:	8c b9       	out	0x0c, r24	; 12
     87c:	08 95       	ret

0000087e <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
     87e:	5f 9b       	sbis	0x0b, 7	; 11
     880:	fe cf       	rjmp	.-4      	; 0x87e <USART_receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
     882:	8c b1       	in	r24, 0x0c	; 12
}
     884:	08 95       	ret

00000886 <__divsf3>:
     886:	0c d0       	rcall	.+24     	; 0x8a0 <__divsf3x>
     888:	eb c0       	rjmp	.+470    	; 0xa60 <__fp_round>
     88a:	e3 d0       	rcall	.+454    	; 0xa52 <__fp_pscB>
     88c:	40 f0       	brcs	.+16     	; 0x89e <__divsf3+0x18>
     88e:	da d0       	rcall	.+436    	; 0xa44 <__fp_pscA>
     890:	30 f0       	brcs	.+12     	; 0x89e <__divsf3+0x18>
     892:	21 f4       	brne	.+8      	; 0x89c <__divsf3+0x16>
     894:	5f 3f       	cpi	r21, 0xFF	; 255
     896:	19 f0       	breq	.+6      	; 0x89e <__divsf3+0x18>
     898:	cc c0       	rjmp	.+408    	; 0xa32 <__fp_inf>
     89a:	51 11       	cpse	r21, r1
     89c:	15 c1       	rjmp	.+554    	; 0xac8 <__fp_szero>
     89e:	cf c0       	rjmp	.+414    	; 0xa3e <__fp_nan>

000008a0 <__divsf3x>:
     8a0:	f0 d0       	rcall	.+480    	; 0xa82 <__fp_split3>
     8a2:	98 f3       	brcs	.-26     	; 0x88a <__divsf3+0x4>

000008a4 <__divsf3_pse>:
     8a4:	99 23       	and	r25, r25
     8a6:	c9 f3       	breq	.-14     	; 0x89a <__divsf3+0x14>
     8a8:	55 23       	and	r21, r21
     8aa:	b1 f3       	breq	.-20     	; 0x898 <__divsf3+0x12>
     8ac:	95 1b       	sub	r25, r21
     8ae:	55 0b       	sbc	r21, r21
     8b0:	bb 27       	eor	r27, r27
     8b2:	aa 27       	eor	r26, r26
     8b4:	62 17       	cp	r22, r18
     8b6:	73 07       	cpc	r23, r19
     8b8:	84 07       	cpc	r24, r20
     8ba:	38 f0       	brcs	.+14     	; 0x8ca <__divsf3_pse+0x26>
     8bc:	9f 5f       	subi	r25, 0xFF	; 255
     8be:	5f 4f       	sbci	r21, 0xFF	; 255
     8c0:	22 0f       	add	r18, r18
     8c2:	33 1f       	adc	r19, r19
     8c4:	44 1f       	adc	r20, r20
     8c6:	aa 1f       	adc	r26, r26
     8c8:	a9 f3       	breq	.-22     	; 0x8b4 <__divsf3_pse+0x10>
     8ca:	33 d0       	rcall	.+102    	; 0x932 <__divsf3_pse+0x8e>
     8cc:	0e 2e       	mov	r0, r30
     8ce:	3a f0       	brmi	.+14     	; 0x8de <__divsf3_pse+0x3a>
     8d0:	e0 e8       	ldi	r30, 0x80	; 128
     8d2:	30 d0       	rcall	.+96     	; 0x934 <__divsf3_pse+0x90>
     8d4:	91 50       	subi	r25, 0x01	; 1
     8d6:	50 40       	sbci	r21, 0x00	; 0
     8d8:	e6 95       	lsr	r30
     8da:	00 1c       	adc	r0, r0
     8dc:	ca f7       	brpl	.-14     	; 0x8d0 <__divsf3_pse+0x2c>
     8de:	29 d0       	rcall	.+82     	; 0x932 <__divsf3_pse+0x8e>
     8e0:	fe 2f       	mov	r31, r30
     8e2:	27 d0       	rcall	.+78     	; 0x932 <__divsf3_pse+0x8e>
     8e4:	66 0f       	add	r22, r22
     8e6:	77 1f       	adc	r23, r23
     8e8:	88 1f       	adc	r24, r24
     8ea:	bb 1f       	adc	r27, r27
     8ec:	26 17       	cp	r18, r22
     8ee:	37 07       	cpc	r19, r23
     8f0:	48 07       	cpc	r20, r24
     8f2:	ab 07       	cpc	r26, r27
     8f4:	b0 e8       	ldi	r27, 0x80	; 128
     8f6:	09 f0       	breq	.+2      	; 0x8fa <__divsf3_pse+0x56>
     8f8:	bb 0b       	sbc	r27, r27
     8fa:	80 2d       	mov	r24, r0
     8fc:	bf 01       	movw	r22, r30
     8fe:	ff 27       	eor	r31, r31
     900:	93 58       	subi	r25, 0x83	; 131
     902:	5f 4f       	sbci	r21, 0xFF	; 255
     904:	2a f0       	brmi	.+10     	; 0x910 <__divsf3_pse+0x6c>
     906:	9e 3f       	cpi	r25, 0xFE	; 254
     908:	51 05       	cpc	r21, r1
     90a:	68 f0       	brcs	.+26     	; 0x926 <__divsf3_pse+0x82>
     90c:	92 c0       	rjmp	.+292    	; 0xa32 <__fp_inf>
     90e:	dc c0       	rjmp	.+440    	; 0xac8 <__fp_szero>
     910:	5f 3f       	cpi	r21, 0xFF	; 255
     912:	ec f3       	brlt	.-6      	; 0x90e <__divsf3_pse+0x6a>
     914:	98 3e       	cpi	r25, 0xE8	; 232
     916:	dc f3       	brlt	.-10     	; 0x90e <__divsf3_pse+0x6a>
     918:	86 95       	lsr	r24
     91a:	77 95       	ror	r23
     91c:	67 95       	ror	r22
     91e:	b7 95       	ror	r27
     920:	f7 95       	ror	r31
     922:	9f 5f       	subi	r25, 0xFF	; 255
     924:	c9 f7       	brne	.-14     	; 0x918 <__divsf3_pse+0x74>
     926:	88 0f       	add	r24, r24
     928:	91 1d       	adc	r25, r1
     92a:	96 95       	lsr	r25
     92c:	87 95       	ror	r24
     92e:	97 f9       	bld	r25, 7
     930:	08 95       	ret
     932:	e1 e0       	ldi	r30, 0x01	; 1
     934:	66 0f       	add	r22, r22
     936:	77 1f       	adc	r23, r23
     938:	88 1f       	adc	r24, r24
     93a:	bb 1f       	adc	r27, r27
     93c:	62 17       	cp	r22, r18
     93e:	73 07       	cpc	r23, r19
     940:	84 07       	cpc	r24, r20
     942:	ba 07       	cpc	r27, r26
     944:	20 f0       	brcs	.+8      	; 0x94e <__divsf3_pse+0xaa>
     946:	62 1b       	sub	r22, r18
     948:	73 0b       	sbc	r23, r19
     94a:	84 0b       	sbc	r24, r20
     94c:	ba 0b       	sbc	r27, r26
     94e:	ee 1f       	adc	r30, r30
     950:	88 f7       	brcc	.-30     	; 0x934 <__divsf3_pse+0x90>
     952:	e0 95       	com	r30
     954:	08 95       	ret

00000956 <__fixsfsi>:
     956:	04 d0       	rcall	.+8      	; 0x960 <__fixunssfsi>
     958:	68 94       	set
     95a:	b1 11       	cpse	r27, r1
     95c:	b5 c0       	rjmp	.+362    	; 0xac8 <__fp_szero>
     95e:	08 95       	ret

00000960 <__fixunssfsi>:
     960:	98 d0       	rcall	.+304    	; 0xa92 <__fp_splitA>
     962:	88 f0       	brcs	.+34     	; 0x986 <__fixunssfsi+0x26>
     964:	9f 57       	subi	r25, 0x7F	; 127
     966:	90 f0       	brcs	.+36     	; 0x98c <__fixunssfsi+0x2c>
     968:	b9 2f       	mov	r27, r25
     96a:	99 27       	eor	r25, r25
     96c:	b7 51       	subi	r27, 0x17	; 23
     96e:	a0 f0       	brcs	.+40     	; 0x998 <__fixunssfsi+0x38>
     970:	d1 f0       	breq	.+52     	; 0x9a6 <__fixunssfsi+0x46>
     972:	66 0f       	add	r22, r22
     974:	77 1f       	adc	r23, r23
     976:	88 1f       	adc	r24, r24
     978:	99 1f       	adc	r25, r25
     97a:	1a f0       	brmi	.+6      	; 0x982 <__fixunssfsi+0x22>
     97c:	ba 95       	dec	r27
     97e:	c9 f7       	brne	.-14     	; 0x972 <__fixunssfsi+0x12>
     980:	12 c0       	rjmp	.+36     	; 0x9a6 <__fixunssfsi+0x46>
     982:	b1 30       	cpi	r27, 0x01	; 1
     984:	81 f0       	breq	.+32     	; 0x9a6 <__fixunssfsi+0x46>
     986:	9f d0       	rcall	.+318    	; 0xac6 <__fp_zero>
     988:	b1 e0       	ldi	r27, 0x01	; 1
     98a:	08 95       	ret
     98c:	9c c0       	rjmp	.+312    	; 0xac6 <__fp_zero>
     98e:	67 2f       	mov	r22, r23
     990:	78 2f       	mov	r23, r24
     992:	88 27       	eor	r24, r24
     994:	b8 5f       	subi	r27, 0xF8	; 248
     996:	39 f0       	breq	.+14     	; 0x9a6 <__fixunssfsi+0x46>
     998:	b9 3f       	cpi	r27, 0xF9	; 249
     99a:	cc f3       	brlt	.-14     	; 0x98e <__fixunssfsi+0x2e>
     99c:	86 95       	lsr	r24
     99e:	77 95       	ror	r23
     9a0:	67 95       	ror	r22
     9a2:	b3 95       	inc	r27
     9a4:	d9 f7       	brne	.-10     	; 0x99c <__fixunssfsi+0x3c>
     9a6:	3e f4       	brtc	.+14     	; 0x9b6 <__fixunssfsi+0x56>
     9a8:	90 95       	com	r25
     9aa:	80 95       	com	r24
     9ac:	70 95       	com	r23
     9ae:	61 95       	neg	r22
     9b0:	7f 4f       	sbci	r23, 0xFF	; 255
     9b2:	8f 4f       	sbci	r24, 0xFF	; 255
     9b4:	9f 4f       	sbci	r25, 0xFF	; 255
     9b6:	08 95       	ret

000009b8 <__floatunsisf>:
     9b8:	e8 94       	clt
     9ba:	09 c0       	rjmp	.+18     	; 0x9ce <__floatsisf+0x12>

000009bc <__floatsisf>:
     9bc:	97 fb       	bst	r25, 7
     9be:	3e f4       	brtc	.+14     	; 0x9ce <__floatsisf+0x12>
     9c0:	90 95       	com	r25
     9c2:	80 95       	com	r24
     9c4:	70 95       	com	r23
     9c6:	61 95       	neg	r22
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	8f 4f       	sbci	r24, 0xFF	; 255
     9cc:	9f 4f       	sbci	r25, 0xFF	; 255
     9ce:	99 23       	and	r25, r25
     9d0:	a9 f0       	breq	.+42     	; 0x9fc <__floatsisf+0x40>
     9d2:	f9 2f       	mov	r31, r25
     9d4:	96 e9       	ldi	r25, 0x96	; 150
     9d6:	bb 27       	eor	r27, r27
     9d8:	93 95       	inc	r25
     9da:	f6 95       	lsr	r31
     9dc:	87 95       	ror	r24
     9de:	77 95       	ror	r23
     9e0:	67 95       	ror	r22
     9e2:	b7 95       	ror	r27
     9e4:	f1 11       	cpse	r31, r1
     9e6:	f8 cf       	rjmp	.-16     	; 0x9d8 <__floatsisf+0x1c>
     9e8:	fa f4       	brpl	.+62     	; 0xa28 <__floatsisf+0x6c>
     9ea:	bb 0f       	add	r27, r27
     9ec:	11 f4       	brne	.+4      	; 0x9f2 <__floatsisf+0x36>
     9ee:	60 ff       	sbrs	r22, 0
     9f0:	1b c0       	rjmp	.+54     	; 0xa28 <__floatsisf+0x6c>
     9f2:	6f 5f       	subi	r22, 0xFF	; 255
     9f4:	7f 4f       	sbci	r23, 0xFF	; 255
     9f6:	8f 4f       	sbci	r24, 0xFF	; 255
     9f8:	9f 4f       	sbci	r25, 0xFF	; 255
     9fa:	16 c0       	rjmp	.+44     	; 0xa28 <__floatsisf+0x6c>
     9fc:	88 23       	and	r24, r24
     9fe:	11 f0       	breq	.+4      	; 0xa04 <__floatsisf+0x48>
     a00:	96 e9       	ldi	r25, 0x96	; 150
     a02:	11 c0       	rjmp	.+34     	; 0xa26 <__floatsisf+0x6a>
     a04:	77 23       	and	r23, r23
     a06:	21 f0       	breq	.+8      	; 0xa10 <__floatsisf+0x54>
     a08:	9e e8       	ldi	r25, 0x8E	; 142
     a0a:	87 2f       	mov	r24, r23
     a0c:	76 2f       	mov	r23, r22
     a0e:	05 c0       	rjmp	.+10     	; 0xa1a <__floatsisf+0x5e>
     a10:	66 23       	and	r22, r22
     a12:	71 f0       	breq	.+28     	; 0xa30 <__floatsisf+0x74>
     a14:	96 e8       	ldi	r25, 0x86	; 134
     a16:	86 2f       	mov	r24, r22
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	2a f0       	brmi	.+10     	; 0xa28 <__floatsisf+0x6c>
     a1e:	9a 95       	dec	r25
     a20:	66 0f       	add	r22, r22
     a22:	77 1f       	adc	r23, r23
     a24:	88 1f       	adc	r24, r24
     a26:	da f7       	brpl	.-10     	; 0xa1e <__floatsisf+0x62>
     a28:	88 0f       	add	r24, r24
     a2a:	96 95       	lsr	r25
     a2c:	87 95       	ror	r24
     a2e:	97 f9       	bld	r25, 7
     a30:	08 95       	ret

00000a32 <__fp_inf>:
     a32:	97 f9       	bld	r25, 7
     a34:	9f 67       	ori	r25, 0x7F	; 127
     a36:	80 e8       	ldi	r24, 0x80	; 128
     a38:	70 e0       	ldi	r23, 0x00	; 0
     a3a:	60 e0       	ldi	r22, 0x00	; 0
     a3c:	08 95       	ret

00000a3e <__fp_nan>:
     a3e:	9f ef       	ldi	r25, 0xFF	; 255
     a40:	80 ec       	ldi	r24, 0xC0	; 192
     a42:	08 95       	ret

00000a44 <__fp_pscA>:
     a44:	00 24       	eor	r0, r0
     a46:	0a 94       	dec	r0
     a48:	16 16       	cp	r1, r22
     a4a:	17 06       	cpc	r1, r23
     a4c:	18 06       	cpc	r1, r24
     a4e:	09 06       	cpc	r0, r25
     a50:	08 95       	ret

00000a52 <__fp_pscB>:
     a52:	00 24       	eor	r0, r0
     a54:	0a 94       	dec	r0
     a56:	12 16       	cp	r1, r18
     a58:	13 06       	cpc	r1, r19
     a5a:	14 06       	cpc	r1, r20
     a5c:	05 06       	cpc	r0, r21
     a5e:	08 95       	ret

00000a60 <__fp_round>:
     a60:	09 2e       	mov	r0, r25
     a62:	03 94       	inc	r0
     a64:	00 0c       	add	r0, r0
     a66:	11 f4       	brne	.+4      	; 0xa6c <__fp_round+0xc>
     a68:	88 23       	and	r24, r24
     a6a:	52 f0       	brmi	.+20     	; 0xa80 <__fp_round+0x20>
     a6c:	bb 0f       	add	r27, r27
     a6e:	40 f4       	brcc	.+16     	; 0xa80 <__fp_round+0x20>
     a70:	bf 2b       	or	r27, r31
     a72:	11 f4       	brne	.+4      	; 0xa78 <__fp_round+0x18>
     a74:	60 ff       	sbrs	r22, 0
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <__fp_round+0x20>
     a78:	6f 5f       	subi	r22, 0xFF	; 255
     a7a:	7f 4f       	sbci	r23, 0xFF	; 255
     a7c:	8f 4f       	sbci	r24, 0xFF	; 255
     a7e:	9f 4f       	sbci	r25, 0xFF	; 255
     a80:	08 95       	ret

00000a82 <__fp_split3>:
     a82:	57 fd       	sbrc	r21, 7
     a84:	90 58       	subi	r25, 0x80	; 128
     a86:	44 0f       	add	r20, r20
     a88:	55 1f       	adc	r21, r21
     a8a:	59 f0       	breq	.+22     	; 0xaa2 <__fp_splitA+0x10>
     a8c:	5f 3f       	cpi	r21, 0xFF	; 255
     a8e:	71 f0       	breq	.+28     	; 0xaac <__fp_splitA+0x1a>
     a90:	47 95       	ror	r20

00000a92 <__fp_splitA>:
     a92:	88 0f       	add	r24, r24
     a94:	97 fb       	bst	r25, 7
     a96:	99 1f       	adc	r25, r25
     a98:	61 f0       	breq	.+24     	; 0xab2 <__fp_splitA+0x20>
     a9a:	9f 3f       	cpi	r25, 0xFF	; 255
     a9c:	79 f0       	breq	.+30     	; 0xabc <__fp_splitA+0x2a>
     a9e:	87 95       	ror	r24
     aa0:	08 95       	ret
     aa2:	12 16       	cp	r1, r18
     aa4:	13 06       	cpc	r1, r19
     aa6:	14 06       	cpc	r1, r20
     aa8:	55 1f       	adc	r21, r21
     aaa:	f2 cf       	rjmp	.-28     	; 0xa90 <__fp_split3+0xe>
     aac:	46 95       	lsr	r20
     aae:	f1 df       	rcall	.-30     	; 0xa92 <__fp_splitA>
     ab0:	08 c0       	rjmp	.+16     	; 0xac2 <__fp_splitA+0x30>
     ab2:	16 16       	cp	r1, r22
     ab4:	17 06       	cpc	r1, r23
     ab6:	18 06       	cpc	r1, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	f1 cf       	rjmp	.-30     	; 0xa9e <__fp_splitA+0xc>
     abc:	86 95       	lsr	r24
     abe:	71 05       	cpc	r23, r1
     ac0:	61 05       	cpc	r22, r1
     ac2:	08 94       	sec
     ac4:	08 95       	ret

00000ac6 <__fp_zero>:
     ac6:	e8 94       	clt

00000ac8 <__fp_szero>:
     ac8:	bb 27       	eor	r27, r27
     aca:	66 27       	eor	r22, r22
     acc:	77 27       	eor	r23, r23
     ace:	cb 01       	movw	r24, r22
     ad0:	97 f9       	bld	r25, 7
     ad2:	08 95       	ret

00000ad4 <__mulsf3>:
     ad4:	0b d0       	rcall	.+22     	; 0xaec <__mulsf3x>
     ad6:	c4 cf       	rjmp	.-120    	; 0xa60 <__fp_round>
     ad8:	b5 df       	rcall	.-150    	; 0xa44 <__fp_pscA>
     ada:	28 f0       	brcs	.+10     	; 0xae6 <__mulsf3+0x12>
     adc:	ba df       	rcall	.-140    	; 0xa52 <__fp_pscB>
     ade:	18 f0       	brcs	.+6      	; 0xae6 <__mulsf3+0x12>
     ae0:	95 23       	and	r25, r21
     ae2:	09 f0       	breq	.+2      	; 0xae6 <__mulsf3+0x12>
     ae4:	a6 cf       	rjmp	.-180    	; 0xa32 <__fp_inf>
     ae6:	ab cf       	rjmp	.-170    	; 0xa3e <__fp_nan>
     ae8:	11 24       	eor	r1, r1
     aea:	ee cf       	rjmp	.-36     	; 0xac8 <__fp_szero>

00000aec <__mulsf3x>:
     aec:	ca df       	rcall	.-108    	; 0xa82 <__fp_split3>
     aee:	a0 f3       	brcs	.-24     	; 0xad8 <__mulsf3+0x4>

00000af0 <__mulsf3_pse>:
     af0:	95 9f       	mul	r25, r21
     af2:	d1 f3       	breq	.-12     	; 0xae8 <__mulsf3+0x14>
     af4:	95 0f       	add	r25, r21
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	55 1f       	adc	r21, r21
     afa:	62 9f       	mul	r22, r18
     afc:	f0 01       	movw	r30, r0
     afe:	72 9f       	mul	r23, r18
     b00:	bb 27       	eor	r27, r27
     b02:	f0 0d       	add	r31, r0
     b04:	b1 1d       	adc	r27, r1
     b06:	63 9f       	mul	r22, r19
     b08:	aa 27       	eor	r26, r26
     b0a:	f0 0d       	add	r31, r0
     b0c:	b1 1d       	adc	r27, r1
     b0e:	aa 1f       	adc	r26, r26
     b10:	64 9f       	mul	r22, r20
     b12:	66 27       	eor	r22, r22
     b14:	b0 0d       	add	r27, r0
     b16:	a1 1d       	adc	r26, r1
     b18:	66 1f       	adc	r22, r22
     b1a:	82 9f       	mul	r24, r18
     b1c:	22 27       	eor	r18, r18
     b1e:	b0 0d       	add	r27, r0
     b20:	a1 1d       	adc	r26, r1
     b22:	62 1f       	adc	r22, r18
     b24:	73 9f       	mul	r23, r19
     b26:	b0 0d       	add	r27, r0
     b28:	a1 1d       	adc	r26, r1
     b2a:	62 1f       	adc	r22, r18
     b2c:	83 9f       	mul	r24, r19
     b2e:	a0 0d       	add	r26, r0
     b30:	61 1d       	adc	r22, r1
     b32:	22 1f       	adc	r18, r18
     b34:	74 9f       	mul	r23, r20
     b36:	33 27       	eor	r19, r19
     b38:	a0 0d       	add	r26, r0
     b3a:	61 1d       	adc	r22, r1
     b3c:	23 1f       	adc	r18, r19
     b3e:	84 9f       	mul	r24, r20
     b40:	60 0d       	add	r22, r0
     b42:	21 1d       	adc	r18, r1
     b44:	82 2f       	mov	r24, r18
     b46:	76 2f       	mov	r23, r22
     b48:	6a 2f       	mov	r22, r26
     b4a:	11 24       	eor	r1, r1
     b4c:	9f 57       	subi	r25, 0x7F	; 127
     b4e:	50 40       	sbci	r21, 0x00	; 0
     b50:	8a f0       	brmi	.+34     	; 0xb74 <__mulsf3_pse+0x84>
     b52:	e1 f0       	breq	.+56     	; 0xb8c <__mulsf3_pse+0x9c>
     b54:	88 23       	and	r24, r24
     b56:	4a f0       	brmi	.+18     	; 0xb6a <__mulsf3_pse+0x7a>
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	bb 1f       	adc	r27, r27
     b5e:	66 1f       	adc	r22, r22
     b60:	77 1f       	adc	r23, r23
     b62:	88 1f       	adc	r24, r24
     b64:	91 50       	subi	r25, 0x01	; 1
     b66:	50 40       	sbci	r21, 0x00	; 0
     b68:	a9 f7       	brne	.-22     	; 0xb54 <__mulsf3_pse+0x64>
     b6a:	9e 3f       	cpi	r25, 0xFE	; 254
     b6c:	51 05       	cpc	r21, r1
     b6e:	70 f0       	brcs	.+28     	; 0xb8c <__mulsf3_pse+0x9c>
     b70:	60 cf       	rjmp	.-320    	; 0xa32 <__fp_inf>
     b72:	aa cf       	rjmp	.-172    	; 0xac8 <__fp_szero>
     b74:	5f 3f       	cpi	r21, 0xFF	; 255
     b76:	ec f3       	brlt	.-6      	; 0xb72 <__mulsf3_pse+0x82>
     b78:	98 3e       	cpi	r25, 0xE8	; 232
     b7a:	dc f3       	brlt	.-10     	; 0xb72 <__mulsf3_pse+0x82>
     b7c:	86 95       	lsr	r24
     b7e:	77 95       	ror	r23
     b80:	67 95       	ror	r22
     b82:	b7 95       	ror	r27
     b84:	f7 95       	ror	r31
     b86:	e7 95       	ror	r30
     b88:	9f 5f       	subi	r25, 0xFF	; 255
     b8a:	c1 f7       	brne	.-16     	; 0xb7c <__mulsf3_pse+0x8c>
     b8c:	fe 2b       	or	r31, r30
     b8e:	88 0f       	add	r24, r24
     b90:	91 1d       	adc	r25, r1
     b92:	96 95       	lsr	r25
     b94:	87 95       	ror	r24
     b96:	97 f9       	bld	r25, 7
     b98:	08 95       	ret

00000b9a <round>:
     b9a:	7b df       	rcall	.-266    	; 0xa92 <__fp_splitA>
     b9c:	e0 f0       	brcs	.+56     	; 0xbd6 <round+0x3c>
     b9e:	9e 37       	cpi	r25, 0x7E	; 126
     ba0:	d8 f0       	brcs	.+54     	; 0xbd8 <round+0x3e>
     ba2:	96 39       	cpi	r25, 0x96	; 150
     ba4:	b8 f4       	brcc	.+46     	; 0xbd4 <round+0x3a>
     ba6:	9e 38       	cpi	r25, 0x8E	; 142
     ba8:	48 f4       	brcc	.+18     	; 0xbbc <round+0x22>
     baa:	67 2f       	mov	r22, r23
     bac:	78 2f       	mov	r23, r24
     bae:	88 27       	eor	r24, r24
     bb0:	98 5f       	subi	r25, 0xF8	; 248
     bb2:	f9 cf       	rjmp	.-14     	; 0xba6 <round+0xc>
     bb4:	86 95       	lsr	r24
     bb6:	77 95       	ror	r23
     bb8:	67 95       	ror	r22
     bba:	93 95       	inc	r25
     bbc:	95 39       	cpi	r25, 0x95	; 149
     bbe:	d0 f3       	brcs	.-12     	; 0xbb4 <round+0x1a>
     bc0:	b6 2f       	mov	r27, r22
     bc2:	b1 70       	andi	r27, 0x01	; 1
     bc4:	6b 0f       	add	r22, r27
     bc6:	71 1d       	adc	r23, r1
     bc8:	81 1d       	adc	r24, r1
     bca:	20 f4       	brcc	.+8      	; 0xbd4 <round+0x3a>
     bcc:	87 95       	ror	r24
     bce:	77 95       	ror	r23
     bd0:	67 95       	ror	r22
     bd2:	93 95       	inc	r25
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <__fp_mintl>
     bd6:	1c c0       	rjmp	.+56     	; 0xc10 <__fp_mpack>
     bd8:	77 cf       	rjmp	.-274    	; 0xac8 <__fp_szero>

00000bda <__fp_mintl>:
     bda:	88 23       	and	r24, r24
     bdc:	71 f4       	brne	.+28     	; 0xbfa <__fp_mintl+0x20>
     bde:	77 23       	and	r23, r23
     be0:	21 f0       	breq	.+8      	; 0xbea <__fp_mintl+0x10>
     be2:	98 50       	subi	r25, 0x08	; 8
     be4:	87 2b       	or	r24, r23
     be6:	76 2f       	mov	r23, r22
     be8:	07 c0       	rjmp	.+14     	; 0xbf8 <__fp_mintl+0x1e>
     bea:	66 23       	and	r22, r22
     bec:	11 f4       	brne	.+4      	; 0xbf2 <__fp_mintl+0x18>
     bee:	99 27       	eor	r25, r25
     bf0:	0d c0       	rjmp	.+26     	; 0xc0c <__fp_mintl+0x32>
     bf2:	90 51       	subi	r25, 0x10	; 16
     bf4:	86 2b       	or	r24, r22
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	60 e0       	ldi	r22, 0x00	; 0
     bfa:	2a f0       	brmi	.+10     	; 0xc06 <__fp_mintl+0x2c>
     bfc:	9a 95       	dec	r25
     bfe:	66 0f       	add	r22, r22
     c00:	77 1f       	adc	r23, r23
     c02:	88 1f       	adc	r24, r24
     c04:	da f7       	brpl	.-10     	; 0xbfc <__fp_mintl+0x22>
     c06:	88 0f       	add	r24, r24
     c08:	96 95       	lsr	r25
     c0a:	87 95       	ror	r24
     c0c:	97 f9       	bld	r25, 7
     c0e:	08 95       	ret

00000c10 <__fp_mpack>:
     c10:	9f 3f       	cpi	r25, 0xFF	; 255
     c12:	31 f0       	breq	.+12     	; 0xc20 <__fp_mpack_finite+0xc>

00000c14 <__fp_mpack_finite>:
     c14:	91 50       	subi	r25, 0x01	; 1
     c16:	20 f4       	brcc	.+8      	; 0xc20 <__fp_mpack_finite+0xc>
     c18:	87 95       	ror	r24
     c1a:	77 95       	ror	r23
     c1c:	67 95       	ror	r22
     c1e:	b7 95       	ror	r27
     c20:	88 0f       	add	r24, r24
     c22:	91 1d       	adc	r25, r1
     c24:	96 95       	lsr	r25
     c26:	87 95       	ror	r24
     c28:	97 f9       	bld	r25, 7
     c2a:	08 95       	ret

00000c2c <malloc>:
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	82 30       	cpi	r24, 0x02	; 2
     c32:	91 05       	cpc	r25, r1
     c34:	10 f4       	brcc	.+4      	; 0xc3a <malloc+0xe>
     c36:	82 e0       	ldi	r24, 0x02	; 2
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	e0 91 3a 02 	lds	r30, 0x023A
     c3e:	f0 91 3b 02 	lds	r31, 0x023B
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	a0 e0       	ldi	r26, 0x00	; 0
     c48:	b0 e0       	ldi	r27, 0x00	; 0
     c4a:	30 97       	sbiw	r30, 0x00	; 0
     c4c:	39 f1       	breq	.+78     	; 0xc9c <malloc+0x70>
     c4e:	40 81       	ld	r20, Z
     c50:	51 81       	ldd	r21, Z+1	; 0x01
     c52:	48 17       	cp	r20, r24
     c54:	59 07       	cpc	r21, r25
     c56:	b8 f0       	brcs	.+46     	; 0xc86 <malloc+0x5a>
     c58:	48 17       	cp	r20, r24
     c5a:	59 07       	cpc	r21, r25
     c5c:	71 f4       	brne	.+28     	; 0xc7a <malloc+0x4e>
     c5e:	82 81       	ldd	r24, Z+2	; 0x02
     c60:	93 81       	ldd	r25, Z+3	; 0x03
     c62:	10 97       	sbiw	r26, 0x00	; 0
     c64:	29 f0       	breq	.+10     	; 0xc70 <malloc+0x44>
     c66:	13 96       	adiw	r26, 0x03	; 3
     c68:	9c 93       	st	X, r25
     c6a:	8e 93       	st	-X, r24
     c6c:	12 97       	sbiw	r26, 0x02	; 2
     c6e:	2c c0       	rjmp	.+88     	; 0xcc8 <malloc+0x9c>
     c70:	90 93 3b 02 	sts	0x023B, r25
     c74:	80 93 3a 02 	sts	0x023A, r24
     c78:	27 c0       	rjmp	.+78     	; 0xcc8 <malloc+0x9c>
     c7a:	21 15       	cp	r18, r1
     c7c:	31 05       	cpc	r19, r1
     c7e:	31 f0       	breq	.+12     	; 0xc8c <malloc+0x60>
     c80:	42 17       	cp	r20, r18
     c82:	53 07       	cpc	r21, r19
     c84:	18 f0       	brcs	.+6      	; 0xc8c <malloc+0x60>
     c86:	a9 01       	movw	r20, r18
     c88:	db 01       	movw	r26, r22
     c8a:	01 c0       	rjmp	.+2      	; 0xc8e <malloc+0x62>
     c8c:	ef 01       	movw	r28, r30
     c8e:	9a 01       	movw	r18, r20
     c90:	bd 01       	movw	r22, r26
     c92:	df 01       	movw	r26, r30
     c94:	02 80       	ldd	r0, Z+2	; 0x02
     c96:	f3 81       	ldd	r31, Z+3	; 0x03
     c98:	e0 2d       	mov	r30, r0
     c9a:	d7 cf       	rjmp	.-82     	; 0xc4a <malloc+0x1e>
     c9c:	21 15       	cp	r18, r1
     c9e:	31 05       	cpc	r19, r1
     ca0:	f9 f0       	breq	.+62     	; 0xce0 <malloc+0xb4>
     ca2:	28 1b       	sub	r18, r24
     ca4:	39 0b       	sbc	r19, r25
     ca6:	24 30       	cpi	r18, 0x04	; 4
     ca8:	31 05       	cpc	r19, r1
     caa:	80 f4       	brcc	.+32     	; 0xccc <malloc+0xa0>
     cac:	8a 81       	ldd	r24, Y+2	; 0x02
     cae:	9b 81       	ldd	r25, Y+3	; 0x03
     cb0:	61 15       	cp	r22, r1
     cb2:	71 05       	cpc	r23, r1
     cb4:	21 f0       	breq	.+8      	; 0xcbe <malloc+0x92>
     cb6:	fb 01       	movw	r30, r22
     cb8:	93 83       	std	Z+3, r25	; 0x03
     cba:	82 83       	std	Z+2, r24	; 0x02
     cbc:	04 c0       	rjmp	.+8      	; 0xcc6 <malloc+0x9a>
     cbe:	90 93 3b 02 	sts	0x023B, r25
     cc2:	80 93 3a 02 	sts	0x023A, r24
     cc6:	fe 01       	movw	r30, r28
     cc8:	32 96       	adiw	r30, 0x02	; 2
     cca:	44 c0       	rjmp	.+136    	; 0xd54 <malloc+0x128>
     ccc:	fe 01       	movw	r30, r28
     cce:	e2 0f       	add	r30, r18
     cd0:	f3 1f       	adc	r31, r19
     cd2:	81 93       	st	Z+, r24
     cd4:	91 93       	st	Z+, r25
     cd6:	22 50       	subi	r18, 0x02	; 2
     cd8:	31 09       	sbc	r19, r1
     cda:	39 83       	std	Y+1, r19	; 0x01
     cdc:	28 83       	st	Y, r18
     cde:	3a c0       	rjmp	.+116    	; 0xd54 <malloc+0x128>
     ce0:	20 91 38 02 	lds	r18, 0x0238
     ce4:	30 91 39 02 	lds	r19, 0x0239
     ce8:	23 2b       	or	r18, r19
     cea:	41 f4       	brne	.+16     	; 0xcfc <malloc+0xd0>
     cec:	20 91 02 01 	lds	r18, 0x0102
     cf0:	30 91 03 01 	lds	r19, 0x0103
     cf4:	30 93 39 02 	sts	0x0239, r19
     cf8:	20 93 38 02 	sts	0x0238, r18
     cfc:	20 91 00 01 	lds	r18, 0x0100
     d00:	30 91 01 01 	lds	r19, 0x0101
     d04:	21 15       	cp	r18, r1
     d06:	31 05       	cpc	r19, r1
     d08:	41 f4       	brne	.+16     	; 0xd1a <malloc+0xee>
     d0a:	2d b7       	in	r18, 0x3d	; 61
     d0c:	3e b7       	in	r19, 0x3e	; 62
     d0e:	40 91 04 01 	lds	r20, 0x0104
     d12:	50 91 05 01 	lds	r21, 0x0105
     d16:	24 1b       	sub	r18, r20
     d18:	35 0b       	sbc	r19, r21
     d1a:	e0 91 38 02 	lds	r30, 0x0238
     d1e:	f0 91 39 02 	lds	r31, 0x0239
     d22:	e2 17       	cp	r30, r18
     d24:	f3 07       	cpc	r31, r19
     d26:	a0 f4       	brcc	.+40     	; 0xd50 <malloc+0x124>
     d28:	2e 1b       	sub	r18, r30
     d2a:	3f 0b       	sbc	r19, r31
     d2c:	28 17       	cp	r18, r24
     d2e:	39 07       	cpc	r19, r25
     d30:	78 f0       	brcs	.+30     	; 0xd50 <malloc+0x124>
     d32:	ac 01       	movw	r20, r24
     d34:	4e 5f       	subi	r20, 0xFE	; 254
     d36:	5f 4f       	sbci	r21, 0xFF	; 255
     d38:	24 17       	cp	r18, r20
     d3a:	35 07       	cpc	r19, r21
     d3c:	48 f0       	brcs	.+18     	; 0xd50 <malloc+0x124>
     d3e:	4e 0f       	add	r20, r30
     d40:	5f 1f       	adc	r21, r31
     d42:	50 93 39 02 	sts	0x0239, r21
     d46:	40 93 38 02 	sts	0x0238, r20
     d4a:	81 93       	st	Z+, r24
     d4c:	91 93       	st	Z+, r25
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <malloc+0x128>
     d50:	e0 e0       	ldi	r30, 0x00	; 0
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	cf 01       	movw	r24, r30
     d56:	df 91       	pop	r29
     d58:	cf 91       	pop	r28
     d5a:	08 95       	ret

00000d5c <free>:
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
     d60:	00 97       	sbiw	r24, 0x00	; 0
     d62:	09 f4       	brne	.+2      	; 0xd66 <free+0xa>
     d64:	87 c0       	rjmp	.+270    	; 0xe74 <free+0x118>
     d66:	fc 01       	movw	r30, r24
     d68:	32 97       	sbiw	r30, 0x02	; 2
     d6a:	13 82       	std	Z+3, r1	; 0x03
     d6c:	12 82       	std	Z+2, r1	; 0x02
     d6e:	c0 91 3a 02 	lds	r28, 0x023A
     d72:	d0 91 3b 02 	lds	r29, 0x023B
     d76:	20 97       	sbiw	r28, 0x00	; 0
     d78:	81 f4       	brne	.+32     	; 0xd9a <free+0x3e>
     d7a:	20 81       	ld	r18, Z
     d7c:	31 81       	ldd	r19, Z+1	; 0x01
     d7e:	28 0f       	add	r18, r24
     d80:	39 1f       	adc	r19, r25
     d82:	80 91 38 02 	lds	r24, 0x0238
     d86:	90 91 39 02 	lds	r25, 0x0239
     d8a:	82 17       	cp	r24, r18
     d8c:	93 07       	cpc	r25, r19
     d8e:	79 f5       	brne	.+94     	; 0xdee <free+0x92>
     d90:	f0 93 39 02 	sts	0x0239, r31
     d94:	e0 93 38 02 	sts	0x0238, r30
     d98:	6d c0       	rjmp	.+218    	; 0xe74 <free+0x118>
     d9a:	de 01       	movw	r26, r28
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	ae 17       	cp	r26, r30
     da2:	bf 07       	cpc	r27, r31
     da4:	50 f4       	brcc	.+20     	; 0xdba <free+0x5e>
     da6:	12 96       	adiw	r26, 0x02	; 2
     da8:	4d 91       	ld	r20, X+
     daa:	5c 91       	ld	r21, X
     dac:	13 97       	sbiw	r26, 0x03	; 3
     dae:	9d 01       	movw	r18, r26
     db0:	41 15       	cp	r20, r1
     db2:	51 05       	cpc	r21, r1
     db4:	09 f1       	breq	.+66     	; 0xdf8 <free+0x9c>
     db6:	da 01       	movw	r26, r20
     db8:	f3 cf       	rjmp	.-26     	; 0xda0 <free+0x44>
     dba:	b3 83       	std	Z+3, r27	; 0x03
     dbc:	a2 83       	std	Z+2, r26	; 0x02
     dbe:	40 81       	ld	r20, Z
     dc0:	51 81       	ldd	r21, Z+1	; 0x01
     dc2:	84 0f       	add	r24, r20
     dc4:	95 1f       	adc	r25, r21
     dc6:	8a 17       	cp	r24, r26
     dc8:	9b 07       	cpc	r25, r27
     dca:	71 f4       	brne	.+28     	; 0xde8 <free+0x8c>
     dcc:	8d 91       	ld	r24, X+
     dce:	9c 91       	ld	r25, X
     dd0:	11 97       	sbiw	r26, 0x01	; 1
     dd2:	84 0f       	add	r24, r20
     dd4:	95 1f       	adc	r25, r21
     dd6:	02 96       	adiw	r24, 0x02	; 2
     dd8:	91 83       	std	Z+1, r25	; 0x01
     dda:	80 83       	st	Z, r24
     ddc:	12 96       	adiw	r26, 0x02	; 2
     dde:	8d 91       	ld	r24, X+
     de0:	9c 91       	ld	r25, X
     de2:	13 97       	sbiw	r26, 0x03	; 3
     de4:	93 83       	std	Z+3, r25	; 0x03
     de6:	82 83       	std	Z+2, r24	; 0x02
     de8:	21 15       	cp	r18, r1
     dea:	31 05       	cpc	r19, r1
     dec:	29 f4       	brne	.+10     	; 0xdf8 <free+0x9c>
     dee:	f0 93 3b 02 	sts	0x023B, r31
     df2:	e0 93 3a 02 	sts	0x023A, r30
     df6:	3e c0       	rjmp	.+124    	; 0xe74 <free+0x118>
     df8:	d9 01       	movw	r26, r18
     dfa:	13 96       	adiw	r26, 0x03	; 3
     dfc:	fc 93       	st	X, r31
     dfe:	ee 93       	st	-X, r30
     e00:	12 97       	sbiw	r26, 0x02	; 2
     e02:	4d 91       	ld	r20, X+
     e04:	5d 91       	ld	r21, X+
     e06:	a4 0f       	add	r26, r20
     e08:	b5 1f       	adc	r27, r21
     e0a:	ea 17       	cp	r30, r26
     e0c:	fb 07       	cpc	r31, r27
     e0e:	79 f4       	brne	.+30     	; 0xe2e <free+0xd2>
     e10:	80 81       	ld	r24, Z
     e12:	91 81       	ldd	r25, Z+1	; 0x01
     e14:	84 0f       	add	r24, r20
     e16:	95 1f       	adc	r25, r21
     e18:	02 96       	adiw	r24, 0x02	; 2
     e1a:	d9 01       	movw	r26, r18
     e1c:	11 96       	adiw	r26, 0x01	; 1
     e1e:	9c 93       	st	X, r25
     e20:	8e 93       	st	-X, r24
     e22:	82 81       	ldd	r24, Z+2	; 0x02
     e24:	93 81       	ldd	r25, Z+3	; 0x03
     e26:	13 96       	adiw	r26, 0x03	; 3
     e28:	9c 93       	st	X, r25
     e2a:	8e 93       	st	-X, r24
     e2c:	12 97       	sbiw	r26, 0x02	; 2
     e2e:	e0 e0       	ldi	r30, 0x00	; 0
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	8a 81       	ldd	r24, Y+2	; 0x02
     e34:	9b 81       	ldd	r25, Y+3	; 0x03
     e36:	00 97       	sbiw	r24, 0x00	; 0
     e38:	19 f0       	breq	.+6      	; 0xe40 <free+0xe4>
     e3a:	fe 01       	movw	r30, r28
     e3c:	ec 01       	movw	r28, r24
     e3e:	f9 cf       	rjmp	.-14     	; 0xe32 <free+0xd6>
     e40:	ce 01       	movw	r24, r28
     e42:	02 96       	adiw	r24, 0x02	; 2
     e44:	28 81       	ld	r18, Y
     e46:	39 81       	ldd	r19, Y+1	; 0x01
     e48:	82 0f       	add	r24, r18
     e4a:	93 1f       	adc	r25, r19
     e4c:	20 91 38 02 	lds	r18, 0x0238
     e50:	30 91 39 02 	lds	r19, 0x0239
     e54:	28 17       	cp	r18, r24
     e56:	39 07       	cpc	r19, r25
     e58:	69 f4       	brne	.+26     	; 0xe74 <free+0x118>
     e5a:	30 97       	sbiw	r30, 0x00	; 0
     e5c:	29 f4       	brne	.+10     	; 0xe68 <free+0x10c>
     e5e:	10 92 3b 02 	sts	0x023B, r1
     e62:	10 92 3a 02 	sts	0x023A, r1
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <free+0x110>
     e68:	13 82       	std	Z+3, r1	; 0x03
     e6a:	12 82       	std	Z+2, r1	; 0x02
     e6c:	d0 93 39 02 	sts	0x0239, r29
     e70:	c0 93 38 02 	sts	0x0238, r28
     e74:	df 91       	pop	r29
     e76:	cf 91       	pop	r28
     e78:	08 95       	ret

00000e7a <fdevopen>:
     e7a:	0f 93       	push	r16
     e7c:	1f 93       	push	r17
     e7e:	cf 93       	push	r28
     e80:	df 93       	push	r29
     e82:	ec 01       	movw	r28, r24
     e84:	8b 01       	movw	r16, r22
     e86:	00 97       	sbiw	r24, 0x00	; 0
     e88:	31 f4       	brne	.+12     	; 0xe96 <fdevopen+0x1c>
     e8a:	61 15       	cp	r22, r1
     e8c:	71 05       	cpc	r23, r1
     e8e:	19 f4       	brne	.+6      	; 0xe96 <fdevopen+0x1c>
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	38 c0       	rjmp	.+112    	; 0xf06 <fdevopen+0x8c>
     e96:	6e e0       	ldi	r22, 0x0E	; 14
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 6e 09 	call	0x12dc	; 0x12dc <calloc>
     ea2:	fc 01       	movw	r30, r24
     ea4:	00 97       	sbiw	r24, 0x00	; 0
     ea6:	a1 f3       	breq	.-24     	; 0xe90 <fdevopen+0x16>
     ea8:	80 e8       	ldi	r24, 0x80	; 128
     eaa:	83 83       	std	Z+3, r24	; 0x03
     eac:	01 15       	cp	r16, r1
     eae:	11 05       	cpc	r17, r1
     eb0:	71 f0       	breq	.+28     	; 0xece <fdevopen+0x54>
     eb2:	13 87       	std	Z+11, r17	; 0x0b
     eb4:	02 87       	std	Z+10, r16	; 0x0a
     eb6:	81 e8       	ldi	r24, 0x81	; 129
     eb8:	83 83       	std	Z+3, r24	; 0x03
     eba:	80 91 3c 02 	lds	r24, 0x023C
     ebe:	90 91 3d 02 	lds	r25, 0x023D
     ec2:	89 2b       	or	r24, r25
     ec4:	21 f4       	brne	.+8      	; 0xece <fdevopen+0x54>
     ec6:	f0 93 3d 02 	sts	0x023D, r31
     eca:	e0 93 3c 02 	sts	0x023C, r30
     ece:	20 97       	sbiw	r28, 0x00	; 0
     ed0:	c9 f0       	breq	.+50     	; 0xf04 <fdevopen+0x8a>
     ed2:	d1 87       	std	Z+9, r29	; 0x09
     ed4:	c0 87       	std	Z+8, r28	; 0x08
     ed6:	83 81       	ldd	r24, Z+3	; 0x03
     ed8:	82 60       	ori	r24, 0x02	; 2
     eda:	83 83       	std	Z+3, r24	; 0x03
     edc:	80 91 3e 02 	lds	r24, 0x023E
     ee0:	90 91 3f 02 	lds	r25, 0x023F
     ee4:	89 2b       	or	r24, r25
     ee6:	71 f4       	brne	.+28     	; 0xf04 <fdevopen+0x8a>
     ee8:	f0 93 3f 02 	sts	0x023F, r31
     eec:	e0 93 3e 02 	sts	0x023E, r30
     ef0:	80 91 40 02 	lds	r24, 0x0240
     ef4:	90 91 41 02 	lds	r25, 0x0241
     ef8:	89 2b       	or	r24, r25
     efa:	21 f4       	brne	.+8      	; 0xf04 <fdevopen+0x8a>
     efc:	f0 93 41 02 	sts	0x0241, r31
     f00:	e0 93 40 02 	sts	0x0240, r30
     f04:	cf 01       	movw	r24, r30
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	1f 91       	pop	r17
     f0c:	0f 91       	pop	r16
     f0e:	08 95       	ret

00000f10 <printf>:
     f10:	a0 e0       	ldi	r26, 0x00	; 0
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	ee e8       	ldi	r30, 0x8E	; 142
     f16:	f7 e0       	ldi	r31, 0x07	; 7
     f18:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__prologue_saves__+0x20>
     f1c:	fe 01       	movw	r30, r28
     f1e:	35 96       	adiw	r30, 0x05	; 5
     f20:	61 91       	ld	r22, Z+
     f22:	71 91       	ld	r23, Z+
     f24:	af 01       	movw	r20, r30
     f26:	80 91 3e 02 	lds	r24, 0x023E
     f2a:	90 91 3f 02 	lds	r25, 0x023F
     f2e:	0e 94 9c 07 	call	0xf38	; 0xf38 <vfprintf>
     f32:	e2 e0       	ldi	r30, 0x02	; 2
     f34:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <__epilogue_restores__+0x20>

00000f38 <vfprintf>:
     f38:	ac e0       	ldi	r26, 0x0C	; 12
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	e2 ea       	ldi	r30, 0xA2	; 162
     f3e:	f7 e0       	ldi	r31, 0x07	; 7
     f40:	0c 94 37 0a 	jmp	0x146e	; 0x146e <__prologue_saves__>
     f44:	7c 01       	movw	r14, r24
     f46:	6b 01       	movw	r12, r22
     f48:	8a 01       	movw	r16, r20
     f4a:	fc 01       	movw	r30, r24
     f4c:	17 82       	std	Z+7, r1	; 0x07
     f4e:	16 82       	std	Z+6, r1	; 0x06
     f50:	83 81       	ldd	r24, Z+3	; 0x03
     f52:	81 ff       	sbrs	r24, 1
     f54:	bd c1       	rjmp	.+890    	; 0x12d0 <vfprintf+0x398>
     f56:	ce 01       	movw	r24, r28
     f58:	01 96       	adiw	r24, 0x01	; 1
     f5a:	4c 01       	movw	r8, r24
     f5c:	f7 01       	movw	r30, r14
     f5e:	93 81       	ldd	r25, Z+3	; 0x03
     f60:	f6 01       	movw	r30, r12
     f62:	93 fd       	sbrc	r25, 3
     f64:	85 91       	lpm	r24, Z+
     f66:	93 ff       	sbrs	r25, 3
     f68:	81 91       	ld	r24, Z+
     f6a:	6f 01       	movw	r12, r30
     f6c:	88 23       	and	r24, r24
     f6e:	09 f4       	brne	.+2      	; 0xf72 <vfprintf+0x3a>
     f70:	ab c1       	rjmp	.+854    	; 0x12c8 <vfprintf+0x390>
     f72:	85 32       	cpi	r24, 0x25	; 37
     f74:	39 f4       	brne	.+14     	; 0xf84 <vfprintf+0x4c>
     f76:	93 fd       	sbrc	r25, 3
     f78:	85 91       	lpm	r24, Z+
     f7a:	93 ff       	sbrs	r25, 3
     f7c:	81 91       	ld	r24, Z+
     f7e:	6f 01       	movw	r12, r30
     f80:	85 32       	cpi	r24, 0x25	; 37
     f82:	29 f4       	brne	.+10     	; 0xf8e <vfprintf+0x56>
     f84:	b7 01       	movw	r22, r14
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
     f8c:	e7 cf       	rjmp	.-50     	; 0xf5c <vfprintf+0x24>
     f8e:	51 2c       	mov	r5, r1
     f90:	31 2c       	mov	r3, r1
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	20 32       	cpi	r18, 0x20	; 32
     f96:	a0 f4       	brcc	.+40     	; 0xfc0 <vfprintf+0x88>
     f98:	8b 32       	cpi	r24, 0x2B	; 43
     f9a:	69 f0       	breq	.+26     	; 0xfb6 <vfprintf+0x7e>
     f9c:	30 f4       	brcc	.+12     	; 0xfaa <vfprintf+0x72>
     f9e:	80 32       	cpi	r24, 0x20	; 32
     fa0:	59 f0       	breq	.+22     	; 0xfb8 <vfprintf+0x80>
     fa2:	83 32       	cpi	r24, 0x23	; 35
     fa4:	69 f4       	brne	.+26     	; 0xfc0 <vfprintf+0x88>
     fa6:	20 61       	ori	r18, 0x10	; 16
     fa8:	2c c0       	rjmp	.+88     	; 0x1002 <vfprintf+0xca>
     faa:	8d 32       	cpi	r24, 0x2D	; 45
     fac:	39 f0       	breq	.+14     	; 0xfbc <vfprintf+0x84>
     fae:	80 33       	cpi	r24, 0x30	; 48
     fb0:	39 f4       	brne	.+14     	; 0xfc0 <vfprintf+0x88>
     fb2:	21 60       	ori	r18, 0x01	; 1
     fb4:	26 c0       	rjmp	.+76     	; 0x1002 <vfprintf+0xca>
     fb6:	22 60       	ori	r18, 0x02	; 2
     fb8:	24 60       	ori	r18, 0x04	; 4
     fba:	23 c0       	rjmp	.+70     	; 0x1002 <vfprintf+0xca>
     fbc:	28 60       	ori	r18, 0x08	; 8
     fbe:	21 c0       	rjmp	.+66     	; 0x1002 <vfprintf+0xca>
     fc0:	27 fd       	sbrc	r18, 7
     fc2:	27 c0       	rjmp	.+78     	; 0x1012 <vfprintf+0xda>
     fc4:	30 ed       	ldi	r19, 0xD0	; 208
     fc6:	38 0f       	add	r19, r24
     fc8:	3a 30       	cpi	r19, 0x0A	; 10
     fca:	78 f4       	brcc	.+30     	; 0xfea <vfprintf+0xb2>
     fcc:	26 ff       	sbrs	r18, 6
     fce:	06 c0       	rjmp	.+12     	; 0xfdc <vfprintf+0xa4>
     fd0:	fa e0       	ldi	r31, 0x0A	; 10
     fd2:	5f 9e       	mul	r5, r31
     fd4:	30 0d       	add	r19, r0
     fd6:	11 24       	eor	r1, r1
     fd8:	53 2e       	mov	r5, r19
     fda:	13 c0       	rjmp	.+38     	; 0x1002 <vfprintf+0xca>
     fdc:	8a e0       	ldi	r24, 0x0A	; 10
     fde:	38 9e       	mul	r3, r24
     fe0:	30 0d       	add	r19, r0
     fe2:	11 24       	eor	r1, r1
     fe4:	33 2e       	mov	r3, r19
     fe6:	20 62       	ori	r18, 0x20	; 32
     fe8:	0c c0       	rjmp	.+24     	; 0x1002 <vfprintf+0xca>
     fea:	8e 32       	cpi	r24, 0x2E	; 46
     fec:	21 f4       	brne	.+8      	; 0xff6 <vfprintf+0xbe>
     fee:	26 fd       	sbrc	r18, 6
     ff0:	6b c1       	rjmp	.+726    	; 0x12c8 <vfprintf+0x390>
     ff2:	20 64       	ori	r18, 0x40	; 64
     ff4:	06 c0       	rjmp	.+12     	; 0x1002 <vfprintf+0xca>
     ff6:	8c 36       	cpi	r24, 0x6C	; 108
     ff8:	11 f4       	brne	.+4      	; 0xffe <vfprintf+0xc6>
     ffa:	20 68       	ori	r18, 0x80	; 128
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <vfprintf+0xca>
     ffe:	88 36       	cpi	r24, 0x68	; 104
    1000:	41 f4       	brne	.+16     	; 0x1012 <vfprintf+0xda>
    1002:	f6 01       	movw	r30, r12
    1004:	93 fd       	sbrc	r25, 3
    1006:	85 91       	lpm	r24, Z+
    1008:	93 ff       	sbrs	r25, 3
    100a:	81 91       	ld	r24, Z+
    100c:	6f 01       	movw	r12, r30
    100e:	81 11       	cpse	r24, r1
    1010:	c1 cf       	rjmp	.-126    	; 0xf94 <vfprintf+0x5c>
    1012:	98 2f       	mov	r25, r24
    1014:	9f 7d       	andi	r25, 0xDF	; 223
    1016:	95 54       	subi	r25, 0x45	; 69
    1018:	93 30       	cpi	r25, 0x03	; 3
    101a:	28 f4       	brcc	.+10     	; 0x1026 <vfprintf+0xee>
    101c:	0c 5f       	subi	r16, 0xFC	; 252
    101e:	1f 4f       	sbci	r17, 0xFF	; 255
    1020:	ff e3       	ldi	r31, 0x3F	; 63
    1022:	f9 83       	std	Y+1, r31	; 0x01
    1024:	0d c0       	rjmp	.+26     	; 0x1040 <vfprintf+0x108>
    1026:	83 36       	cpi	r24, 0x63	; 99
    1028:	31 f0       	breq	.+12     	; 0x1036 <vfprintf+0xfe>
    102a:	83 37       	cpi	r24, 0x73	; 115
    102c:	71 f0       	breq	.+28     	; 0x104a <vfprintf+0x112>
    102e:	83 35       	cpi	r24, 0x53	; 83
    1030:	09 f0       	breq	.+2      	; 0x1034 <vfprintf+0xfc>
    1032:	5b c0       	rjmp	.+182    	; 0x10ea <vfprintf+0x1b2>
    1034:	22 c0       	rjmp	.+68     	; 0x107a <vfprintf+0x142>
    1036:	f8 01       	movw	r30, r16
    1038:	80 81       	ld	r24, Z
    103a:	89 83       	std	Y+1, r24	; 0x01
    103c:	0e 5f       	subi	r16, 0xFE	; 254
    103e:	1f 4f       	sbci	r17, 0xFF	; 255
    1040:	44 24       	eor	r4, r4
    1042:	43 94       	inc	r4
    1044:	51 2c       	mov	r5, r1
    1046:	54 01       	movw	r10, r8
    1048:	15 c0       	rjmp	.+42     	; 0x1074 <vfprintf+0x13c>
    104a:	38 01       	movw	r6, r16
    104c:	f2 e0       	ldi	r31, 0x02	; 2
    104e:	6f 0e       	add	r6, r31
    1050:	71 1c       	adc	r7, r1
    1052:	f8 01       	movw	r30, r16
    1054:	a0 80       	ld	r10, Z
    1056:	b1 80       	ldd	r11, Z+1	; 0x01
    1058:	26 ff       	sbrs	r18, 6
    105a:	03 c0       	rjmp	.+6      	; 0x1062 <vfprintf+0x12a>
    105c:	65 2d       	mov	r22, r5
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	02 c0       	rjmp	.+4      	; 0x1066 <vfprintf+0x12e>
    1062:	6f ef       	ldi	r22, 0xFF	; 255
    1064:	7f ef       	ldi	r23, 0xFF	; 255
    1066:	c5 01       	movw	r24, r10
    1068:	2c 87       	std	Y+12, r18	; 0x0c
    106a:	0e 94 9c 09 	call	0x1338	; 0x1338 <strnlen>
    106e:	2c 01       	movw	r4, r24
    1070:	83 01       	movw	r16, r6
    1072:	2c 85       	ldd	r18, Y+12	; 0x0c
    1074:	2f 77       	andi	r18, 0x7F	; 127
    1076:	22 2e       	mov	r2, r18
    1078:	17 c0       	rjmp	.+46     	; 0x10a8 <vfprintf+0x170>
    107a:	38 01       	movw	r6, r16
    107c:	f2 e0       	ldi	r31, 0x02	; 2
    107e:	6f 0e       	add	r6, r31
    1080:	71 1c       	adc	r7, r1
    1082:	f8 01       	movw	r30, r16
    1084:	a0 80       	ld	r10, Z
    1086:	b1 80       	ldd	r11, Z+1	; 0x01
    1088:	26 ff       	sbrs	r18, 6
    108a:	03 c0       	rjmp	.+6      	; 0x1092 <vfprintf+0x15a>
    108c:	65 2d       	mov	r22, r5
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <vfprintf+0x15e>
    1092:	6f ef       	ldi	r22, 0xFF	; 255
    1094:	7f ef       	ldi	r23, 0xFF	; 255
    1096:	c5 01       	movw	r24, r10
    1098:	2c 87       	std	Y+12, r18	; 0x0c
    109a:	0e 94 8a 09 	call	0x1314	; 0x1314 <strnlen_P>
    109e:	2c 01       	movw	r4, r24
    10a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    10a2:	20 68       	ori	r18, 0x80	; 128
    10a4:	22 2e       	mov	r2, r18
    10a6:	83 01       	movw	r16, r6
    10a8:	23 fc       	sbrc	r2, 3
    10aa:	1b c0       	rjmp	.+54     	; 0x10e2 <vfprintf+0x1aa>
    10ac:	83 2d       	mov	r24, r3
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	48 16       	cp	r4, r24
    10b2:	59 06       	cpc	r5, r25
    10b4:	b0 f4       	brcc	.+44     	; 0x10e2 <vfprintf+0x1aa>
    10b6:	b7 01       	movw	r22, r14
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    10c0:	3a 94       	dec	r3
    10c2:	f4 cf       	rjmp	.-24     	; 0x10ac <vfprintf+0x174>
    10c4:	f5 01       	movw	r30, r10
    10c6:	27 fc       	sbrc	r2, 7
    10c8:	85 91       	lpm	r24, Z+
    10ca:	27 fe       	sbrs	r2, 7
    10cc:	81 91       	ld	r24, Z+
    10ce:	5f 01       	movw	r10, r30
    10d0:	b7 01       	movw	r22, r14
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    10d8:	31 10       	cpse	r3, r1
    10da:	3a 94       	dec	r3
    10dc:	f1 e0       	ldi	r31, 0x01	; 1
    10de:	4f 1a       	sub	r4, r31
    10e0:	51 08       	sbc	r5, r1
    10e2:	41 14       	cp	r4, r1
    10e4:	51 04       	cpc	r5, r1
    10e6:	71 f7       	brne	.-36     	; 0x10c4 <vfprintf+0x18c>
    10e8:	e5 c0       	rjmp	.+458    	; 0x12b4 <vfprintf+0x37c>
    10ea:	84 36       	cpi	r24, 0x64	; 100
    10ec:	11 f0       	breq	.+4      	; 0x10f2 <vfprintf+0x1ba>
    10ee:	89 36       	cpi	r24, 0x69	; 105
    10f0:	39 f5       	brne	.+78     	; 0x1140 <vfprintf+0x208>
    10f2:	f8 01       	movw	r30, r16
    10f4:	27 ff       	sbrs	r18, 7
    10f6:	07 c0       	rjmp	.+14     	; 0x1106 <vfprintf+0x1ce>
    10f8:	60 81       	ld	r22, Z
    10fa:	71 81       	ldd	r23, Z+1	; 0x01
    10fc:	82 81       	ldd	r24, Z+2	; 0x02
    10fe:	93 81       	ldd	r25, Z+3	; 0x03
    1100:	0c 5f       	subi	r16, 0xFC	; 252
    1102:	1f 4f       	sbci	r17, 0xFF	; 255
    1104:	08 c0       	rjmp	.+16     	; 0x1116 <vfprintf+0x1de>
    1106:	60 81       	ld	r22, Z
    1108:	71 81       	ldd	r23, Z+1	; 0x01
    110a:	88 27       	eor	r24, r24
    110c:	77 fd       	sbrc	r23, 7
    110e:	80 95       	com	r24
    1110:	98 2f       	mov	r25, r24
    1112:	0e 5f       	subi	r16, 0xFE	; 254
    1114:	1f 4f       	sbci	r17, 0xFF	; 255
    1116:	2f 76       	andi	r18, 0x6F	; 111
    1118:	b2 2e       	mov	r11, r18
    111a:	97 ff       	sbrs	r25, 7
    111c:	09 c0       	rjmp	.+18     	; 0x1130 <vfprintf+0x1f8>
    111e:	90 95       	com	r25
    1120:	80 95       	com	r24
    1122:	70 95       	com	r23
    1124:	61 95       	neg	r22
    1126:	7f 4f       	sbci	r23, 0xFF	; 255
    1128:	8f 4f       	sbci	r24, 0xFF	; 255
    112a:	9f 4f       	sbci	r25, 0xFF	; 255
    112c:	20 68       	ori	r18, 0x80	; 128
    112e:	b2 2e       	mov	r11, r18
    1130:	2a e0       	ldi	r18, 0x0A	; 10
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	a4 01       	movw	r20, r8
    1136:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__ultoa_invert>
    113a:	a8 2e       	mov	r10, r24
    113c:	a8 18       	sub	r10, r8
    113e:	44 c0       	rjmp	.+136    	; 0x11c8 <vfprintf+0x290>
    1140:	85 37       	cpi	r24, 0x75	; 117
    1142:	29 f4       	brne	.+10     	; 0x114e <vfprintf+0x216>
    1144:	2f 7e       	andi	r18, 0xEF	; 239
    1146:	b2 2e       	mov	r11, r18
    1148:	2a e0       	ldi	r18, 0x0A	; 10
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	25 c0       	rjmp	.+74     	; 0x1198 <vfprintf+0x260>
    114e:	f2 2f       	mov	r31, r18
    1150:	f9 7f       	andi	r31, 0xF9	; 249
    1152:	bf 2e       	mov	r11, r31
    1154:	8f 36       	cpi	r24, 0x6F	; 111
    1156:	c1 f0       	breq	.+48     	; 0x1188 <vfprintf+0x250>
    1158:	18 f4       	brcc	.+6      	; 0x1160 <vfprintf+0x228>
    115a:	88 35       	cpi	r24, 0x58	; 88
    115c:	79 f0       	breq	.+30     	; 0x117c <vfprintf+0x244>
    115e:	b4 c0       	rjmp	.+360    	; 0x12c8 <vfprintf+0x390>
    1160:	80 37       	cpi	r24, 0x70	; 112
    1162:	19 f0       	breq	.+6      	; 0x116a <vfprintf+0x232>
    1164:	88 37       	cpi	r24, 0x78	; 120
    1166:	21 f0       	breq	.+8      	; 0x1170 <vfprintf+0x238>
    1168:	af c0       	rjmp	.+350    	; 0x12c8 <vfprintf+0x390>
    116a:	2f 2f       	mov	r18, r31
    116c:	20 61       	ori	r18, 0x10	; 16
    116e:	b2 2e       	mov	r11, r18
    1170:	b4 fe       	sbrs	r11, 4
    1172:	0d c0       	rjmp	.+26     	; 0x118e <vfprintf+0x256>
    1174:	8b 2d       	mov	r24, r11
    1176:	84 60       	ori	r24, 0x04	; 4
    1178:	b8 2e       	mov	r11, r24
    117a:	09 c0       	rjmp	.+18     	; 0x118e <vfprintf+0x256>
    117c:	24 ff       	sbrs	r18, 4
    117e:	0a c0       	rjmp	.+20     	; 0x1194 <vfprintf+0x25c>
    1180:	9f 2f       	mov	r25, r31
    1182:	96 60       	ori	r25, 0x06	; 6
    1184:	b9 2e       	mov	r11, r25
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <vfprintf+0x25c>
    1188:	28 e0       	ldi	r18, 0x08	; 8
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	05 c0       	rjmp	.+10     	; 0x1198 <vfprintf+0x260>
    118e:	20 e1       	ldi	r18, 0x10	; 16
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <vfprintf+0x260>
    1194:	20 e1       	ldi	r18, 0x10	; 16
    1196:	32 e0       	ldi	r19, 0x02	; 2
    1198:	f8 01       	movw	r30, r16
    119a:	b7 fe       	sbrs	r11, 7
    119c:	07 c0       	rjmp	.+14     	; 0x11ac <vfprintf+0x274>
    119e:	60 81       	ld	r22, Z
    11a0:	71 81       	ldd	r23, Z+1	; 0x01
    11a2:	82 81       	ldd	r24, Z+2	; 0x02
    11a4:	93 81       	ldd	r25, Z+3	; 0x03
    11a6:	0c 5f       	subi	r16, 0xFC	; 252
    11a8:	1f 4f       	sbci	r17, 0xFF	; 255
    11aa:	06 c0       	rjmp	.+12     	; 0x11b8 <vfprintf+0x280>
    11ac:	60 81       	ld	r22, Z
    11ae:	71 81       	ldd	r23, Z+1	; 0x01
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 5f       	subi	r16, 0xFE	; 254
    11b6:	1f 4f       	sbci	r17, 0xFF	; 255
    11b8:	a4 01       	movw	r20, r8
    11ba:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__ultoa_invert>
    11be:	a8 2e       	mov	r10, r24
    11c0:	a8 18       	sub	r10, r8
    11c2:	fb 2d       	mov	r31, r11
    11c4:	ff 77       	andi	r31, 0x7F	; 127
    11c6:	bf 2e       	mov	r11, r31
    11c8:	b6 fe       	sbrs	r11, 6
    11ca:	0b c0       	rjmp	.+22     	; 0x11e2 <vfprintf+0x2aa>
    11cc:	2b 2d       	mov	r18, r11
    11ce:	2e 7f       	andi	r18, 0xFE	; 254
    11d0:	a5 14       	cp	r10, r5
    11d2:	50 f4       	brcc	.+20     	; 0x11e8 <vfprintf+0x2b0>
    11d4:	b4 fe       	sbrs	r11, 4
    11d6:	0a c0       	rjmp	.+20     	; 0x11ec <vfprintf+0x2b4>
    11d8:	b2 fc       	sbrc	r11, 2
    11da:	08 c0       	rjmp	.+16     	; 0x11ec <vfprintf+0x2b4>
    11dc:	2b 2d       	mov	r18, r11
    11de:	2e 7e       	andi	r18, 0xEE	; 238
    11e0:	05 c0       	rjmp	.+10     	; 0x11ec <vfprintf+0x2b4>
    11e2:	7a 2c       	mov	r7, r10
    11e4:	2b 2d       	mov	r18, r11
    11e6:	03 c0       	rjmp	.+6      	; 0x11ee <vfprintf+0x2b6>
    11e8:	7a 2c       	mov	r7, r10
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <vfprintf+0x2b6>
    11ec:	75 2c       	mov	r7, r5
    11ee:	24 ff       	sbrs	r18, 4
    11f0:	0d c0       	rjmp	.+26     	; 0x120c <vfprintf+0x2d4>
    11f2:	fe 01       	movw	r30, r28
    11f4:	ea 0d       	add	r30, r10
    11f6:	f1 1d       	adc	r31, r1
    11f8:	80 81       	ld	r24, Z
    11fa:	80 33       	cpi	r24, 0x30	; 48
    11fc:	11 f4       	brne	.+4      	; 0x1202 <vfprintf+0x2ca>
    11fe:	29 7e       	andi	r18, 0xE9	; 233
    1200:	09 c0       	rjmp	.+18     	; 0x1214 <vfprintf+0x2dc>
    1202:	22 ff       	sbrs	r18, 2
    1204:	06 c0       	rjmp	.+12     	; 0x1212 <vfprintf+0x2da>
    1206:	73 94       	inc	r7
    1208:	73 94       	inc	r7
    120a:	04 c0       	rjmp	.+8      	; 0x1214 <vfprintf+0x2dc>
    120c:	82 2f       	mov	r24, r18
    120e:	86 78       	andi	r24, 0x86	; 134
    1210:	09 f0       	breq	.+2      	; 0x1214 <vfprintf+0x2dc>
    1212:	73 94       	inc	r7
    1214:	23 fd       	sbrc	r18, 3
    1216:	13 c0       	rjmp	.+38     	; 0x123e <vfprintf+0x306>
    1218:	20 ff       	sbrs	r18, 0
    121a:	06 c0       	rjmp	.+12     	; 0x1228 <vfprintf+0x2f0>
    121c:	5a 2c       	mov	r5, r10
    121e:	73 14       	cp	r7, r3
    1220:	18 f4       	brcc	.+6      	; 0x1228 <vfprintf+0x2f0>
    1222:	53 0c       	add	r5, r3
    1224:	57 18       	sub	r5, r7
    1226:	73 2c       	mov	r7, r3
    1228:	73 14       	cp	r7, r3
    122a:	68 f4       	brcc	.+26     	; 0x1246 <vfprintf+0x30e>
    122c:	b7 01       	movw	r22, r14
    122e:	80 e2       	ldi	r24, 0x20	; 32
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	2c 87       	std	Y+12, r18	; 0x0c
    1234:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1238:	73 94       	inc	r7
    123a:	2c 85       	ldd	r18, Y+12	; 0x0c
    123c:	f5 cf       	rjmp	.-22     	; 0x1228 <vfprintf+0x2f0>
    123e:	73 14       	cp	r7, r3
    1240:	10 f4       	brcc	.+4      	; 0x1246 <vfprintf+0x30e>
    1242:	37 18       	sub	r3, r7
    1244:	01 c0       	rjmp	.+2      	; 0x1248 <vfprintf+0x310>
    1246:	31 2c       	mov	r3, r1
    1248:	24 ff       	sbrs	r18, 4
    124a:	12 c0       	rjmp	.+36     	; 0x1270 <vfprintf+0x338>
    124c:	b7 01       	movw	r22, r14
    124e:	80 e3       	ldi	r24, 0x30	; 48
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	2c 87       	std	Y+12, r18	; 0x0c
    1254:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1258:	2c 85       	ldd	r18, Y+12	; 0x0c
    125a:	22 ff       	sbrs	r18, 2
    125c:	17 c0       	rjmp	.+46     	; 0x128c <vfprintf+0x354>
    125e:	21 ff       	sbrs	r18, 1
    1260:	03 c0       	rjmp	.+6      	; 0x1268 <vfprintf+0x330>
    1262:	88 e5       	ldi	r24, 0x58	; 88
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	02 c0       	rjmp	.+4      	; 0x126c <vfprintf+0x334>
    1268:	88 e7       	ldi	r24, 0x78	; 120
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	b7 01       	movw	r22, r14
    126e:	0c c0       	rjmp	.+24     	; 0x1288 <vfprintf+0x350>
    1270:	82 2f       	mov	r24, r18
    1272:	86 78       	andi	r24, 0x86	; 134
    1274:	59 f0       	breq	.+22     	; 0x128c <vfprintf+0x354>
    1276:	21 fd       	sbrc	r18, 1
    1278:	02 c0       	rjmp	.+4      	; 0x127e <vfprintf+0x346>
    127a:	80 e2       	ldi	r24, 0x20	; 32
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <vfprintf+0x348>
    127e:	8b e2       	ldi	r24, 0x2B	; 43
    1280:	27 fd       	sbrc	r18, 7
    1282:	8d e2       	ldi	r24, 0x2D	; 45
    1284:	b7 01       	movw	r22, r14
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    128c:	a5 14       	cp	r10, r5
    128e:	38 f4       	brcc	.+14     	; 0x129e <vfprintf+0x366>
    1290:	b7 01       	movw	r22, r14
    1292:	80 e3       	ldi	r24, 0x30	; 48
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    129a:	5a 94       	dec	r5
    129c:	f7 cf       	rjmp	.-18     	; 0x128c <vfprintf+0x354>
    129e:	aa 94       	dec	r10
    12a0:	f4 01       	movw	r30, r8
    12a2:	ea 0d       	add	r30, r10
    12a4:	f1 1d       	adc	r31, r1
    12a6:	80 81       	ld	r24, Z
    12a8:	b7 01       	movw	r22, r14
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12b0:	a1 10       	cpse	r10, r1
    12b2:	f5 cf       	rjmp	.-22     	; 0x129e <vfprintf+0x366>
    12b4:	33 20       	and	r3, r3
    12b6:	09 f4       	brne	.+2      	; 0x12ba <vfprintf+0x382>
    12b8:	51 ce       	rjmp	.-862    	; 0xf5c <vfprintf+0x24>
    12ba:	b7 01       	movw	r22, r14
    12bc:	80 e2       	ldi	r24, 0x20	; 32
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12c4:	3a 94       	dec	r3
    12c6:	f6 cf       	rjmp	.-20     	; 0x12b4 <vfprintf+0x37c>
    12c8:	f7 01       	movw	r30, r14
    12ca:	86 81       	ldd	r24, Z+6	; 0x06
    12cc:	97 81       	ldd	r25, Z+7	; 0x07
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <vfprintf+0x39c>
    12d0:	8f ef       	ldi	r24, 0xFF	; 255
    12d2:	9f ef       	ldi	r25, 0xFF	; 255
    12d4:	2c 96       	adiw	r28, 0x0c	; 12
    12d6:	e2 e1       	ldi	r30, 0x12	; 18
    12d8:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__epilogue_restores__>

000012dc <calloc>:
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	86 9f       	mul	r24, r22
    12e6:	80 01       	movw	r16, r0
    12e8:	87 9f       	mul	r24, r23
    12ea:	10 0d       	add	r17, r0
    12ec:	96 9f       	mul	r25, r22
    12ee:	10 0d       	add	r17, r0
    12f0:	11 24       	eor	r1, r1
    12f2:	c8 01       	movw	r24, r16
    12f4:	0e 94 16 06 	call	0xc2c	; 0xc2c <malloc>
    12f8:	ec 01       	movw	r28, r24
    12fa:	00 97       	sbiw	r24, 0x00	; 0
    12fc:	29 f0       	breq	.+10     	; 0x1308 <calloc+0x2c>
    12fe:	a8 01       	movw	r20, r16
    1300:	60 e0       	ldi	r22, 0x00	; 0
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	0e 94 95 09 	call	0x132a	; 0x132a <memset>
    1308:	ce 01       	movw	r24, r28
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	08 95       	ret

00001314 <strnlen_P>:
    1314:	fc 01       	movw	r30, r24
    1316:	05 90       	lpm	r0, Z+
    1318:	61 50       	subi	r22, 0x01	; 1
    131a:	70 40       	sbci	r23, 0x00	; 0
    131c:	01 10       	cpse	r0, r1
    131e:	d8 f7       	brcc	.-10     	; 0x1316 <strnlen_P+0x2>
    1320:	80 95       	com	r24
    1322:	90 95       	com	r25
    1324:	8e 0f       	add	r24, r30
    1326:	9f 1f       	adc	r25, r31
    1328:	08 95       	ret

0000132a <memset>:
    132a:	dc 01       	movw	r26, r24
    132c:	01 c0       	rjmp	.+2      	; 0x1330 <memset+0x6>
    132e:	6d 93       	st	X+, r22
    1330:	41 50       	subi	r20, 0x01	; 1
    1332:	50 40       	sbci	r21, 0x00	; 0
    1334:	e0 f7       	brcc	.-8      	; 0x132e <memset+0x4>
    1336:	08 95       	ret

00001338 <strnlen>:
    1338:	fc 01       	movw	r30, r24
    133a:	61 50       	subi	r22, 0x01	; 1
    133c:	70 40       	sbci	r23, 0x00	; 0
    133e:	01 90       	ld	r0, Z+
    1340:	01 10       	cpse	r0, r1
    1342:	d8 f7       	brcc	.-10     	; 0x133a <strnlen+0x2>
    1344:	80 95       	com	r24
    1346:	90 95       	com	r25
    1348:	8e 0f       	add	r24, r30
    134a:	9f 1f       	adc	r25, r31
    134c:	08 95       	ret

0000134e <fputc>:
    134e:	0f 93       	push	r16
    1350:	1f 93       	push	r17
    1352:	cf 93       	push	r28
    1354:	df 93       	push	r29
    1356:	18 2f       	mov	r17, r24
    1358:	09 2f       	mov	r16, r25
    135a:	eb 01       	movw	r28, r22
    135c:	8b 81       	ldd	r24, Y+3	; 0x03
    135e:	81 fd       	sbrc	r24, 1
    1360:	03 c0       	rjmp	.+6      	; 0x1368 <fputc+0x1a>
    1362:	8f ef       	ldi	r24, 0xFF	; 255
    1364:	9f ef       	ldi	r25, 0xFF	; 255
    1366:	20 c0       	rjmp	.+64     	; 0x13a8 <fputc+0x5a>
    1368:	82 ff       	sbrs	r24, 2
    136a:	10 c0       	rjmp	.+32     	; 0x138c <fputc+0x3e>
    136c:	4e 81       	ldd	r20, Y+6	; 0x06
    136e:	5f 81       	ldd	r21, Y+7	; 0x07
    1370:	2c 81       	ldd	r18, Y+4	; 0x04
    1372:	3d 81       	ldd	r19, Y+5	; 0x05
    1374:	42 17       	cp	r20, r18
    1376:	53 07       	cpc	r21, r19
    1378:	7c f4       	brge	.+30     	; 0x1398 <fputc+0x4a>
    137a:	e8 81       	ld	r30, Y
    137c:	f9 81       	ldd	r31, Y+1	; 0x01
    137e:	9f 01       	movw	r18, r30
    1380:	2f 5f       	subi	r18, 0xFF	; 255
    1382:	3f 4f       	sbci	r19, 0xFF	; 255
    1384:	39 83       	std	Y+1, r19	; 0x01
    1386:	28 83       	st	Y, r18
    1388:	10 83       	st	Z, r17
    138a:	06 c0       	rjmp	.+12     	; 0x1398 <fputc+0x4a>
    138c:	e8 85       	ldd	r30, Y+8	; 0x08
    138e:	f9 85       	ldd	r31, Y+9	; 0x09
    1390:	81 2f       	mov	r24, r17
    1392:	09 95       	icall
    1394:	89 2b       	or	r24, r25
    1396:	29 f7       	brne	.-54     	; 0x1362 <fputc+0x14>
    1398:	2e 81       	ldd	r18, Y+6	; 0x06
    139a:	3f 81       	ldd	r19, Y+7	; 0x07
    139c:	2f 5f       	subi	r18, 0xFF	; 255
    139e:	3f 4f       	sbci	r19, 0xFF	; 255
    13a0:	3f 83       	std	Y+7, r19	; 0x07
    13a2:	2e 83       	std	Y+6, r18	; 0x06
    13a4:	81 2f       	mov	r24, r17
    13a6:	90 2f       	mov	r25, r16
    13a8:	df 91       	pop	r29
    13aa:	cf 91       	pop	r28
    13ac:	1f 91       	pop	r17
    13ae:	0f 91       	pop	r16
    13b0:	08 95       	ret

000013b2 <__ultoa_invert>:
    13b2:	fa 01       	movw	r30, r20
    13b4:	aa 27       	eor	r26, r26
    13b6:	28 30       	cpi	r18, 0x08	; 8
    13b8:	51 f1       	breq	.+84     	; 0x140e <__ultoa_invert+0x5c>
    13ba:	20 31       	cpi	r18, 0x10	; 16
    13bc:	81 f1       	breq	.+96     	; 0x141e <__ultoa_invert+0x6c>
    13be:	e8 94       	clt
    13c0:	6f 93       	push	r22
    13c2:	6e 7f       	andi	r22, 0xFE	; 254
    13c4:	6e 5f       	subi	r22, 0xFE	; 254
    13c6:	7f 4f       	sbci	r23, 0xFF	; 255
    13c8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ca:	9f 4f       	sbci	r25, 0xFF	; 255
    13cc:	af 4f       	sbci	r26, 0xFF	; 255
    13ce:	b1 e0       	ldi	r27, 0x01	; 1
    13d0:	3e d0       	rcall	.+124    	; 0x144e <__ultoa_invert+0x9c>
    13d2:	b4 e0       	ldi	r27, 0x04	; 4
    13d4:	3c d0       	rcall	.+120    	; 0x144e <__ultoa_invert+0x9c>
    13d6:	67 0f       	add	r22, r23
    13d8:	78 1f       	adc	r23, r24
    13da:	89 1f       	adc	r24, r25
    13dc:	9a 1f       	adc	r25, r26
    13de:	a1 1d       	adc	r26, r1
    13e0:	68 0f       	add	r22, r24
    13e2:	79 1f       	adc	r23, r25
    13e4:	8a 1f       	adc	r24, r26
    13e6:	91 1d       	adc	r25, r1
    13e8:	a1 1d       	adc	r26, r1
    13ea:	6a 0f       	add	r22, r26
    13ec:	71 1d       	adc	r23, r1
    13ee:	81 1d       	adc	r24, r1
    13f0:	91 1d       	adc	r25, r1
    13f2:	a1 1d       	adc	r26, r1
    13f4:	20 d0       	rcall	.+64     	; 0x1436 <__ultoa_invert+0x84>
    13f6:	09 f4       	brne	.+2      	; 0x13fa <__ultoa_invert+0x48>
    13f8:	68 94       	set
    13fa:	3f 91       	pop	r19
    13fc:	2a e0       	ldi	r18, 0x0A	; 10
    13fe:	26 9f       	mul	r18, r22
    1400:	11 24       	eor	r1, r1
    1402:	30 19       	sub	r19, r0
    1404:	30 5d       	subi	r19, 0xD0	; 208
    1406:	31 93       	st	Z+, r19
    1408:	de f6       	brtc	.-74     	; 0x13c0 <__ultoa_invert+0xe>
    140a:	cf 01       	movw	r24, r30
    140c:	08 95       	ret
    140e:	46 2f       	mov	r20, r22
    1410:	47 70       	andi	r20, 0x07	; 7
    1412:	40 5d       	subi	r20, 0xD0	; 208
    1414:	41 93       	st	Z+, r20
    1416:	b3 e0       	ldi	r27, 0x03	; 3
    1418:	0f d0       	rcall	.+30     	; 0x1438 <__ultoa_invert+0x86>
    141a:	c9 f7       	brne	.-14     	; 0x140e <__ultoa_invert+0x5c>
    141c:	f6 cf       	rjmp	.-20     	; 0x140a <__ultoa_invert+0x58>
    141e:	46 2f       	mov	r20, r22
    1420:	4f 70       	andi	r20, 0x0F	; 15
    1422:	40 5d       	subi	r20, 0xD0	; 208
    1424:	4a 33       	cpi	r20, 0x3A	; 58
    1426:	18 f0       	brcs	.+6      	; 0x142e <__ultoa_invert+0x7c>
    1428:	49 5d       	subi	r20, 0xD9	; 217
    142a:	31 fd       	sbrc	r19, 1
    142c:	40 52       	subi	r20, 0x20	; 32
    142e:	41 93       	st	Z+, r20
    1430:	02 d0       	rcall	.+4      	; 0x1436 <__ultoa_invert+0x84>
    1432:	a9 f7       	brne	.-22     	; 0x141e <__ultoa_invert+0x6c>
    1434:	ea cf       	rjmp	.-44     	; 0x140a <__ultoa_invert+0x58>
    1436:	b4 e0       	ldi	r27, 0x04	; 4
    1438:	a6 95       	lsr	r26
    143a:	97 95       	ror	r25
    143c:	87 95       	ror	r24
    143e:	77 95       	ror	r23
    1440:	67 95       	ror	r22
    1442:	ba 95       	dec	r27
    1444:	c9 f7       	brne	.-14     	; 0x1438 <__ultoa_invert+0x86>
    1446:	00 97       	sbiw	r24, 0x00	; 0
    1448:	61 05       	cpc	r22, r1
    144a:	71 05       	cpc	r23, r1
    144c:	08 95       	ret
    144e:	9b 01       	movw	r18, r22
    1450:	ac 01       	movw	r20, r24
    1452:	0a 2e       	mov	r0, r26
    1454:	06 94       	lsr	r0
    1456:	57 95       	ror	r21
    1458:	47 95       	ror	r20
    145a:	37 95       	ror	r19
    145c:	27 95       	ror	r18
    145e:	ba 95       	dec	r27
    1460:	c9 f7       	brne	.-14     	; 0x1454 <__ultoa_invert+0xa2>
    1462:	62 0f       	add	r22, r18
    1464:	73 1f       	adc	r23, r19
    1466:	84 1f       	adc	r24, r20
    1468:	95 1f       	adc	r25, r21
    146a:	a0 1d       	adc	r26, r0
    146c:	08 95       	ret

0000146e <__prologue_saves__>:
    146e:	2f 92       	push	r2
    1470:	3f 92       	push	r3
    1472:	4f 92       	push	r4
    1474:	5f 92       	push	r5
    1476:	6f 92       	push	r6
    1478:	7f 92       	push	r7
    147a:	8f 92       	push	r8
    147c:	9f 92       	push	r9
    147e:	af 92       	push	r10
    1480:	bf 92       	push	r11
    1482:	cf 92       	push	r12
    1484:	df 92       	push	r13
    1486:	ef 92       	push	r14
    1488:	ff 92       	push	r15
    148a:	0f 93       	push	r16
    148c:	1f 93       	push	r17
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	cd b7       	in	r28, 0x3d	; 61
    1494:	de b7       	in	r29, 0x3e	; 62
    1496:	ca 1b       	sub	r28, r26
    1498:	db 0b       	sbc	r29, r27
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	09 94       	ijmp

000014a6 <__epilogue_restores__>:
    14a6:	2a 88       	ldd	r2, Y+18	; 0x12
    14a8:	39 88       	ldd	r3, Y+17	; 0x11
    14aa:	48 88       	ldd	r4, Y+16	; 0x10
    14ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    14ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    14b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    14b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    14b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    14b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    14b8:	b9 84       	ldd	r11, Y+9	; 0x09
    14ba:	c8 84       	ldd	r12, Y+8	; 0x08
    14bc:	df 80       	ldd	r13, Y+7	; 0x07
    14be:	ee 80       	ldd	r14, Y+6	; 0x06
    14c0:	fd 80       	ldd	r15, Y+5	; 0x05
    14c2:	0c 81       	ldd	r16, Y+4	; 0x04
    14c4:	1b 81       	ldd	r17, Y+3	; 0x03
    14c6:	aa 81       	ldd	r26, Y+2	; 0x02
    14c8:	b9 81       	ldd	r27, Y+1	; 0x01
    14ca:	ce 0f       	add	r28, r30
    14cc:	d1 1d       	adc	r29, r1
    14ce:	0f b6       	in	r0, 0x3f	; 63
    14d0:	f8 94       	cli
    14d2:	de bf       	out	0x3e, r29	; 62
    14d4:	0f be       	out	0x3f, r0	; 63
    14d6:	cd bf       	out	0x3d, r28	; 61
    14d8:	ed 01       	movw	r28, r26
    14da:	08 95       	ret

000014dc <_exit>:
    14dc:	f8 94       	cli

000014de <__stop_program>:
    14de:	ff cf       	rjmp	.-2      	; 0x14de <__stop_program>

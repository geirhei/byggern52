
Group52.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ec  00800100  00000c86  00000d1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c86  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001ec  008001ec  00000e06  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e06  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000e62  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003a1  00000000  00000000  00000eca  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000256  00000000  00000000  0000126b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000027d  00000000  00000000  000014c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001740  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000228  00000000  00000000  0000184c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e8  00000000  00000000  00001a74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00001c5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 e8       	ldi	r30, 0x86	; 134
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 3e       	cpi	r26, 0xEC	; 236
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac ee       	ldi	r26, 0xEC	; 236
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 3f       	cpi	r26, 0xF6	; 246
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  a6:	0c 94 41 06 	jmp	0xc82	; 0xc82 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_test>:
	PORTC ^= (1 << PC1);
}


void SRAM_test(void)
{
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  be:	8a e0       	ldi	r24, 0x0A	; 10
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	0e 94 b8 01 	call	0x370	; 0x370 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  c6:	0e 94 49 01 	call	0x292	; 0x292 <rand>
  ca:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  cc:	0e 94 4e 01 	call	0x29c	; 0x29c <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  d0:	c0 e0       	ldi	r28, 0x00	; 0
  d2:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  d4:	00 e0       	ldi	r16, 0x00	; 0
  d6:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
  d8:	0f 2e       	mov	r0, r31
  da:	f0 e2       	ldi	r31, 0x20	; 32
  dc:	ef 2e       	mov	r14, r31
  de:	f1 e0       	ldi	r31, 0x01	; 1
  e0:	ff 2e       	mov	r15, r31
  e2:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
  e4:	0e 94 49 01 	call	0x292	; 0x292 <rand>
  e8:	fe 01       	movw	r30, r28
  ea:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
  ec:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  ee:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
  f0:	28 17       	cp	r18, r24
  f2:	a9 f0       	breq	.+42     	; 0x11e <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
  f4:	99 27       	eor	r25, r25
  f6:	9f 93       	push	r25
  f8:	8f 93       	push	r24
  fa:	1f 92       	push	r1
  fc:	2f 93       	push	r18
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	ff 92       	push	r15
 104:	ef 92       	push	r14
 106:	0e 94 a4 01 	call	0x348	; 0x348 <printf>
			write_errors++;
 10a:	0f 5f       	subi	r16, 0xFF	; 255
 10c:	1f 4f       	sbci	r17, 0xFF	; 255
 10e:	8d b7       	in	r24, 0x3d	; 61
 110:	9e b7       	in	r25, 0x3e	; 62
 112:	08 96       	adiw	r24, 0x08	; 8
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	f8 94       	cli
 118:	9e bf       	out	0x3e, r25	; 62
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 11e:	21 96       	adiw	r28, 0x01	; 1
 120:	c1 15       	cp	r28, r1
 122:	98 e0       	ldi	r25, 0x08	; 8
 124:	d9 07       	cpc	r29, r25
 126:	f1 f6       	brne	.-68     	; 0xe4 <SRAM_test+0x36>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
 128:	c6 01       	movw	r24, r12
 12a:	0e 94 4e 01 	call	0x29c	; 0x29c <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 132:	e1 2c       	mov	r14, r1
 134:	f1 2c       	mov	r15, r1
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 136:	0f 2e       	mov	r0, r31
 138:	f9 e5       	ldi	r31, 0x59	; 89
 13a:	cf 2e       	mov	r12, r31
 13c:	f1 e0       	ldi	r31, 0x01	; 1
 13e:	df 2e       	mov	r13, r31
 140:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 142:	0e 94 49 01 	call	0x292	; 0x292 <rand>
 146:	fe 01       	movw	r30, r28
 148:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 14a:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 14c:	28 17       	cp	r18, r24
 14e:	b1 f0       	breq	.+44     	; 0x17c <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
 150:	99 27       	eor	r25, r25
 152:	9f 93       	push	r25
 154:	8f 93       	push	r24
 156:	1f 92       	push	r1
 158:	2f 93       	push	r18
 15a:	df 93       	push	r29
 15c:	cf 93       	push	r28
 15e:	df 92       	push	r13
 160:	cf 92       	push	r12
 162:	0e 94 a4 01 	call	0x348	; 0x348 <printf>
			retrieval_errors++;
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	e8 1a       	sub	r14, r24
 16a:	f8 0a       	sbc	r15, r24
 16c:	8d b7       	in	r24, 0x3d	; 61
 16e:	9e b7       	in	r25, 0x3e	; 62
 170:	08 96       	adiw	r24, 0x08	; 8
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	f8 94       	cli
 176:	9e bf       	out	0x3e, r25	; 62
 178:	0f be       	out	0x3f, r0	; 63
 17a:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 17c:	21 96       	adiw	r28, 0x01	; 1
 17e:	c1 15       	cp	r28, r1
 180:	98 e0       	ldi	r25, 0x08	; 8
 182:	d9 07       	cpc	r29, r25
 184:	f1 f6       	brne	.-68     	; 0x142 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errorsin write phase and\n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 186:	ff 92       	push	r15
 188:	ef 92       	push	r14
 18a:	1f 93       	push	r17
 18c:	0f 93       	push	r16
 18e:	86 e9       	ldi	r24, 0x96	; 150
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	0e 94 a4 01 	call	0x348	; 0x348 <printf>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	ff 90       	pop	r15
 1b0:	ef 90       	pop	r14
 1b2:	df 90       	pop	r13
 1b4:	cf 90       	pop	r12
 1b6:	08 95       	ret

000001b8 <main>:
void SRAM_test(void);

int main(void)
{
	/*Exercise 1*/
	fdevopen(usart_Transmit, usart_Receive);
 1b8:	67 ef       	ldi	r22, 0xF7	; 247
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	83 ef       	ldi	r24, 0xF3	; 243
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	0e 94 59 01 	call	0x2b2	; 0x2b2 <fdevopen>
	usart_Init(MYUBBR);
 1c4:	8f e1       	ldi	r24, 0x1F	; 31
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <usart_Init>
	//PORTC = 0x00;
	//PORTC = (1 << PC3);
	// Set ALE
	//PORTE = (1 << PE1);
	
	MCUCR |= (1 << SRE);
 1cc:	85 b7       	in	r24, 0x35	; 53
 1ce:	80 68       	ori	r24, 0x80	; 128
 1d0:	85 bf       	out	0x35, r24	; 53
	//Tests
	//DDRA = 0xFF;
	//DDRB = 0xFF;
	//DDRC = 0xFF;
	
	SRAM_test();
 1d2:	0e 94 57 00 	call	0xae	; 0xae <SRAM_test>
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <main+0x1e>

000001d8 <usart_Init>:
#include <avr/io.h>

void usart_Init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 1d8:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1da:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 1dc:	88 e1       	ldi	r24, 0x18	; 24
 1de:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ10);
 1e0:	8e e8       	ldi	r24, 0x8E	; 142
 1e2:	80 bd       	out	0x20, r24	; 32
 1e4:	08 95       	ret

000001e6 <usart_Transmit>:
}

void usart_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 1e6:	5d 9b       	sbis	0x0b, 5	; 11
 1e8:	fe cf       	rjmp	.-4      	; 0x1e6 <usart_Transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1ea:	8c b9       	out	0x0c, r24	; 12
 1ec:	08 95       	ret

000001ee <usart_Receive>:
}

unsigned char usart_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 1ee:	5f 9b       	sbis	0x0b, 7	; 11
 1f0:	fe cf       	rjmp	.-4      	; 0x1ee <usart_Receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
 1f2:	8c b1       	in	r24, 0x0c	; 12
}
 1f4:	08 95       	ret

000001f6 <do_rand>:
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
 20c:	68 81       	ld	r22, Y
 20e:	79 81       	ldd	r23, Y+1	; 0x01
 210:	8a 81       	ldd	r24, Y+2	; 0x02
 212:	9b 81       	ldd	r25, Y+3	; 0x03
 214:	61 15       	cp	r22, r1
 216:	71 05       	cpc	r23, r1
 218:	81 05       	cpc	r24, r1
 21a:	91 05       	cpc	r25, r1
 21c:	21 f4       	brne	.+8      	; 0x226 <do_rand+0x30>
 21e:	64 e2       	ldi	r22, 0x24	; 36
 220:	79 ed       	ldi	r23, 0xD9	; 217
 222:	8b e5       	ldi	r24, 0x5B	; 91
 224:	97 e0       	ldi	r25, 0x07	; 7
 226:	2d e1       	ldi	r18, 0x1D	; 29
 228:	33 ef       	ldi	r19, 0xF3	; 243
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__divmodsi4>
 232:	49 01       	movw	r8, r18
 234:	5a 01       	movw	r10, r20
 236:	9b 01       	movw	r18, r22
 238:	ac 01       	movw	r20, r24
 23a:	a7 ea       	ldi	r26, 0xA7	; 167
 23c:	b1 e4       	ldi	r27, 0x41	; 65
 23e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__muluhisi3>
 242:	6b 01       	movw	r12, r22
 244:	7c 01       	movw	r14, r24
 246:	ac ee       	ldi	r26, 0xEC	; 236
 248:	b4 ef       	ldi	r27, 0xF4	; 244
 24a:	a5 01       	movw	r20, r10
 24c:	94 01       	movw	r18, r8
 24e:	0e 94 d4 05 	call	0xba8	; 0xba8 <__mulohisi3>
 252:	c6 0e       	add	r12, r22
 254:	d7 1e       	adc	r13, r23
 256:	e8 1e       	adc	r14, r24
 258:	f9 1e       	adc	r15, r25
 25a:	f7 fe       	sbrs	r15, 7
 25c:	06 c0       	rjmp	.+12     	; 0x26a <do_rand+0x74>
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	c8 1a       	sub	r12, r24
 262:	d1 08       	sbc	r13, r1
 264:	e1 08       	sbc	r14, r1
 266:	80 e8       	ldi	r24, 0x80	; 128
 268:	f8 0a       	sbc	r15, r24
 26a:	c8 82       	st	Y, r12
 26c:	d9 82       	std	Y+1, r13	; 0x01
 26e:	ea 82       	std	Y+2, r14	; 0x02
 270:	fb 82       	std	Y+3, r15	; 0x03
 272:	c6 01       	movw	r24, r12
 274:	9f 77       	andi	r25, 0x7F	; 127
 276:	df 91       	pop	r29
 278:	cf 91       	pop	r28
 27a:	ff 90       	pop	r15
 27c:	ef 90       	pop	r14
 27e:	df 90       	pop	r13
 280:	cf 90       	pop	r12
 282:	bf 90       	pop	r11
 284:	af 90       	pop	r10
 286:	9f 90       	pop	r9
 288:	8f 90       	pop	r8
 28a:	08 95       	ret

0000028c <rand_r>:
 28c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <do_rand>
 290:	08 95       	ret

00000292 <rand>:
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	91 e0       	ldi	r25, 0x01	; 1
 296:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <do_rand>
 29a:	08 95       	ret

0000029c <srand>:
 29c:	a0 e0       	ldi	r26, 0x00	; 0
 29e:	b0 e0       	ldi	r27, 0x00	; 0
 2a0:	80 93 00 01 	sts	0x0100, r24
 2a4:	90 93 01 01 	sts	0x0101, r25
 2a8:	a0 93 02 01 	sts	0x0102, r26
 2ac:	b0 93 03 01 	sts	0x0103, r27
 2b0:	08 95       	ret

000002b2 <fdevopen>:
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	ec 01       	movw	r28, r24
 2bc:	8b 01       	movw	r16, r22
 2be:	00 97       	sbiw	r24, 0x00	; 0
 2c0:	31 f4       	brne	.+12     	; 0x2ce <fdevopen+0x1c>
 2c2:	61 15       	cp	r22, r1
 2c4:	71 05       	cpc	r23, r1
 2c6:	19 f4       	brne	.+6      	; 0x2ce <fdevopen+0x1c>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	38 c0       	rjmp	.+112    	; 0x33e <fdevopen+0x8c>
 2ce:	6e e0       	ldi	r22, 0x0E	; 14
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	0e 94 b7 03 	call	0x76e	; 0x76e <calloc>
 2da:	fc 01       	movw	r30, r24
 2dc:	00 97       	sbiw	r24, 0x00	; 0
 2de:	a1 f3       	breq	.-24     	; 0x2c8 <fdevopen+0x16>
 2e0:	80 e8       	ldi	r24, 0x80	; 128
 2e2:	83 83       	std	Z+3, r24	; 0x03
 2e4:	01 15       	cp	r16, r1
 2e6:	11 05       	cpc	r17, r1
 2e8:	71 f0       	breq	.+28     	; 0x306 <fdevopen+0x54>
 2ea:	13 87       	std	Z+11, r17	; 0x0b
 2ec:	02 87       	std	Z+10, r16	; 0x0a
 2ee:	81 e8       	ldi	r24, 0x81	; 129
 2f0:	83 83       	std	Z+3, r24	; 0x03
 2f2:	80 91 ec 01 	lds	r24, 0x01EC
 2f6:	90 91 ed 01 	lds	r25, 0x01ED
 2fa:	89 2b       	or	r24, r25
 2fc:	21 f4       	brne	.+8      	; 0x306 <fdevopen+0x54>
 2fe:	f0 93 ed 01 	sts	0x01ED, r31
 302:	e0 93 ec 01 	sts	0x01EC, r30
 306:	20 97       	sbiw	r28, 0x00	; 0
 308:	c9 f0       	breq	.+50     	; 0x33c <fdevopen+0x8a>
 30a:	d1 87       	std	Z+9, r29	; 0x09
 30c:	c0 87       	std	Z+8, r28	; 0x08
 30e:	83 81       	ldd	r24, Z+3	; 0x03
 310:	82 60       	ori	r24, 0x02	; 2
 312:	83 83       	std	Z+3, r24	; 0x03
 314:	80 91 ee 01 	lds	r24, 0x01EE
 318:	90 91 ef 01 	lds	r25, 0x01EF
 31c:	89 2b       	or	r24, r25
 31e:	71 f4       	brne	.+28     	; 0x33c <fdevopen+0x8a>
 320:	f0 93 ef 01 	sts	0x01EF, r31
 324:	e0 93 ee 01 	sts	0x01EE, r30
 328:	80 91 f0 01 	lds	r24, 0x01F0
 32c:	90 91 f1 01 	lds	r25, 0x01F1
 330:	89 2b       	or	r24, r25
 332:	21 f4       	brne	.+8      	; 0x33c <fdevopen+0x8a>
 334:	f0 93 f1 01 	sts	0x01F1, r31
 338:	e0 93 f0 01 	sts	0x01F0, r30
 33c:	cf 01       	movw	r24, r30
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	0f 91       	pop	r16
 346:	08 95       	ret

00000348 <printf>:
 348:	a0 e0       	ldi	r26, 0x00	; 0
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	ea ea       	ldi	r30, 0xAA	; 170
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	0c 94 e9 05 	jmp	0xbd2	; 0xbd2 <__prologue_saves__+0x20>
 354:	fe 01       	movw	r30, r28
 356:	35 96       	adiw	r30, 0x05	; 5
 358:	61 91       	ld	r22, Z+
 35a:	71 91       	ld	r23, Z+
 35c:	af 01       	movw	r20, r30
 35e:	80 91 ee 01 	lds	r24, 0x01EE
 362:	90 91 ef 01 	lds	r25, 0x01EF
 366:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vfprintf>
 36a:	e2 e0       	ldi	r30, 0x02	; 2
 36c:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__epilogue_restores__+0x20>

00000370 <puts>:
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	e0 91 ee 01 	lds	r30, 0x01EE
 37c:	f0 91 ef 01 	lds	r31, 0x01EF
 380:	23 81       	ldd	r18, Z+3	; 0x03
 382:	21 ff       	sbrs	r18, 1
 384:	1b c0       	rjmp	.+54     	; 0x3bc <puts+0x4c>
 386:	ec 01       	movw	r28, r24
 388:	00 e0       	ldi	r16, 0x00	; 0
 38a:	10 e0       	ldi	r17, 0x00	; 0
 38c:	89 91       	ld	r24, Y+
 38e:	60 91 ee 01 	lds	r22, 0x01EE
 392:	70 91 ef 01 	lds	r23, 0x01EF
 396:	db 01       	movw	r26, r22
 398:	18 96       	adiw	r26, 0x08	; 8
 39a:	ed 91       	ld	r30, X+
 39c:	fc 91       	ld	r31, X
 39e:	19 97       	sbiw	r26, 0x09	; 9
 3a0:	88 23       	and	r24, r24
 3a2:	31 f0       	breq	.+12     	; 0x3b0 <puts+0x40>
 3a4:	09 95       	icall
 3a6:	89 2b       	or	r24, r25
 3a8:	89 f3       	breq	.-30     	; 0x38c <puts+0x1c>
 3aa:	0f ef       	ldi	r16, 0xFF	; 255
 3ac:	1f ef       	ldi	r17, 0xFF	; 255
 3ae:	ee cf       	rjmp	.-36     	; 0x38c <puts+0x1c>
 3b0:	8a e0       	ldi	r24, 0x0A	; 10
 3b2:	09 95       	icall
 3b4:	89 2b       	or	r24, r25
 3b6:	11 f4       	brne	.+4      	; 0x3bc <puts+0x4c>
 3b8:	c8 01       	movw	r24, r16
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <puts+0x50>
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	9f ef       	ldi	r25, 0xFF	; 255
 3c0:	df 91       	pop	r29
 3c2:	cf 91       	pop	r28
 3c4:	1f 91       	pop	r17
 3c6:	0f 91       	pop	r16
 3c8:	08 95       	ret

000003ca <vfprintf>:
 3ca:	ac e0       	ldi	r26, 0x0C	; 12
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb ee       	ldi	r30, 0xEB	; 235
 3d0:	f1 e0       	ldi	r31, 0x01	; 1
 3d2:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <__prologue_saves__>
 3d6:	7c 01       	movw	r14, r24
 3d8:	6b 01       	movw	r12, r22
 3da:	8a 01       	movw	r16, r20
 3dc:	fc 01       	movw	r30, r24
 3de:	17 82       	std	Z+7, r1	; 0x07
 3e0:	16 82       	std	Z+6, r1	; 0x06
 3e2:	83 81       	ldd	r24, Z+3	; 0x03
 3e4:	81 ff       	sbrs	r24, 1
 3e6:	bd c1       	rjmp	.+890    	; 0x762 <__stack+0x263>
 3e8:	ce 01       	movw	r24, r28
 3ea:	01 96       	adiw	r24, 0x01	; 1
 3ec:	4c 01       	movw	r8, r24
 3ee:	f7 01       	movw	r30, r14
 3f0:	93 81       	ldd	r25, Z+3	; 0x03
 3f2:	f6 01       	movw	r30, r12
 3f4:	93 fd       	sbrc	r25, 3
 3f6:	85 91       	lpm	r24, Z+
 3f8:	93 ff       	sbrs	r25, 3
 3fa:	81 91       	ld	r24, Z+
 3fc:	6f 01       	movw	r12, r30
 3fe:	88 23       	and	r24, r24
 400:	09 f4       	brne	.+2      	; 0x404 <vfprintf+0x3a>
 402:	ab c1       	rjmp	.+854    	; 0x75a <__stack+0x25b>
 404:	85 32       	cpi	r24, 0x25	; 37
 406:	39 f4       	brne	.+14     	; 0x416 <vfprintf+0x4c>
 408:	93 fd       	sbrc	r25, 3
 40a:	85 91       	lpm	r24, Z+
 40c:	93 ff       	sbrs	r25, 3
 40e:	81 91       	ld	r24, Z+
 410:	6f 01       	movw	r12, r30
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	29 f4       	brne	.+10     	; 0x420 <vfprintf+0x56>
 416:	b7 01       	movw	r22, r14
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 41e:	e7 cf       	rjmp	.-50     	; 0x3ee <vfprintf+0x24>
 420:	51 2c       	mov	r5, r1
 422:	31 2c       	mov	r3, r1
 424:	20 e0       	ldi	r18, 0x00	; 0
 426:	20 32       	cpi	r18, 0x20	; 32
 428:	a0 f4       	brcc	.+40     	; 0x452 <vfprintf+0x88>
 42a:	8b 32       	cpi	r24, 0x2B	; 43
 42c:	69 f0       	breq	.+26     	; 0x448 <vfprintf+0x7e>
 42e:	30 f4       	brcc	.+12     	; 0x43c <vfprintf+0x72>
 430:	80 32       	cpi	r24, 0x20	; 32
 432:	59 f0       	breq	.+22     	; 0x44a <vfprintf+0x80>
 434:	83 32       	cpi	r24, 0x23	; 35
 436:	69 f4       	brne	.+26     	; 0x452 <vfprintf+0x88>
 438:	20 61       	ori	r18, 0x10	; 16
 43a:	2c c0       	rjmp	.+88     	; 0x494 <vfprintf+0xca>
 43c:	8d 32       	cpi	r24, 0x2D	; 45
 43e:	39 f0       	breq	.+14     	; 0x44e <vfprintf+0x84>
 440:	80 33       	cpi	r24, 0x30	; 48
 442:	39 f4       	brne	.+14     	; 0x452 <vfprintf+0x88>
 444:	21 60       	ori	r18, 0x01	; 1
 446:	26 c0       	rjmp	.+76     	; 0x494 <vfprintf+0xca>
 448:	22 60       	ori	r18, 0x02	; 2
 44a:	24 60       	ori	r18, 0x04	; 4
 44c:	23 c0       	rjmp	.+70     	; 0x494 <vfprintf+0xca>
 44e:	28 60       	ori	r18, 0x08	; 8
 450:	21 c0       	rjmp	.+66     	; 0x494 <vfprintf+0xca>
 452:	27 fd       	sbrc	r18, 7
 454:	27 c0       	rjmp	.+78     	; 0x4a4 <vfprintf+0xda>
 456:	30 ed       	ldi	r19, 0xD0	; 208
 458:	38 0f       	add	r19, r24
 45a:	3a 30       	cpi	r19, 0x0A	; 10
 45c:	78 f4       	brcc	.+30     	; 0x47c <vfprintf+0xb2>
 45e:	26 ff       	sbrs	r18, 6
 460:	06 c0       	rjmp	.+12     	; 0x46e <vfprintf+0xa4>
 462:	fa e0       	ldi	r31, 0x0A	; 10
 464:	5f 9e       	mul	r5, r31
 466:	30 0d       	add	r19, r0
 468:	11 24       	eor	r1, r1
 46a:	53 2e       	mov	r5, r19
 46c:	13 c0       	rjmp	.+38     	; 0x494 <vfprintf+0xca>
 46e:	8a e0       	ldi	r24, 0x0A	; 10
 470:	38 9e       	mul	r3, r24
 472:	30 0d       	add	r19, r0
 474:	11 24       	eor	r1, r1
 476:	33 2e       	mov	r3, r19
 478:	20 62       	ori	r18, 0x20	; 32
 47a:	0c c0       	rjmp	.+24     	; 0x494 <vfprintf+0xca>
 47c:	8e 32       	cpi	r24, 0x2E	; 46
 47e:	21 f4       	brne	.+8      	; 0x488 <vfprintf+0xbe>
 480:	26 fd       	sbrc	r18, 6
 482:	6b c1       	rjmp	.+726    	; 0x75a <__stack+0x25b>
 484:	20 64       	ori	r18, 0x40	; 64
 486:	06 c0       	rjmp	.+12     	; 0x494 <vfprintf+0xca>
 488:	8c 36       	cpi	r24, 0x6C	; 108
 48a:	11 f4       	brne	.+4      	; 0x490 <vfprintf+0xc6>
 48c:	20 68       	ori	r18, 0x80	; 128
 48e:	02 c0       	rjmp	.+4      	; 0x494 <vfprintf+0xca>
 490:	88 36       	cpi	r24, 0x68	; 104
 492:	41 f4       	brne	.+16     	; 0x4a4 <vfprintf+0xda>
 494:	f6 01       	movw	r30, r12
 496:	93 fd       	sbrc	r25, 3
 498:	85 91       	lpm	r24, Z+
 49a:	93 ff       	sbrs	r25, 3
 49c:	81 91       	ld	r24, Z+
 49e:	6f 01       	movw	r12, r30
 4a0:	81 11       	cpse	r24, r1
 4a2:	c1 cf       	rjmp	.-126    	; 0x426 <vfprintf+0x5c>
 4a4:	98 2f       	mov	r25, r24
 4a6:	9f 7d       	andi	r25, 0xDF	; 223
 4a8:	95 54       	subi	r25, 0x45	; 69
 4aa:	93 30       	cpi	r25, 0x03	; 3
 4ac:	28 f4       	brcc	.+10     	; 0x4b8 <vfprintf+0xee>
 4ae:	0c 5f       	subi	r16, 0xFC	; 252
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	ff e3       	ldi	r31, 0x3F	; 63
 4b4:	f9 83       	std	Y+1, r31	; 0x01
 4b6:	0d c0       	rjmp	.+26     	; 0x4d2 <vfprintf+0x108>
 4b8:	83 36       	cpi	r24, 0x63	; 99
 4ba:	31 f0       	breq	.+12     	; 0x4c8 <vfprintf+0xfe>
 4bc:	83 37       	cpi	r24, 0x73	; 115
 4be:	71 f0       	breq	.+28     	; 0x4dc <vfprintf+0x112>
 4c0:	83 35       	cpi	r24, 0x53	; 83
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <vfprintf+0xfc>
 4c4:	5b c0       	rjmp	.+182    	; 0x57c <__stack+0x7d>
 4c6:	22 c0       	rjmp	.+68     	; 0x50c <__stack+0xd>
 4c8:	f8 01       	movw	r30, r16
 4ca:	80 81       	ld	r24, Z
 4cc:	89 83       	std	Y+1, r24	; 0x01
 4ce:	0e 5f       	subi	r16, 0xFE	; 254
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	44 24       	eor	r4, r4
 4d4:	43 94       	inc	r4
 4d6:	51 2c       	mov	r5, r1
 4d8:	54 01       	movw	r10, r8
 4da:	15 c0       	rjmp	.+42     	; 0x506 <__stack+0x7>
 4dc:	38 01       	movw	r6, r16
 4de:	f2 e0       	ldi	r31, 0x02	; 2
 4e0:	6f 0e       	add	r6, r31
 4e2:	71 1c       	adc	r7, r1
 4e4:	f8 01       	movw	r30, r16
 4e6:	a0 80       	ld	r10, Z
 4e8:	b1 80       	ldd	r11, Z+1	; 0x01
 4ea:	26 ff       	sbrs	r18, 6
 4ec:	03 c0       	rjmp	.+6      	; 0x4f4 <vfprintf+0x12a>
 4ee:	65 2d       	mov	r22, r5
 4f0:	70 e0       	ldi	r23, 0x00	; 0
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <vfprintf+0x12e>
 4f4:	6f ef       	ldi	r22, 0xFF	; 255
 4f6:	7f ef       	ldi	r23, 0xFF	; 255
 4f8:	c5 01       	movw	r24, r10
 4fa:	2c 87       	std	Y+12, r18	; 0x0c
 4fc:	0e 94 0c 05 	call	0xa18	; 0xa18 <strnlen>
 500:	2c 01       	movw	r4, r24
 502:	83 01       	movw	r16, r6
 504:	2c 85       	ldd	r18, Y+12	; 0x0c
 506:	2f 77       	andi	r18, 0x7F	; 127
 508:	22 2e       	mov	r2, r18
 50a:	17 c0       	rjmp	.+46     	; 0x53a <__stack+0x3b>
 50c:	38 01       	movw	r6, r16
 50e:	f2 e0       	ldi	r31, 0x02	; 2
 510:	6f 0e       	add	r6, r31
 512:	71 1c       	adc	r7, r1
 514:	f8 01       	movw	r30, r16
 516:	a0 80       	ld	r10, Z
 518:	b1 80       	ldd	r11, Z+1	; 0x01
 51a:	26 ff       	sbrs	r18, 6
 51c:	03 c0       	rjmp	.+6      	; 0x524 <__stack+0x25>
 51e:	65 2d       	mov	r22, r5
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <__stack+0x29>
 524:	6f ef       	ldi	r22, 0xFF	; 255
 526:	7f ef       	ldi	r23, 0xFF	; 255
 528:	c5 01       	movw	r24, r10
 52a:	2c 87       	std	Y+12, r18	; 0x0c
 52c:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <strnlen_P>
 530:	2c 01       	movw	r4, r24
 532:	2c 85       	ldd	r18, Y+12	; 0x0c
 534:	20 68       	ori	r18, 0x80	; 128
 536:	22 2e       	mov	r2, r18
 538:	83 01       	movw	r16, r6
 53a:	23 fc       	sbrc	r2, 3
 53c:	1b c0       	rjmp	.+54     	; 0x574 <__stack+0x75>
 53e:	83 2d       	mov	r24, r3
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	48 16       	cp	r4, r24
 544:	59 06       	cpc	r5, r25
 546:	b0 f4       	brcc	.+44     	; 0x574 <__stack+0x75>
 548:	b7 01       	movw	r22, r14
 54a:	80 e2       	ldi	r24, 0x20	; 32
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 552:	3a 94       	dec	r3
 554:	f4 cf       	rjmp	.-24     	; 0x53e <__stack+0x3f>
 556:	f5 01       	movw	r30, r10
 558:	27 fc       	sbrc	r2, 7
 55a:	85 91       	lpm	r24, Z+
 55c:	27 fe       	sbrs	r2, 7
 55e:	81 91       	ld	r24, Z+
 560:	5f 01       	movw	r10, r30
 562:	b7 01       	movw	r22, r14
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 56a:	31 10       	cpse	r3, r1
 56c:	3a 94       	dec	r3
 56e:	f1 e0       	ldi	r31, 0x01	; 1
 570:	4f 1a       	sub	r4, r31
 572:	51 08       	sbc	r5, r1
 574:	41 14       	cp	r4, r1
 576:	51 04       	cpc	r5, r1
 578:	71 f7       	brne	.-36     	; 0x556 <__stack+0x57>
 57a:	e5 c0       	rjmp	.+458    	; 0x746 <__stack+0x247>
 57c:	84 36       	cpi	r24, 0x64	; 100
 57e:	11 f0       	breq	.+4      	; 0x584 <__stack+0x85>
 580:	89 36       	cpi	r24, 0x69	; 105
 582:	39 f5       	brne	.+78     	; 0x5d2 <__stack+0xd3>
 584:	f8 01       	movw	r30, r16
 586:	27 ff       	sbrs	r18, 7
 588:	07 c0       	rjmp	.+14     	; 0x598 <__stack+0x99>
 58a:	60 81       	ld	r22, Z
 58c:	71 81       	ldd	r23, Z+1	; 0x01
 58e:	82 81       	ldd	r24, Z+2	; 0x02
 590:	93 81       	ldd	r25, Z+3	; 0x03
 592:	0c 5f       	subi	r16, 0xFC	; 252
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	08 c0       	rjmp	.+16     	; 0x5a8 <__stack+0xa9>
 598:	60 81       	ld	r22, Z
 59a:	71 81       	ldd	r23, Z+1	; 0x01
 59c:	88 27       	eor	r24, r24
 59e:	77 fd       	sbrc	r23, 7
 5a0:	80 95       	com	r24
 5a2:	98 2f       	mov	r25, r24
 5a4:	0e 5f       	subi	r16, 0xFE	; 254
 5a6:	1f 4f       	sbci	r17, 0xFF	; 255
 5a8:	2f 76       	andi	r18, 0x6F	; 111
 5aa:	b2 2e       	mov	r11, r18
 5ac:	97 ff       	sbrs	r25, 7
 5ae:	09 c0       	rjmp	.+18     	; 0x5c2 <__stack+0xc3>
 5b0:	90 95       	com	r25
 5b2:	80 95       	com	r24
 5b4:	70 95       	com	r23
 5b6:	61 95       	neg	r22
 5b8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ba:	8f 4f       	sbci	r24, 0xFF	; 255
 5bc:	9f 4f       	sbci	r25, 0xFF	; 255
 5be:	20 68       	ori	r18, 0x80	; 128
 5c0:	b2 2e       	mov	r11, r18
 5c2:	2a e0       	ldi	r18, 0x0A	; 10
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	a4 01       	movw	r20, r8
 5c8:	0e 94 49 05 	call	0xa92	; 0xa92 <__ultoa_invert>
 5cc:	a8 2e       	mov	r10, r24
 5ce:	a8 18       	sub	r10, r8
 5d0:	44 c0       	rjmp	.+136    	; 0x65a <__stack+0x15b>
 5d2:	85 37       	cpi	r24, 0x75	; 117
 5d4:	29 f4       	brne	.+10     	; 0x5e0 <__stack+0xe1>
 5d6:	2f 7e       	andi	r18, 0xEF	; 239
 5d8:	b2 2e       	mov	r11, r18
 5da:	2a e0       	ldi	r18, 0x0A	; 10
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	25 c0       	rjmp	.+74     	; 0x62a <__stack+0x12b>
 5e0:	f2 2f       	mov	r31, r18
 5e2:	f9 7f       	andi	r31, 0xF9	; 249
 5e4:	bf 2e       	mov	r11, r31
 5e6:	8f 36       	cpi	r24, 0x6F	; 111
 5e8:	c1 f0       	breq	.+48     	; 0x61a <__stack+0x11b>
 5ea:	18 f4       	brcc	.+6      	; 0x5f2 <__stack+0xf3>
 5ec:	88 35       	cpi	r24, 0x58	; 88
 5ee:	79 f0       	breq	.+30     	; 0x60e <__stack+0x10f>
 5f0:	b4 c0       	rjmp	.+360    	; 0x75a <__stack+0x25b>
 5f2:	80 37       	cpi	r24, 0x70	; 112
 5f4:	19 f0       	breq	.+6      	; 0x5fc <__stack+0xfd>
 5f6:	88 37       	cpi	r24, 0x78	; 120
 5f8:	21 f0       	breq	.+8      	; 0x602 <__stack+0x103>
 5fa:	af c0       	rjmp	.+350    	; 0x75a <__stack+0x25b>
 5fc:	2f 2f       	mov	r18, r31
 5fe:	20 61       	ori	r18, 0x10	; 16
 600:	b2 2e       	mov	r11, r18
 602:	b4 fe       	sbrs	r11, 4
 604:	0d c0       	rjmp	.+26     	; 0x620 <__stack+0x121>
 606:	8b 2d       	mov	r24, r11
 608:	84 60       	ori	r24, 0x04	; 4
 60a:	b8 2e       	mov	r11, r24
 60c:	09 c0       	rjmp	.+18     	; 0x620 <__stack+0x121>
 60e:	24 ff       	sbrs	r18, 4
 610:	0a c0       	rjmp	.+20     	; 0x626 <__stack+0x127>
 612:	9f 2f       	mov	r25, r31
 614:	96 60       	ori	r25, 0x06	; 6
 616:	b9 2e       	mov	r11, r25
 618:	06 c0       	rjmp	.+12     	; 0x626 <__stack+0x127>
 61a:	28 e0       	ldi	r18, 0x08	; 8
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	05 c0       	rjmp	.+10     	; 0x62a <__stack+0x12b>
 620:	20 e1       	ldi	r18, 0x10	; 16
 622:	30 e0       	ldi	r19, 0x00	; 0
 624:	02 c0       	rjmp	.+4      	; 0x62a <__stack+0x12b>
 626:	20 e1       	ldi	r18, 0x10	; 16
 628:	32 e0       	ldi	r19, 0x02	; 2
 62a:	f8 01       	movw	r30, r16
 62c:	b7 fe       	sbrs	r11, 7
 62e:	07 c0       	rjmp	.+14     	; 0x63e <__stack+0x13f>
 630:	60 81       	ld	r22, Z
 632:	71 81       	ldd	r23, Z+1	; 0x01
 634:	82 81       	ldd	r24, Z+2	; 0x02
 636:	93 81       	ldd	r25, Z+3	; 0x03
 638:	0c 5f       	subi	r16, 0xFC	; 252
 63a:	1f 4f       	sbci	r17, 0xFF	; 255
 63c:	06 c0       	rjmp	.+12     	; 0x64a <__stack+0x14b>
 63e:	60 81       	ld	r22, Z
 640:	71 81       	ldd	r23, Z+1	; 0x01
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 5f       	subi	r16, 0xFE	; 254
 648:	1f 4f       	sbci	r17, 0xFF	; 255
 64a:	a4 01       	movw	r20, r8
 64c:	0e 94 49 05 	call	0xa92	; 0xa92 <__ultoa_invert>
 650:	a8 2e       	mov	r10, r24
 652:	a8 18       	sub	r10, r8
 654:	fb 2d       	mov	r31, r11
 656:	ff 77       	andi	r31, 0x7F	; 127
 658:	bf 2e       	mov	r11, r31
 65a:	b6 fe       	sbrs	r11, 6
 65c:	0b c0       	rjmp	.+22     	; 0x674 <__stack+0x175>
 65e:	2b 2d       	mov	r18, r11
 660:	2e 7f       	andi	r18, 0xFE	; 254
 662:	a5 14       	cp	r10, r5
 664:	50 f4       	brcc	.+20     	; 0x67a <__stack+0x17b>
 666:	b4 fe       	sbrs	r11, 4
 668:	0a c0       	rjmp	.+20     	; 0x67e <__stack+0x17f>
 66a:	b2 fc       	sbrc	r11, 2
 66c:	08 c0       	rjmp	.+16     	; 0x67e <__stack+0x17f>
 66e:	2b 2d       	mov	r18, r11
 670:	2e 7e       	andi	r18, 0xEE	; 238
 672:	05 c0       	rjmp	.+10     	; 0x67e <__stack+0x17f>
 674:	7a 2c       	mov	r7, r10
 676:	2b 2d       	mov	r18, r11
 678:	03 c0       	rjmp	.+6      	; 0x680 <__stack+0x181>
 67a:	7a 2c       	mov	r7, r10
 67c:	01 c0       	rjmp	.+2      	; 0x680 <__stack+0x181>
 67e:	75 2c       	mov	r7, r5
 680:	24 ff       	sbrs	r18, 4
 682:	0d c0       	rjmp	.+26     	; 0x69e <__stack+0x19f>
 684:	fe 01       	movw	r30, r28
 686:	ea 0d       	add	r30, r10
 688:	f1 1d       	adc	r31, r1
 68a:	80 81       	ld	r24, Z
 68c:	80 33       	cpi	r24, 0x30	; 48
 68e:	11 f4       	brne	.+4      	; 0x694 <__stack+0x195>
 690:	29 7e       	andi	r18, 0xE9	; 233
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <__stack+0x1a7>
 694:	22 ff       	sbrs	r18, 2
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__stack+0x1a5>
 698:	73 94       	inc	r7
 69a:	73 94       	inc	r7
 69c:	04 c0       	rjmp	.+8      	; 0x6a6 <__stack+0x1a7>
 69e:	82 2f       	mov	r24, r18
 6a0:	86 78       	andi	r24, 0x86	; 134
 6a2:	09 f0       	breq	.+2      	; 0x6a6 <__stack+0x1a7>
 6a4:	73 94       	inc	r7
 6a6:	23 fd       	sbrc	r18, 3
 6a8:	13 c0       	rjmp	.+38     	; 0x6d0 <__stack+0x1d1>
 6aa:	20 ff       	sbrs	r18, 0
 6ac:	06 c0       	rjmp	.+12     	; 0x6ba <__stack+0x1bb>
 6ae:	5a 2c       	mov	r5, r10
 6b0:	73 14       	cp	r7, r3
 6b2:	18 f4       	brcc	.+6      	; 0x6ba <__stack+0x1bb>
 6b4:	53 0c       	add	r5, r3
 6b6:	57 18       	sub	r5, r7
 6b8:	73 2c       	mov	r7, r3
 6ba:	73 14       	cp	r7, r3
 6bc:	68 f4       	brcc	.+26     	; 0x6d8 <__stack+0x1d9>
 6be:	b7 01       	movw	r22, r14
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	2c 87       	std	Y+12, r18	; 0x0c
 6c6:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 6ca:	73 94       	inc	r7
 6cc:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ce:	f5 cf       	rjmp	.-22     	; 0x6ba <__stack+0x1bb>
 6d0:	73 14       	cp	r7, r3
 6d2:	10 f4       	brcc	.+4      	; 0x6d8 <__stack+0x1d9>
 6d4:	37 18       	sub	r3, r7
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <__stack+0x1db>
 6d8:	31 2c       	mov	r3, r1
 6da:	24 ff       	sbrs	r18, 4
 6dc:	12 c0       	rjmp	.+36     	; 0x702 <__stack+0x203>
 6de:	b7 01       	movw	r22, r14
 6e0:	80 e3       	ldi	r24, 0x30	; 48
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	2c 87       	std	Y+12, r18	; 0x0c
 6e6:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 6ea:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ec:	22 ff       	sbrs	r18, 2
 6ee:	17 c0       	rjmp	.+46     	; 0x71e <__stack+0x21f>
 6f0:	21 ff       	sbrs	r18, 1
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <__stack+0x1fb>
 6f4:	88 e5       	ldi	r24, 0x58	; 88
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <__stack+0x1ff>
 6fa:	88 e7       	ldi	r24, 0x78	; 120
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	b7 01       	movw	r22, r14
 700:	0c c0       	rjmp	.+24     	; 0x71a <__stack+0x21b>
 702:	82 2f       	mov	r24, r18
 704:	86 78       	andi	r24, 0x86	; 134
 706:	59 f0       	breq	.+22     	; 0x71e <__stack+0x21f>
 708:	21 fd       	sbrc	r18, 1
 70a:	02 c0       	rjmp	.+4      	; 0x710 <__stack+0x211>
 70c:	80 e2       	ldi	r24, 0x20	; 32
 70e:	01 c0       	rjmp	.+2      	; 0x712 <__stack+0x213>
 710:	8b e2       	ldi	r24, 0x2B	; 43
 712:	27 fd       	sbrc	r18, 7
 714:	8d e2       	ldi	r24, 0x2D	; 45
 716:	b7 01       	movw	r22, r14
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 71e:	a5 14       	cp	r10, r5
 720:	38 f4       	brcc	.+14     	; 0x730 <__stack+0x231>
 722:	b7 01       	movw	r22, r14
 724:	80 e3       	ldi	r24, 0x30	; 48
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 72c:	5a 94       	dec	r5
 72e:	f7 cf       	rjmp	.-18     	; 0x71e <__stack+0x21f>
 730:	aa 94       	dec	r10
 732:	f4 01       	movw	r30, r8
 734:	ea 0d       	add	r30, r10
 736:	f1 1d       	adc	r31, r1
 738:	80 81       	ld	r24, Z
 73a:	b7 01       	movw	r22, r14
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 742:	a1 10       	cpse	r10, r1
 744:	f5 cf       	rjmp	.-22     	; 0x730 <__stack+0x231>
 746:	33 20       	and	r3, r3
 748:	09 f4       	brne	.+2      	; 0x74c <__stack+0x24d>
 74a:	51 ce       	rjmp	.-862    	; 0x3ee <vfprintf+0x24>
 74c:	b7 01       	movw	r22, r14
 74e:	80 e2       	ldi	r24, 0x20	; 32
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 17 05 	call	0xa2e	; 0xa2e <fputc>
 756:	3a 94       	dec	r3
 758:	f6 cf       	rjmp	.-20     	; 0x746 <__stack+0x247>
 75a:	f7 01       	movw	r30, r14
 75c:	86 81       	ldd	r24, Z+6	; 0x06
 75e:	97 81       	ldd	r25, Z+7	; 0x07
 760:	02 c0       	rjmp	.+4      	; 0x766 <__stack+0x267>
 762:	8f ef       	ldi	r24, 0xFF	; 255
 764:	9f ef       	ldi	r25, 0xFF	; 255
 766:	2c 96       	adiw	r28, 0x0c	; 12
 768:	e2 e1       	ldi	r30, 0x12	; 18
 76a:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__epilogue_restores__>

0000076e <calloc>:
 76e:	0f 93       	push	r16
 770:	1f 93       	push	r17
 772:	cf 93       	push	r28
 774:	df 93       	push	r29
 776:	86 9f       	mul	r24, r22
 778:	80 01       	movw	r16, r0
 77a:	87 9f       	mul	r24, r23
 77c:	10 0d       	add	r17, r0
 77e:	96 9f       	mul	r25, r22
 780:	10 0d       	add	r17, r0
 782:	11 24       	eor	r1, r1
 784:	c8 01       	movw	r24, r16
 786:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <malloc>
 78a:	ec 01       	movw	r28, r24
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	29 f0       	breq	.+10     	; 0x79a <calloc+0x2c>
 790:	a8 01       	movw	r20, r16
 792:	60 e0       	ldi	r22, 0x00	; 0
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	0e 94 05 05 	call	0xa0a	; 0xa0a <memset>
 79a:	ce 01       	movw	r24, r28
 79c:	df 91       	pop	r29
 79e:	cf 91       	pop	r28
 7a0:	1f 91       	pop	r17
 7a2:	0f 91       	pop	r16
 7a4:	08 95       	ret

000007a6 <malloc>:
 7a6:	cf 93       	push	r28
 7a8:	df 93       	push	r29
 7aa:	82 30       	cpi	r24, 0x02	; 2
 7ac:	91 05       	cpc	r25, r1
 7ae:	10 f4       	brcc	.+4      	; 0x7b4 <malloc+0xe>
 7b0:	82 e0       	ldi	r24, 0x02	; 2
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	e0 91 f4 01 	lds	r30, 0x01F4
 7b8:	f0 91 f5 01 	lds	r31, 0x01F5
 7bc:	20 e0       	ldi	r18, 0x00	; 0
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	a0 e0       	ldi	r26, 0x00	; 0
 7c2:	b0 e0       	ldi	r27, 0x00	; 0
 7c4:	30 97       	sbiw	r30, 0x00	; 0
 7c6:	39 f1       	breq	.+78     	; 0x816 <malloc+0x70>
 7c8:	40 81       	ld	r20, Z
 7ca:	51 81       	ldd	r21, Z+1	; 0x01
 7cc:	48 17       	cp	r20, r24
 7ce:	59 07       	cpc	r21, r25
 7d0:	b8 f0       	brcs	.+46     	; 0x800 <malloc+0x5a>
 7d2:	48 17       	cp	r20, r24
 7d4:	59 07       	cpc	r21, r25
 7d6:	71 f4       	brne	.+28     	; 0x7f4 <malloc+0x4e>
 7d8:	82 81       	ldd	r24, Z+2	; 0x02
 7da:	93 81       	ldd	r25, Z+3	; 0x03
 7dc:	10 97       	sbiw	r26, 0x00	; 0
 7de:	29 f0       	breq	.+10     	; 0x7ea <malloc+0x44>
 7e0:	13 96       	adiw	r26, 0x03	; 3
 7e2:	9c 93       	st	X, r25
 7e4:	8e 93       	st	-X, r24
 7e6:	12 97       	sbiw	r26, 0x02	; 2
 7e8:	2c c0       	rjmp	.+88     	; 0x842 <malloc+0x9c>
 7ea:	90 93 f5 01 	sts	0x01F5, r25
 7ee:	80 93 f4 01 	sts	0x01F4, r24
 7f2:	27 c0       	rjmp	.+78     	; 0x842 <malloc+0x9c>
 7f4:	21 15       	cp	r18, r1
 7f6:	31 05       	cpc	r19, r1
 7f8:	31 f0       	breq	.+12     	; 0x806 <malloc+0x60>
 7fa:	42 17       	cp	r20, r18
 7fc:	53 07       	cpc	r21, r19
 7fe:	18 f0       	brcs	.+6      	; 0x806 <malloc+0x60>
 800:	a9 01       	movw	r20, r18
 802:	db 01       	movw	r26, r22
 804:	01 c0       	rjmp	.+2      	; 0x808 <malloc+0x62>
 806:	ef 01       	movw	r28, r30
 808:	9a 01       	movw	r18, r20
 80a:	bd 01       	movw	r22, r26
 80c:	df 01       	movw	r26, r30
 80e:	02 80       	ldd	r0, Z+2	; 0x02
 810:	f3 81       	ldd	r31, Z+3	; 0x03
 812:	e0 2d       	mov	r30, r0
 814:	d7 cf       	rjmp	.-82     	; 0x7c4 <malloc+0x1e>
 816:	21 15       	cp	r18, r1
 818:	31 05       	cpc	r19, r1
 81a:	f9 f0       	breq	.+62     	; 0x85a <malloc+0xb4>
 81c:	28 1b       	sub	r18, r24
 81e:	39 0b       	sbc	r19, r25
 820:	24 30       	cpi	r18, 0x04	; 4
 822:	31 05       	cpc	r19, r1
 824:	80 f4       	brcc	.+32     	; 0x846 <malloc+0xa0>
 826:	8a 81       	ldd	r24, Y+2	; 0x02
 828:	9b 81       	ldd	r25, Y+3	; 0x03
 82a:	61 15       	cp	r22, r1
 82c:	71 05       	cpc	r23, r1
 82e:	21 f0       	breq	.+8      	; 0x838 <malloc+0x92>
 830:	fb 01       	movw	r30, r22
 832:	93 83       	std	Z+3, r25	; 0x03
 834:	82 83       	std	Z+2, r24	; 0x02
 836:	04 c0       	rjmp	.+8      	; 0x840 <malloc+0x9a>
 838:	90 93 f5 01 	sts	0x01F5, r25
 83c:	80 93 f4 01 	sts	0x01F4, r24
 840:	fe 01       	movw	r30, r28
 842:	32 96       	adiw	r30, 0x02	; 2
 844:	44 c0       	rjmp	.+136    	; 0x8ce <malloc+0x128>
 846:	fe 01       	movw	r30, r28
 848:	e2 0f       	add	r30, r18
 84a:	f3 1f       	adc	r31, r19
 84c:	81 93       	st	Z+, r24
 84e:	91 93       	st	Z+, r25
 850:	22 50       	subi	r18, 0x02	; 2
 852:	31 09       	sbc	r19, r1
 854:	39 83       	std	Y+1, r19	; 0x01
 856:	28 83       	st	Y, r18
 858:	3a c0       	rjmp	.+116    	; 0x8ce <malloc+0x128>
 85a:	20 91 f2 01 	lds	r18, 0x01F2
 85e:	30 91 f3 01 	lds	r19, 0x01F3
 862:	23 2b       	or	r18, r19
 864:	41 f4       	brne	.+16     	; 0x876 <malloc+0xd0>
 866:	20 91 06 01 	lds	r18, 0x0106
 86a:	30 91 07 01 	lds	r19, 0x0107
 86e:	30 93 f3 01 	sts	0x01F3, r19
 872:	20 93 f2 01 	sts	0x01F2, r18
 876:	20 91 04 01 	lds	r18, 0x0104
 87a:	30 91 05 01 	lds	r19, 0x0105
 87e:	21 15       	cp	r18, r1
 880:	31 05       	cpc	r19, r1
 882:	41 f4       	brne	.+16     	; 0x894 <malloc+0xee>
 884:	2d b7       	in	r18, 0x3d	; 61
 886:	3e b7       	in	r19, 0x3e	; 62
 888:	40 91 08 01 	lds	r20, 0x0108
 88c:	50 91 09 01 	lds	r21, 0x0109
 890:	24 1b       	sub	r18, r20
 892:	35 0b       	sbc	r19, r21
 894:	e0 91 f2 01 	lds	r30, 0x01F2
 898:	f0 91 f3 01 	lds	r31, 0x01F3
 89c:	e2 17       	cp	r30, r18
 89e:	f3 07       	cpc	r31, r19
 8a0:	a0 f4       	brcc	.+40     	; 0x8ca <malloc+0x124>
 8a2:	2e 1b       	sub	r18, r30
 8a4:	3f 0b       	sbc	r19, r31
 8a6:	28 17       	cp	r18, r24
 8a8:	39 07       	cpc	r19, r25
 8aa:	78 f0       	brcs	.+30     	; 0x8ca <malloc+0x124>
 8ac:	ac 01       	movw	r20, r24
 8ae:	4e 5f       	subi	r20, 0xFE	; 254
 8b0:	5f 4f       	sbci	r21, 0xFF	; 255
 8b2:	24 17       	cp	r18, r20
 8b4:	35 07       	cpc	r19, r21
 8b6:	48 f0       	brcs	.+18     	; 0x8ca <malloc+0x124>
 8b8:	4e 0f       	add	r20, r30
 8ba:	5f 1f       	adc	r21, r31
 8bc:	50 93 f3 01 	sts	0x01F3, r21
 8c0:	40 93 f2 01 	sts	0x01F2, r20
 8c4:	81 93       	st	Z+, r24
 8c6:	91 93       	st	Z+, r25
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <malloc+0x128>
 8ca:	e0 e0       	ldi	r30, 0x00	; 0
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	cf 01       	movw	r24, r30
 8d0:	df 91       	pop	r29
 8d2:	cf 91       	pop	r28
 8d4:	08 95       	ret

000008d6 <free>:
 8d6:	cf 93       	push	r28
 8d8:	df 93       	push	r29
 8da:	00 97       	sbiw	r24, 0x00	; 0
 8dc:	09 f4       	brne	.+2      	; 0x8e0 <free+0xa>
 8de:	87 c0       	rjmp	.+270    	; 0x9ee <free+0x118>
 8e0:	fc 01       	movw	r30, r24
 8e2:	32 97       	sbiw	r30, 0x02	; 2
 8e4:	13 82       	std	Z+3, r1	; 0x03
 8e6:	12 82       	std	Z+2, r1	; 0x02
 8e8:	c0 91 f4 01 	lds	r28, 0x01F4
 8ec:	d0 91 f5 01 	lds	r29, 0x01F5
 8f0:	20 97       	sbiw	r28, 0x00	; 0
 8f2:	81 f4       	brne	.+32     	; 0x914 <free+0x3e>
 8f4:	20 81       	ld	r18, Z
 8f6:	31 81       	ldd	r19, Z+1	; 0x01
 8f8:	28 0f       	add	r18, r24
 8fa:	39 1f       	adc	r19, r25
 8fc:	80 91 f2 01 	lds	r24, 0x01F2
 900:	90 91 f3 01 	lds	r25, 0x01F3
 904:	82 17       	cp	r24, r18
 906:	93 07       	cpc	r25, r19
 908:	79 f5       	brne	.+94     	; 0x968 <free+0x92>
 90a:	f0 93 f3 01 	sts	0x01F3, r31
 90e:	e0 93 f2 01 	sts	0x01F2, r30
 912:	6d c0       	rjmp	.+218    	; 0x9ee <free+0x118>
 914:	de 01       	movw	r26, r28
 916:	20 e0       	ldi	r18, 0x00	; 0
 918:	30 e0       	ldi	r19, 0x00	; 0
 91a:	ae 17       	cp	r26, r30
 91c:	bf 07       	cpc	r27, r31
 91e:	50 f4       	brcc	.+20     	; 0x934 <free+0x5e>
 920:	12 96       	adiw	r26, 0x02	; 2
 922:	4d 91       	ld	r20, X+
 924:	5c 91       	ld	r21, X
 926:	13 97       	sbiw	r26, 0x03	; 3
 928:	9d 01       	movw	r18, r26
 92a:	41 15       	cp	r20, r1
 92c:	51 05       	cpc	r21, r1
 92e:	09 f1       	breq	.+66     	; 0x972 <free+0x9c>
 930:	da 01       	movw	r26, r20
 932:	f3 cf       	rjmp	.-26     	; 0x91a <free+0x44>
 934:	b3 83       	std	Z+3, r27	; 0x03
 936:	a2 83       	std	Z+2, r26	; 0x02
 938:	40 81       	ld	r20, Z
 93a:	51 81       	ldd	r21, Z+1	; 0x01
 93c:	84 0f       	add	r24, r20
 93e:	95 1f       	adc	r25, r21
 940:	8a 17       	cp	r24, r26
 942:	9b 07       	cpc	r25, r27
 944:	71 f4       	brne	.+28     	; 0x962 <free+0x8c>
 946:	8d 91       	ld	r24, X+
 948:	9c 91       	ld	r25, X
 94a:	11 97       	sbiw	r26, 0x01	; 1
 94c:	84 0f       	add	r24, r20
 94e:	95 1f       	adc	r25, r21
 950:	02 96       	adiw	r24, 0x02	; 2
 952:	91 83       	std	Z+1, r25	; 0x01
 954:	80 83       	st	Z, r24
 956:	12 96       	adiw	r26, 0x02	; 2
 958:	8d 91       	ld	r24, X+
 95a:	9c 91       	ld	r25, X
 95c:	13 97       	sbiw	r26, 0x03	; 3
 95e:	93 83       	std	Z+3, r25	; 0x03
 960:	82 83       	std	Z+2, r24	; 0x02
 962:	21 15       	cp	r18, r1
 964:	31 05       	cpc	r19, r1
 966:	29 f4       	brne	.+10     	; 0x972 <free+0x9c>
 968:	f0 93 f5 01 	sts	0x01F5, r31
 96c:	e0 93 f4 01 	sts	0x01F4, r30
 970:	3e c0       	rjmp	.+124    	; 0x9ee <free+0x118>
 972:	d9 01       	movw	r26, r18
 974:	13 96       	adiw	r26, 0x03	; 3
 976:	fc 93       	st	X, r31
 978:	ee 93       	st	-X, r30
 97a:	12 97       	sbiw	r26, 0x02	; 2
 97c:	4d 91       	ld	r20, X+
 97e:	5d 91       	ld	r21, X+
 980:	a4 0f       	add	r26, r20
 982:	b5 1f       	adc	r27, r21
 984:	ea 17       	cp	r30, r26
 986:	fb 07       	cpc	r31, r27
 988:	79 f4       	brne	.+30     	; 0x9a8 <free+0xd2>
 98a:	80 81       	ld	r24, Z
 98c:	91 81       	ldd	r25, Z+1	; 0x01
 98e:	84 0f       	add	r24, r20
 990:	95 1f       	adc	r25, r21
 992:	02 96       	adiw	r24, 0x02	; 2
 994:	d9 01       	movw	r26, r18
 996:	11 96       	adiw	r26, 0x01	; 1
 998:	9c 93       	st	X, r25
 99a:	8e 93       	st	-X, r24
 99c:	82 81       	ldd	r24, Z+2	; 0x02
 99e:	93 81       	ldd	r25, Z+3	; 0x03
 9a0:	13 96       	adiw	r26, 0x03	; 3
 9a2:	9c 93       	st	X, r25
 9a4:	8e 93       	st	-X, r24
 9a6:	12 97       	sbiw	r26, 0x02	; 2
 9a8:	e0 e0       	ldi	r30, 0x00	; 0
 9aa:	f0 e0       	ldi	r31, 0x00	; 0
 9ac:	8a 81       	ldd	r24, Y+2	; 0x02
 9ae:	9b 81       	ldd	r25, Y+3	; 0x03
 9b0:	00 97       	sbiw	r24, 0x00	; 0
 9b2:	19 f0       	breq	.+6      	; 0x9ba <free+0xe4>
 9b4:	fe 01       	movw	r30, r28
 9b6:	ec 01       	movw	r28, r24
 9b8:	f9 cf       	rjmp	.-14     	; 0x9ac <free+0xd6>
 9ba:	ce 01       	movw	r24, r28
 9bc:	02 96       	adiw	r24, 0x02	; 2
 9be:	28 81       	ld	r18, Y
 9c0:	39 81       	ldd	r19, Y+1	; 0x01
 9c2:	82 0f       	add	r24, r18
 9c4:	93 1f       	adc	r25, r19
 9c6:	20 91 f2 01 	lds	r18, 0x01F2
 9ca:	30 91 f3 01 	lds	r19, 0x01F3
 9ce:	28 17       	cp	r18, r24
 9d0:	39 07       	cpc	r19, r25
 9d2:	69 f4       	brne	.+26     	; 0x9ee <free+0x118>
 9d4:	30 97       	sbiw	r30, 0x00	; 0
 9d6:	29 f4       	brne	.+10     	; 0x9e2 <free+0x10c>
 9d8:	10 92 f5 01 	sts	0x01F5, r1
 9dc:	10 92 f4 01 	sts	0x01F4, r1
 9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <free+0x110>
 9e2:	13 82       	std	Z+3, r1	; 0x03
 9e4:	12 82       	std	Z+2, r1	; 0x02
 9e6:	d0 93 f3 01 	sts	0x01F3, r29
 9ea:	c0 93 f2 01 	sts	0x01F2, r28
 9ee:	df 91       	pop	r29
 9f0:	cf 91       	pop	r28
 9f2:	08 95       	ret

000009f4 <strnlen_P>:
 9f4:	fc 01       	movw	r30, r24
 9f6:	05 90       	lpm	r0, Z+
 9f8:	61 50       	subi	r22, 0x01	; 1
 9fa:	70 40       	sbci	r23, 0x00	; 0
 9fc:	01 10       	cpse	r0, r1
 9fe:	d8 f7       	brcc	.-10     	; 0x9f6 <strnlen_P+0x2>
 a00:	80 95       	com	r24
 a02:	90 95       	com	r25
 a04:	8e 0f       	add	r24, r30
 a06:	9f 1f       	adc	r25, r31
 a08:	08 95       	ret

00000a0a <memset>:
 a0a:	dc 01       	movw	r26, r24
 a0c:	01 c0       	rjmp	.+2      	; 0xa10 <memset+0x6>
 a0e:	6d 93       	st	X+, r22
 a10:	41 50       	subi	r20, 0x01	; 1
 a12:	50 40       	sbci	r21, 0x00	; 0
 a14:	e0 f7       	brcc	.-8      	; 0xa0e <memset+0x4>
 a16:	08 95       	ret

00000a18 <strnlen>:
 a18:	fc 01       	movw	r30, r24
 a1a:	61 50       	subi	r22, 0x01	; 1
 a1c:	70 40       	sbci	r23, 0x00	; 0
 a1e:	01 90       	ld	r0, Z+
 a20:	01 10       	cpse	r0, r1
 a22:	d8 f7       	brcc	.-10     	; 0xa1a <strnlen+0x2>
 a24:	80 95       	com	r24
 a26:	90 95       	com	r25
 a28:	8e 0f       	add	r24, r30
 a2a:	9f 1f       	adc	r25, r31
 a2c:	08 95       	ret

00000a2e <fputc>:
 a2e:	0f 93       	push	r16
 a30:	1f 93       	push	r17
 a32:	cf 93       	push	r28
 a34:	df 93       	push	r29
 a36:	18 2f       	mov	r17, r24
 a38:	09 2f       	mov	r16, r25
 a3a:	eb 01       	movw	r28, r22
 a3c:	8b 81       	ldd	r24, Y+3	; 0x03
 a3e:	81 fd       	sbrc	r24, 1
 a40:	03 c0       	rjmp	.+6      	; 0xa48 <fputc+0x1a>
 a42:	8f ef       	ldi	r24, 0xFF	; 255
 a44:	9f ef       	ldi	r25, 0xFF	; 255
 a46:	20 c0       	rjmp	.+64     	; 0xa88 <fputc+0x5a>
 a48:	82 ff       	sbrs	r24, 2
 a4a:	10 c0       	rjmp	.+32     	; 0xa6c <fputc+0x3e>
 a4c:	4e 81       	ldd	r20, Y+6	; 0x06
 a4e:	5f 81       	ldd	r21, Y+7	; 0x07
 a50:	2c 81       	ldd	r18, Y+4	; 0x04
 a52:	3d 81       	ldd	r19, Y+5	; 0x05
 a54:	42 17       	cp	r20, r18
 a56:	53 07       	cpc	r21, r19
 a58:	7c f4       	brge	.+30     	; 0xa78 <fputc+0x4a>
 a5a:	e8 81       	ld	r30, Y
 a5c:	f9 81       	ldd	r31, Y+1	; 0x01
 a5e:	9f 01       	movw	r18, r30
 a60:	2f 5f       	subi	r18, 0xFF	; 255
 a62:	3f 4f       	sbci	r19, 0xFF	; 255
 a64:	39 83       	std	Y+1, r19	; 0x01
 a66:	28 83       	st	Y, r18
 a68:	10 83       	st	Z, r17
 a6a:	06 c0       	rjmp	.+12     	; 0xa78 <fputc+0x4a>
 a6c:	e8 85       	ldd	r30, Y+8	; 0x08
 a6e:	f9 85       	ldd	r31, Y+9	; 0x09
 a70:	81 2f       	mov	r24, r17
 a72:	09 95       	icall
 a74:	89 2b       	or	r24, r25
 a76:	29 f7       	brne	.-54     	; 0xa42 <fputc+0x14>
 a78:	2e 81       	ldd	r18, Y+6	; 0x06
 a7a:	3f 81       	ldd	r19, Y+7	; 0x07
 a7c:	2f 5f       	subi	r18, 0xFF	; 255
 a7e:	3f 4f       	sbci	r19, 0xFF	; 255
 a80:	3f 83       	std	Y+7, r19	; 0x07
 a82:	2e 83       	std	Y+6, r18	; 0x06
 a84:	81 2f       	mov	r24, r17
 a86:	90 2f       	mov	r25, r16
 a88:	df 91       	pop	r29
 a8a:	cf 91       	pop	r28
 a8c:	1f 91       	pop	r17
 a8e:	0f 91       	pop	r16
 a90:	08 95       	ret

00000a92 <__ultoa_invert>:
 a92:	fa 01       	movw	r30, r20
 a94:	aa 27       	eor	r26, r26
 a96:	28 30       	cpi	r18, 0x08	; 8
 a98:	51 f1       	breq	.+84     	; 0xaee <__ultoa_invert+0x5c>
 a9a:	20 31       	cpi	r18, 0x10	; 16
 a9c:	81 f1       	breq	.+96     	; 0xafe <__ultoa_invert+0x6c>
 a9e:	e8 94       	clt
 aa0:	6f 93       	push	r22
 aa2:	6e 7f       	andi	r22, 0xFE	; 254
 aa4:	6e 5f       	subi	r22, 0xFE	; 254
 aa6:	7f 4f       	sbci	r23, 0xFF	; 255
 aa8:	8f 4f       	sbci	r24, 0xFF	; 255
 aaa:	9f 4f       	sbci	r25, 0xFF	; 255
 aac:	af 4f       	sbci	r26, 0xFF	; 255
 aae:	b1 e0       	ldi	r27, 0x01	; 1
 ab0:	3e d0       	rcall	.+124    	; 0xb2e <__ultoa_invert+0x9c>
 ab2:	b4 e0       	ldi	r27, 0x04	; 4
 ab4:	3c d0       	rcall	.+120    	; 0xb2e <__ultoa_invert+0x9c>
 ab6:	67 0f       	add	r22, r23
 ab8:	78 1f       	adc	r23, r24
 aba:	89 1f       	adc	r24, r25
 abc:	9a 1f       	adc	r25, r26
 abe:	a1 1d       	adc	r26, r1
 ac0:	68 0f       	add	r22, r24
 ac2:	79 1f       	adc	r23, r25
 ac4:	8a 1f       	adc	r24, r26
 ac6:	91 1d       	adc	r25, r1
 ac8:	a1 1d       	adc	r26, r1
 aca:	6a 0f       	add	r22, r26
 acc:	71 1d       	adc	r23, r1
 ace:	81 1d       	adc	r24, r1
 ad0:	91 1d       	adc	r25, r1
 ad2:	a1 1d       	adc	r26, r1
 ad4:	20 d0       	rcall	.+64     	; 0xb16 <__ultoa_invert+0x84>
 ad6:	09 f4       	brne	.+2      	; 0xada <__ultoa_invert+0x48>
 ad8:	68 94       	set
 ada:	3f 91       	pop	r19
 adc:	2a e0       	ldi	r18, 0x0A	; 10
 ade:	26 9f       	mul	r18, r22
 ae0:	11 24       	eor	r1, r1
 ae2:	30 19       	sub	r19, r0
 ae4:	30 5d       	subi	r19, 0xD0	; 208
 ae6:	31 93       	st	Z+, r19
 ae8:	de f6       	brtc	.-74     	; 0xaa0 <__ultoa_invert+0xe>
 aea:	cf 01       	movw	r24, r30
 aec:	08 95       	ret
 aee:	46 2f       	mov	r20, r22
 af0:	47 70       	andi	r20, 0x07	; 7
 af2:	40 5d       	subi	r20, 0xD0	; 208
 af4:	41 93       	st	Z+, r20
 af6:	b3 e0       	ldi	r27, 0x03	; 3
 af8:	0f d0       	rcall	.+30     	; 0xb18 <__ultoa_invert+0x86>
 afa:	c9 f7       	brne	.-14     	; 0xaee <__ultoa_invert+0x5c>
 afc:	f6 cf       	rjmp	.-20     	; 0xaea <__ultoa_invert+0x58>
 afe:	46 2f       	mov	r20, r22
 b00:	4f 70       	andi	r20, 0x0F	; 15
 b02:	40 5d       	subi	r20, 0xD0	; 208
 b04:	4a 33       	cpi	r20, 0x3A	; 58
 b06:	18 f0       	brcs	.+6      	; 0xb0e <__ultoa_invert+0x7c>
 b08:	49 5d       	subi	r20, 0xD9	; 217
 b0a:	31 fd       	sbrc	r19, 1
 b0c:	40 52       	subi	r20, 0x20	; 32
 b0e:	41 93       	st	Z+, r20
 b10:	02 d0       	rcall	.+4      	; 0xb16 <__ultoa_invert+0x84>
 b12:	a9 f7       	brne	.-22     	; 0xafe <__ultoa_invert+0x6c>
 b14:	ea cf       	rjmp	.-44     	; 0xaea <__ultoa_invert+0x58>
 b16:	b4 e0       	ldi	r27, 0x04	; 4
 b18:	a6 95       	lsr	r26
 b1a:	97 95       	ror	r25
 b1c:	87 95       	ror	r24
 b1e:	77 95       	ror	r23
 b20:	67 95       	ror	r22
 b22:	ba 95       	dec	r27
 b24:	c9 f7       	brne	.-14     	; 0xb18 <__ultoa_invert+0x86>
 b26:	00 97       	sbiw	r24, 0x00	; 0
 b28:	61 05       	cpc	r22, r1
 b2a:	71 05       	cpc	r23, r1
 b2c:	08 95       	ret
 b2e:	9b 01       	movw	r18, r22
 b30:	ac 01       	movw	r20, r24
 b32:	0a 2e       	mov	r0, r26
 b34:	06 94       	lsr	r0
 b36:	57 95       	ror	r21
 b38:	47 95       	ror	r20
 b3a:	37 95       	ror	r19
 b3c:	27 95       	ror	r18
 b3e:	ba 95       	dec	r27
 b40:	c9 f7       	brne	.-14     	; 0xb34 <__ultoa_invert+0xa2>
 b42:	62 0f       	add	r22, r18
 b44:	73 1f       	adc	r23, r19
 b46:	84 1f       	adc	r24, r20
 b48:	95 1f       	adc	r25, r21
 b4a:	a0 1d       	adc	r26, r0
 b4c:	08 95       	ret

00000b4e <__divmodsi4>:
 b4e:	05 2e       	mov	r0, r21
 b50:	97 fb       	bst	r25, 7
 b52:	1e f4       	brtc	.+6      	; 0xb5a <__divmodsi4+0xc>
 b54:	00 94       	com	r0
 b56:	0e 94 be 05 	call	0xb7c	; 0xb7c <__negsi2>
 b5a:	57 fd       	sbrc	r21, 7
 b5c:	07 d0       	rcall	.+14     	; 0xb6c <__divmodsi4_neg2>
 b5e:	0e 94 10 06 	call	0xc20	; 0xc20 <__udivmodsi4>
 b62:	07 fc       	sbrc	r0, 7
 b64:	03 d0       	rcall	.+6      	; 0xb6c <__divmodsi4_neg2>
 b66:	4e f4       	brtc	.+18     	; 0xb7a <__divmodsi4_exit>
 b68:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__negsi2>

00000b6c <__divmodsi4_neg2>:
 b6c:	50 95       	com	r21
 b6e:	40 95       	com	r20
 b70:	30 95       	com	r19
 b72:	21 95       	neg	r18
 b74:	3f 4f       	sbci	r19, 0xFF	; 255
 b76:	4f 4f       	sbci	r20, 0xFF	; 255
 b78:	5f 4f       	sbci	r21, 0xFF	; 255

00000b7a <__divmodsi4_exit>:
 b7a:	08 95       	ret

00000b7c <__negsi2>:
 b7c:	90 95       	com	r25
 b7e:	80 95       	com	r24
 b80:	70 95       	com	r23
 b82:	61 95       	neg	r22
 b84:	7f 4f       	sbci	r23, 0xFF	; 255
 b86:	8f 4f       	sbci	r24, 0xFF	; 255
 b88:	9f 4f       	sbci	r25, 0xFF	; 255
 b8a:	08 95       	ret

00000b8c <__muluhisi3>:
 b8c:	0e 94 32 06 	call	0xc64	; 0xc64 <__umulhisi3>
 b90:	a5 9f       	mul	r26, r21
 b92:	90 0d       	add	r25, r0
 b94:	b4 9f       	mul	r27, r20
 b96:	90 0d       	add	r25, r0
 b98:	a4 9f       	mul	r26, r20
 b9a:	80 0d       	add	r24, r0
 b9c:	91 1d       	adc	r25, r1
 b9e:	11 24       	eor	r1, r1
 ba0:	08 95       	ret

00000ba2 <__mulshisi3>:
 ba2:	b7 ff       	sbrs	r27, 7
 ba4:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__muluhisi3>

00000ba8 <__mulohisi3>:
 ba8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__muluhisi3>
 bac:	82 1b       	sub	r24, r18
 bae:	93 0b       	sbc	r25, r19
 bb0:	08 95       	ret

00000bb2 <__prologue_saves__>:
 bb2:	2f 92       	push	r2
 bb4:	3f 92       	push	r3
 bb6:	4f 92       	push	r4
 bb8:	5f 92       	push	r5
 bba:	6f 92       	push	r6
 bbc:	7f 92       	push	r7
 bbe:	8f 92       	push	r8
 bc0:	9f 92       	push	r9
 bc2:	af 92       	push	r10
 bc4:	bf 92       	push	r11
 bc6:	cf 92       	push	r12
 bc8:	df 92       	push	r13
 bca:	ef 92       	push	r14
 bcc:	ff 92       	push	r15
 bce:	0f 93       	push	r16
 bd0:	1f 93       	push	r17
 bd2:	cf 93       	push	r28
 bd4:	df 93       	push	r29
 bd6:	cd b7       	in	r28, 0x3d	; 61
 bd8:	de b7       	in	r29, 0x3e	; 62
 bda:	ca 1b       	sub	r28, r26
 bdc:	db 0b       	sbc	r29, r27
 bde:	0f b6       	in	r0, 0x3f	; 63
 be0:	f8 94       	cli
 be2:	de bf       	out	0x3e, r29	; 62
 be4:	0f be       	out	0x3f, r0	; 63
 be6:	cd bf       	out	0x3d, r28	; 61
 be8:	09 94       	ijmp

00000bea <__epilogue_restores__>:
 bea:	2a 88       	ldd	r2, Y+18	; 0x12
 bec:	39 88       	ldd	r3, Y+17	; 0x11
 bee:	48 88       	ldd	r4, Y+16	; 0x10
 bf0:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf2:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf4:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf6:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf8:	9b 84       	ldd	r9, Y+11	; 0x0b
 bfa:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfc:	b9 84       	ldd	r11, Y+9	; 0x09
 bfe:	c8 84       	ldd	r12, Y+8	; 0x08
 c00:	df 80       	ldd	r13, Y+7	; 0x07
 c02:	ee 80       	ldd	r14, Y+6	; 0x06
 c04:	fd 80       	ldd	r15, Y+5	; 0x05
 c06:	0c 81       	ldd	r16, Y+4	; 0x04
 c08:	1b 81       	ldd	r17, Y+3	; 0x03
 c0a:	aa 81       	ldd	r26, Y+2	; 0x02
 c0c:	b9 81       	ldd	r27, Y+1	; 0x01
 c0e:	ce 0f       	add	r28, r30
 c10:	d1 1d       	adc	r29, r1
 c12:	0f b6       	in	r0, 0x3f	; 63
 c14:	f8 94       	cli
 c16:	de bf       	out	0x3e, r29	; 62
 c18:	0f be       	out	0x3f, r0	; 63
 c1a:	cd bf       	out	0x3d, r28	; 61
 c1c:	ed 01       	movw	r28, r26
 c1e:	08 95       	ret

00000c20 <__udivmodsi4>:
 c20:	a1 e2       	ldi	r26, 0x21	; 33
 c22:	1a 2e       	mov	r1, r26
 c24:	aa 1b       	sub	r26, r26
 c26:	bb 1b       	sub	r27, r27
 c28:	fd 01       	movw	r30, r26
 c2a:	0d c0       	rjmp	.+26     	; 0xc46 <__udivmodsi4_ep>

00000c2c <__udivmodsi4_loop>:
 c2c:	aa 1f       	adc	r26, r26
 c2e:	bb 1f       	adc	r27, r27
 c30:	ee 1f       	adc	r30, r30
 c32:	ff 1f       	adc	r31, r31
 c34:	a2 17       	cp	r26, r18
 c36:	b3 07       	cpc	r27, r19
 c38:	e4 07       	cpc	r30, r20
 c3a:	f5 07       	cpc	r31, r21
 c3c:	20 f0       	brcs	.+8      	; 0xc46 <__udivmodsi4_ep>
 c3e:	a2 1b       	sub	r26, r18
 c40:	b3 0b       	sbc	r27, r19
 c42:	e4 0b       	sbc	r30, r20
 c44:	f5 0b       	sbc	r31, r21

00000c46 <__udivmodsi4_ep>:
 c46:	66 1f       	adc	r22, r22
 c48:	77 1f       	adc	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	99 1f       	adc	r25, r25
 c4e:	1a 94       	dec	r1
 c50:	69 f7       	brne	.-38     	; 0xc2c <__udivmodsi4_loop>
 c52:	60 95       	com	r22
 c54:	70 95       	com	r23
 c56:	80 95       	com	r24
 c58:	90 95       	com	r25
 c5a:	9b 01       	movw	r18, r22
 c5c:	ac 01       	movw	r20, r24
 c5e:	bd 01       	movw	r22, r26
 c60:	cf 01       	movw	r24, r30
 c62:	08 95       	ret

00000c64 <__umulhisi3>:
 c64:	a2 9f       	mul	r26, r18
 c66:	b0 01       	movw	r22, r0
 c68:	b3 9f       	mul	r27, r19
 c6a:	c0 01       	movw	r24, r0
 c6c:	a3 9f       	mul	r26, r19
 c6e:	70 0d       	add	r23, r0
 c70:	81 1d       	adc	r24, r1
 c72:	11 24       	eor	r1, r1
 c74:	91 1d       	adc	r25, r1
 c76:	b2 9f       	mul	r27, r18
 c78:	70 0d       	add	r23, r0
 c7a:	81 1d       	adc	r24, r1
 c7c:	11 24       	eor	r1, r1
 c7e:	91 1d       	adc	r25, r1
 c80:	08 95       	ret

00000c82 <_exit>:
 c82:	f8 94       	cli

00000c84 <__stop_program>:
 c84:	ff cf       	rjmp	.-2      	; 0xc84 <__stop_program>

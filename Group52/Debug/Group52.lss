
Group52.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000130  00800100  00001376  0000140a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001376  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800230  00800230  0000153a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000153a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000198  00000000  00000000  00001596  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c7e  00000000  00000000  0000172e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000940  00000000  00000000  000033ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000941  00000000  00000000  00003cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003d8  00000000  00000000  00004630  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005ba  00000000  00000000  00004a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e75  00000000  00000000  00004fc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000180  00000000  00000000  00005e37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e6 e7       	ldi	r30, 0x76	; 118
     200:	f3 e1       	ldi	r31, 0x13	; 19
     202:	02 c0       	rjmp	.+4      	; 0x208 <__do_copy_data+0x10>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	a0 33       	cpi	r26, 0x30	; 48
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__do_copy_data+0xc>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	a0 e3       	ldi	r26, 0x30	; 48
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	aa 33       	cpi	r26, 0x3A	; 58
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <main>
     222:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <adc_read>:
#include <util/delay.h>
#include "adc.h"

uint8_t adc_read(DeviceType device){
	volatile char *adc = (char *) 0x1400;
	switch (device) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	69 f0       	breq	.+26     	; 0x248 <adc_read+0x1e>
     22e:	18 f4       	brcc	.+6      	; 0x236 <adc_read+0xc>
     230:	81 30       	cpi	r24, 0x01	; 1
     232:	31 f0       	breq	.+12     	; 0x240 <adc_read+0x16>
     234:	14 c0       	rjmp	.+40     	; 0x25e <adc_read+0x34>
     236:	83 30       	cpi	r24, 0x03	; 3
     238:	59 f0       	breq	.+22     	; 0x250 <adc_read+0x26>
     23a:	84 30       	cpi	r24, 0x04	; 4
     23c:	69 f0       	breq	.+26     	; 0x258 <adc_read+0x2e>
     23e:	0f c0       	rjmp	.+30     	; 0x25e <adc_read+0x34>
		case JOYAXIS1:
		/* Select CH1 */
		adc[0] = 0b00000100;
     240:	84 e0       	ldi	r24, 0x04	; 4
     242:	80 93 00 14 	sts	0x1400, r24
		break;
     246:	0b c0       	rjmp	.+22     	; 0x25e <adc_read+0x34>
		
		case JOYAXIS2:
		/* Select CH2 */
		adc[0] = 0b00000101;
     248:	85 e0       	ldi	r24, 0x05	; 5
     24a:	80 93 00 14 	sts	0x1400, r24
		break;
     24e:	07 c0       	rjmp	.+14     	; 0x25e <adc_read+0x34>
		
		case LSLIDER:
		/* Select CH3 */
		adc[0] = 0b00000110;
     250:	86 e0       	ldi	r24, 0x06	; 6
     252:	80 93 00 14 	sts	0x1400, r24
		break;
     256:	03 c0       	rjmp	.+6      	; 0x25e <adc_read+0x34>
		
		case RSLIDER:
		/* Select CH1 */
		adc[0] = 0b00000111;
     258:	87 e0       	ldi	r24, 0x07	; 7
     25a:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25e:	2c ec       	ldi	r18, 0xCC	; 204
     260:	8c e0       	ldi	r24, 0x0C	; 12
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	21 50       	subi	r18, 0x01	; 1
     266:	80 40       	sbci	r24, 0x00	; 0
     268:	90 40       	sbci	r25, 0x00	; 0
     26a:	e1 f7       	brne	.-8      	; 0x264 <adc_read+0x3a>
     26c:	00 c0       	rjmp	.+0      	; 0x26e <adc_read+0x44>
		break;
		default:
		break;
	}
	_delay_ms(70);
	return adc[0];
     26e:	80 91 00 14 	lds	r24, 0x1400
     272:	08 95       	ret

00000274 <JOYSTICK_init>:
#include "math.h"

void JOYSTICK_init(void)
{
	/* Set PB2 as input for button*/
	DDRB &= ~(1 << PB2);
     274:	ba 98       	cbi	0x17, 2	; 23
	PORTB &= (1 << PB2);
     276:	88 b3       	in	r24, 0x18	; 24
     278:	84 70       	andi	r24, 0x04	; 4
     27a:	88 bb       	out	0x18, r24	; 24
     27c:	08 95       	ret

0000027e <toPositionPercent>:
	return NEUTRAL;
}

int16_t toPositionPercent(int16_t value)
{
	value -= 127;
     27e:	8f 57       	subi	r24, 0x7F	; 127
     280:	91 09       	sbc	r25, r1
	int16_t percentValue = round((float)value / 127 * 100);
     282:	bc 01       	movw	r22, r24
     284:	88 27       	eor	r24, r24
     286:	77 fd       	sbrc	r23, 7
     288:	80 95       	com	r24
     28a:	98 2f       	mov	r25, r24
     28c:	0e 94 29 04 	call	0x852	; 0x852 <__floatsisf>
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	4e ef       	ldi	r20, 0xFE	; 254
     296:	52 e4       	ldi	r21, 0x42	; 66
     298:	0e 94 8e 03 	call	0x71c	; 0x71c <__divsf3>
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	48 ec       	ldi	r20, 0xC8	; 200
     2a2:	52 e4       	ldi	r21, 0x42	; 66
     2a4:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
     2a8:	0e 94 18 05 	call	0xa30	; 0xa30 <round>
     2ac:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__fixsfsi>
	return percentValue;
}
     2b0:	cb 01       	movw	r24, r22
     2b2:	08 95       	ret

000002b4 <JOYSTICK_get_position>:
{
	
}

struct positions JOYSTICK_get_position(void)
{
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	28 97       	sbiw	r28, 0x08	; 8
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
	int16_t yValue = (int16_t) adc_read(JOYAXIS1);
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
     2d4:	f8 2e       	mov	r15, r24
	int16_t xValue = (int16_t) adc_read(JOYAXIS2);
     2d6:	82 e0       	ldi	r24, 0x02	; 2
     2d8:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
	
	int16_t xPosition = toPositionPercent(xValue);
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
     2e2:	18 2f       	mov	r17, r24
     2e4:	09 2f       	mov	r16, r25
	int16_t yPosition = toPositionPercent(yValue);
     2e6:	8f 2d       	mov	r24, r15
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
	
	struct positions pos;
	pos.x = xPosition;
	pos.y = yPosition;
	
	return pos;
     2ee:	19 83       	std	Y+1, r17	; 0x01
     2f0:	0a 83       	std	Y+2, r16	; 0x02
     2f2:	8b 83       	std	Y+3, r24	; 0x03
     2f4:	9c 83       	std	Y+4, r25	; 0x04
     2f6:	21 2f       	mov	r18, r17
     2f8:	30 2f       	mov	r19, r16
     2fa:	48 2f       	mov	r20, r24
     2fc:	59 2f       	mov	r21, r25
     2fe:	6d 81       	ldd	r22, Y+5	; 0x05
     300:	7e 81       	ldd	r23, Y+6	; 0x06
}
     302:	8f 81       	ldd	r24, Y+7	; 0x07
     304:	98 85       	ldd	r25, Y+8	; 0x08
     306:	28 96       	adiw	r28, 0x08	; 8
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	f8 94       	cli
     30c:	de bf       	out	0x3e, r29	; 62
     30e:	0f be       	out	0x3f, r0	; 63
     310:	cd bf       	out	0x3d, r28	; 61
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	ff 90       	pop	r15
     31c:	08 95       	ret

0000031e <JOYSTICK_get_direction>:


DirectionType JOYSTICK_get_direction(void)
{
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	28 97       	sbiw	r28, 0x08	; 8
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	f8 94       	cli
     32c:	de bf       	out	0x3e, r29	; 62
     32e:	0f be       	out	0x3f, r0	; 63
     330:	cd bf       	out	0x3d, r28	; 61
	struct positions pos = JOYSTICK_get_position();
     332:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <JOYSTICK_get_position>
     336:	29 83       	std	Y+1, r18	; 0x01
     338:	3a 83       	std	Y+2, r19	; 0x02
     33a:	4b 83       	std	Y+3, r20	; 0x03
     33c:	5c 83       	std	Y+4, r21	; 0x04
     33e:	29 81       	ldd	r18, Y+1	; 0x01
     340:	3a 81       	ldd	r19, Y+2	; 0x02
     342:	8b 81       	ldd	r24, Y+3	; 0x03
     344:	9c 81       	ldd	r25, Y+4	; 0x04
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
     346:	ac 01       	movw	r20, r24
     348:	48 5e       	subi	r20, 0xE8	; 232
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	41 33       	cpi	r20, 0x31	; 49
     34e:	51 05       	cpc	r21, r1
     350:	48 f4       	brcc	.+18     	; 0x364 <JOYSTICK_get_direction+0x46>
		
		if (pos.x < -THRESHOLD) {
     352:	27 3e       	cpi	r18, 0xE7	; 231
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	38 07       	cpc	r19, r24
     358:	94 f0       	brlt	.+36     	; 0x37e <JOYSTICK_get_direction+0x60>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
     35a:	2a 31       	cpi	r18, 0x1A	; 26
     35c:	31 05       	cpc	r19, r1
     35e:	8c f4       	brge	.+34     	; 0x382 <JOYSTICK_get_direction+0x64>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	16 c0       	rjmp	.+44     	; 0x390 <JOYSTICK_get_direction+0x72>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
     364:	28 5e       	subi	r18, 0xE8	; 232
     366:	3f 4f       	sbci	r19, 0xFF	; 255
     368:	21 33       	cpi	r18, 0x31	; 49
     36a:	31 05       	cpc	r19, r1
     36c:	60 f4       	brcc	.+24     	; 0x386 <JOYSTICK_get_direction+0x68>
		
		if (pos.y < -THRESHOLD) {
     36e:	87 3e       	cpi	r24, 0xE7	; 231
     370:	2f ef       	ldi	r18, 0xFF	; 255
     372:	92 07       	cpc	r25, r18
     374:	54 f0       	brlt	.+20     	; 0x38a <JOYSTICK_get_direction+0x6c>
			return DOWN;
		} else if (pos.y > THRESHOLD) {
     376:	4a 97       	sbiw	r24, 0x1a	; 26
     378:	54 f4       	brge	.+20     	; 0x38e <JOYSTICK_get_direction+0x70>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	09 c0       	rjmp	.+18     	; 0x390 <JOYSTICK_get_direction+0x72>
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
		
		if (pos.x < -THRESHOLD) {
			return LEFT;
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	07 c0       	rjmp	.+14     	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
     382:	82 e0       	ldi	r24, 0x02	; 2
     384:	05 c0       	rjmp	.+10     	; 0x390 <JOYSTICK_get_direction+0x72>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	03 c0       	rjmp	.+6      	; 0x390 <JOYSTICK_get_direction+0x72>
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
		
		if (pos.y < -THRESHOLD) {
			return DOWN;
     38a:	84 e0       	ldi	r24, 0x04	; 4
     38c:	01 c0       	rjmp	.+2      	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.y > THRESHOLD) {
			return UP;
     38e:	83 e0       	ldi	r24, 0x03	; 3
		}
		
	}
	
	return NEUTRAL;
}
     390:	28 96       	adiw	r28, 0x08	; 8
     392:	0f b6       	in	r0, 0x3f	; 63
     394:	f8 94       	cli
     396:	de bf       	out	0x3e, r29	; 62
     398:	0f be       	out	0x3f, r0	; 63
     39a:	cd bf       	out	0x3d, r28	; 61
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <JOYSTICK_read_button>:
	return pos;
}

uint8_t JOYSTICK_read_button(void)
{
	return (PINB & (1 << PB2)) == 0;
     3a2:	86 b3       	in	r24, 0x16	; 22
     3a4:	82 fb       	bst	r24, 2
     3a6:	88 27       	eor	r24, r24
     3a8:	80 f9       	bld	r24, 0
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	89 27       	eor	r24, r25
     3ae:	08 95       	ret

000003b0 <main>:


int main(void)
{
	/* Needs to be set when using external memory */
	MCUCR |= (1 << SRE);
     3b0:	85 b7       	in	r24, 0x35	; 53
     3b2:	80 68       	ori	r24, 0x80	; 128
     3b4:	85 bf       	out	0x35, r24	; 53

	fdevopen(USART_transmit, USART_receive);
     3b6:	6a e8       	ldi	r22, 0x8A	; 138
     3b8:	73 e0       	ldi	r23, 0x03	; 3
     3ba:	86 e8       	ldi	r24, 0x86	; 134
     3bc:	93 e0       	ldi	r25, 0x03	; 3
     3be:	0e 94 88 06 	call	0xd10	; 0xd10 <fdevopen>
	USART_init(MYUBBR);
     3c2:	8f e1       	ldi	r24, 0x1F	; 31
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	0e 94 7f 03 	call	0x6fe	; 0x6fe <USART_init>
	OLED_init();
     3ca:	0e 94 2a 02 	call	0x454	; 0x454 <OLED_init>
	JOYSTICK_init();
     3ce:	0e 94 3a 01 	call	0x274	; 0x274 <JOYSTICK_init>
	SPI_master_init();
     3d2:	0e 94 76 03 	call	0x6ec	; 0x6ec <SPI_master_init>
	
	OLED_reset();
     3d6:	0e 94 87 02 	call	0x50e	; 0x50e <OLED_reset>
	OLED_pos(2,20);
     3da:	64 e1       	ldi	r22, 0x14	; 20
     3dc:	82 e0       	ldi	r24, 0x02	; 2
     3de:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	
	menuNode *menu = OLED_generate_menu();
     3e2:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <OLED_generate_menu>
	OLED_print_menu(menu);
     3e6:	0e 94 36 03 	call	0x66c	; 0x66c <OLED_print_menu>
	uint8_t currentRow = 1;
	uint8_t lastRow = 0;
	DirectionType joydir = NEUTRAL;
	uint8_t buttonPressed = 0;
	
	SPI_master_transmit(0xFF);
     3ea:	8f ef       	ldi	r24, 0xFF	; 255
     3ec:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <SPI_master_transmit>
	SPI_master_transmit(0x00);
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <SPI_master_transmit>
	char received = SPDR;
     3f6:	8f b1       	in	r24, 0x0f	; 15
	printf("%c\n", received);
     3f8:	1f 92       	push	r1
     3fa:	8f 93       	push	r24
     3fc:	86 e0       	ldi	r24, 0x06	; 6
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	9f 93       	push	r25
     402:	8f 93       	push	r24
     404:	0e 94 d3 06 	call	0xda6	; 0xda6 <printf>
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
	OLED_pos(2,20);
	
	menuNode *menu = OLED_generate_menu();
	OLED_print_menu(menu);
	
	uint8_t currentRow = 1;
     410:	c1 e0       	ldi	r28, 0x01	; 1
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     412:	01 e0       	ldi	r16, 0x01	; 1
		joydir = JOYSTICK_get_direction();
		//printf("%i\n", joydir);
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     414:	17 e0       	ldi	r17, 0x07	; 7
	printf("%c\n", received);
	
	
	while(1)
	{	
		joydir = JOYSTICK_get_direction();
     416:	0e 94 8f 01 	call	0x31e	; 0x31e <JOYSTICK_get_direction>
		//printf("%i\n", joydir);
		lastRow = currentRow;
		if (joydir == UP) {
     41a:	83 30       	cpi	r24, 0x03	; 3
     41c:	29 f4       	brne	.+10     	; 0x428 <main+0x78>
			if (currentRow == 1) {
     41e:	c1 30       	cpi	r28, 0x01	; 1
     420:	51 f0       	breq	.+20     	; 0x436 <main+0x86>
				currentRow = 7;
			} else {
				currentRow -= 1;
     422:	df ef       	ldi	r29, 0xFF	; 255
     424:	dc 0f       	add	r29, r28
     426:	0c c0       	rjmp	.+24     	; 0x440 <main+0x90>
			}
			
		} else if (joydir == DOWN) {
     428:	84 30       	cpi	r24, 0x04	; 4
     42a:	39 f4       	brne	.+14     	; 0x43a <main+0x8a>
			if (currentRow == 7) {
     42c:	c7 30       	cpi	r28, 0x07	; 7
     42e:	39 f0       	breq	.+14     	; 0x43e <main+0x8e>
				currentRow = 1;
			} else {
				currentRow += 1;
     430:	d1 e0       	ldi	r29, 0x01	; 1
     432:	dc 0f       	add	r29, r28
     434:	05 c0       	rjmp	.+10     	; 0x440 <main+0x90>
		joydir = JOYSTICK_get_direction();
		//printf("%i\n", joydir);
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     436:	d1 2f       	mov	r29, r17
     438:	03 c0       	rjmp	.+6      	; 0x440 <main+0x90>
     43a:	dc 2f       	mov	r29, r28
     43c:	01 c0       	rjmp	.+2      	; 0x440 <main+0x90>
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     43e:	d0 2f       	mov	r29, r16
			} else {
				currentRow += 1;
			}
		}
		
		OLED_move_arrow(currentRow, 20, lastRow, 20);
     440:	24 e1       	ldi	r18, 0x14	; 20
     442:	4c 2f       	mov	r20, r28
     444:	64 e1       	ldi	r22, 0x14	; 20
     446:	8d 2f       	mov	r24, r29
     448:	0e 94 cd 02 	call	0x59a	; 0x59a <OLED_move_arrow>
		
		buttonPressed = JOYSTICK_read_button();
     44c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <JOYSTICK_read_button>
     450:	cd 2f       	mov	r28, r29
     452:	e1 cf       	rjmp	.-62     	; 0x416 <main+0x66>

00000454 <OLED_init>:


void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     454:	e0 e0       	ldi	r30, 0x00	; 0
     456:	f0 e1       	ldi	r31, 0x10	; 16
     458:	8e ea       	ldi	r24, 0xAE	; 174
     45a:	80 83       	st	Z, r24
     45c:	81 ea       	ldi	r24, 0xA1	; 161
     45e:	80 83       	st	Z, r24
     460:	8a ed       	ldi	r24, 0xDA	; 218
     462:	80 83       	st	Z, r24
     464:	82 e1       	ldi	r24, 0x12	; 18
     466:	80 83       	st	Z, r24
     468:	88 ec       	ldi	r24, 0xC8	; 200
     46a:	80 83       	st	Z, r24
     46c:	88 ea       	ldi	r24, 0xA8	; 168
     46e:	80 83       	st	Z, r24
     470:	8f e3       	ldi	r24, 0x3F	; 63
     472:	80 83       	st	Z, r24
     474:	85 ed       	ldi	r24, 0xD5	; 213
     476:	80 83       	st	Z, r24
     478:	80 e8       	ldi	r24, 0x80	; 128
     47a:	80 83       	st	Z, r24
     47c:	81 e8       	ldi	r24, 0x81	; 129
     47e:	80 83       	st	Z, r24
     480:	80 e5       	ldi	r24, 0x50	; 80
     482:	80 83       	st	Z, r24
     484:	89 ed       	ldi	r24, 0xD9	; 217
     486:	80 83       	st	Z, r24
     488:	81 e2       	ldi	r24, 0x21	; 33
     48a:	80 83       	st	Z, r24
     48c:	80 e2       	ldi	r24, 0x20	; 32
     48e:	80 83       	st	Z, r24
     490:	10 82       	st	Z, r1
     492:	8b ed       	ldi	r24, 0xDB	; 219
     494:	80 83       	st	Z, r24
     496:	80 e3       	ldi	r24, 0x30	; 48
     498:	80 83       	st	Z, r24
     49a:	8d ea       	ldi	r24, 0xAD	; 173
     49c:	80 83       	st	Z, r24
     49e:	10 82       	st	Z, r1
     4a0:	84 ea       	ldi	r24, 0xA4	; 164
     4a2:	80 83       	st	Z, r24
     4a4:	86 ea       	ldi	r24, 0xA6	; 166
     4a6:	80 83       	st	Z, r24
     4a8:	8f ea       	ldi	r24, 0xAF	; 175
     4aa:	80 83       	st	Z, r24
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	92 e0       	ldi	r25, 0x02	; 2
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     4b0:	e0 e0       	ldi	r30, 0x00	; 0
     4b2:	f2 e1       	ldi	r31, 0x12	; 18
     4b4:	2f ef       	ldi	r18, 0xFF	; 255
     4b6:	20 83       	st	Z, r18
     4b8:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x00);
	OLED_write_c(0xa4); //out follows RAM content
	OLED_write_c(0xa6); //set normal display
	OLED_write_c(0xaf); // display on
	
	for (int i = 0; i < 512; i++)
     4ba:	00 97       	sbiw	r24, 0x00	; 0
     4bc:	e1 f7       	brne	.-8      	; 0x4b6 <OLED_init+0x62>
	{
		OLED_write_d(0xFF);
	}
}
     4be:	08 95       	ret

000004c0 <OLED_goto_line>:


void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     4c0:	e0 e0       	ldi	r30, 0x00	; 0
     4c2:	f0 e1       	ldi	r31, 0x10	; 16
     4c4:	92 e2       	ldi	r25, 0x22	; 34
     4c6:	90 83       	st	Z, r25
     4c8:	80 83       	st	Z, r24
     4ca:	87 e0       	ldi	r24, 0x07	; 7
     4cc:	80 83       	st	Z, r24
     4ce:	08 95       	ret

000004d0 <OLED_clear_line>:
	OLED_write_c(0x07);
}

void OLED_clear_line(uint8_t line)
{
	OLED_goto_line(line);
     4d0:	0e 94 60 02 	call	0x4c0	; 0x4c0 <OLED_goto_line>


void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     4d4:	e0 e0       	ldi	r30, 0x00	; 0
     4d6:	f0 e1       	ldi	r31, 0x10	; 16
     4d8:	81 e2       	ldi	r24, 0x21	; 33
     4da:	80 83       	st	Z, r24
     4dc:	10 82       	st	Z, r1
     4de:	8f e7       	ldi	r24, 0x7F	; 127
     4e0:	80 83       	st	Z, r24
     4e2:	80 e8       	ldi	r24, 0x80	; 128
     4e4:	90 e0       	ldi	r25, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     4e6:	e0 e0       	ldi	r30, 0x00	; 0
     4e8:	f2 e1       	ldi	r31, 0x12	; 18
     4ea:	10 82       	st	Z, r1
     4ec:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x21);
	OLED_write_c(0x00);
	OLED_write_c(0x7F);

	/* Write zeros to line */
	for (int i = 0; i < 128; i++) {
     4ee:	00 97       	sbiw	r24, 0x00	; 0
     4f0:	e1 f7       	brne	.-8      	; 0x4ea <OLED_clear_line+0x1a>
		OLED_write_d(0x00);
	}
}
     4f2:	08 95       	ret

000004f4 <OLED_pos>:


void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     4f4:	e0 e0       	ldi	r30, 0x00	; 0
     4f6:	f0 e1       	ldi	r31, 0x10	; 16
     4f8:	92 e2       	ldi	r25, 0x22	; 34
     4fa:	90 83       	st	Z, r25
     4fc:	80 83       	st	Z, r24
     4fe:	87 e0       	ldi	r24, 0x07	; 7
     500:	80 83       	st	Z, r24
     502:	81 e2       	ldi	r24, 0x21	; 33
     504:	80 83       	st	Z, r24
     506:	60 83       	st	Z, r22
     508:	8f e7       	ldi	r24, 0x7F	; 127
     50a:	80 83       	st	Z, r24
     50c:	08 95       	ret

0000050e <OLED_reset>:
	OLED_write_c(column);
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
     50e:	cf 93       	push	r28
	for (uint8_t i = 0; i < 8; i++) {
     510:	c0 e0       	ldi	r28, 0x00	; 0
		OLED_clear_line(i);
     512:	8c 2f       	mov	r24, r28
     514:	0e 94 68 02 	call	0x4d0	; 0x4d0 <OLED_clear_line>
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
	for (uint8_t i = 0; i < 8; i++) {
     518:	cf 5f       	subi	r28, 0xFF	; 255
     51a:	c8 30       	cpi	r28, 0x08	; 8
     51c:	d1 f7       	brne	.-12     	; 0x512 <OLED_reset+0x4>
		OLED_clear_line(i);
	}
	OLED_pos(0,0);
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>

	// Redraw from SRAM?
}
     526:	cf 91       	pop	r28
     528:	08 95       	ret

0000052a <OLED_print_string>:

void OLED_print_string(char* str)
{
     52a:	cf 93       	push	r28
     52c:	df 93       	push	r29
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     52e:	fc 01       	movw	r30, r24
     530:	20 81       	ld	r18, Z
     532:	22 23       	and	r18, r18
     534:	11 f1       	breq	.+68     	; 0x57a <OLED_print_string+0x50>
     536:	dc 01       	movw	r26, r24

void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
     538:	40 e0       	ldi	r20, 0x00	; 0

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	50 e0       	ldi	r21, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     53e:	c0 e0       	ldi	r28, 0x00	; 0
     540:	d2 e1       	ldi	r29, 0x12	; 18
     542:	18 c0       	rjmp	.+48     	; 0x574 <OLED_print_string+0x4a>
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
			c = pgm_read_byte_near(font[str[i]-32] + j);
     544:	ec 91       	ld	r30, X
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	ee 0f       	add	r30, r30
     54a:	ff 1f       	adc	r31, r31
     54c:	ee 0f       	add	r30, r30
     54e:	ff 1f       	adc	r31, r31
     550:	e0 51       	subi	r30, 0x10	; 16
     552:	f0 40       	sbci	r31, 0x00	; 0
     554:	e2 0f       	add	r30, r18
     556:	f3 1f       	adc	r31, r19
     558:	e4 91       	lpm	r30, Z
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     55a:	e8 83       	st	Y, r30
     55c:	2f 5f       	subi	r18, 0xFF	; 255
     55e:	3f 4f       	sbci	r19, 0xFF	; 255
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
     560:	24 30       	cpi	r18, 0x04	; 4
     562:	31 05       	cpc	r19, r1
     564:	79 f7       	brne	.-34     	; 0x544 <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
     566:	4f 5f       	subi	r20, 0xFF	; 255
void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     568:	dc 01       	movw	r26, r24
     56a:	a4 0f       	add	r26, r20
     56c:	b1 1d       	adc	r27, r1
     56e:	2c 91       	ld	r18, X
     570:	22 23       	and	r18, r18
     572:	19 f0       	breq	.+6      	; 0x57a <OLED_print_string+0x50>

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     574:	26 2f       	mov	r18, r22
     576:	35 2f       	mov	r19, r21
     578:	e5 cf       	rjmp	.-54     	; 0x544 <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
	}
}
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	08 95       	ret

00000580 <OLED_print_arrow>:

void OLED_print_arrow(uint8_t row, uint8_t col)
{
	OLED_pos(row, col);
     580:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     584:	e0 e0       	ldi	r30, 0x00	; 0
     586:	f2 e1       	ldi	r31, 0x12	; 18
     588:	88 e1       	ldi	r24, 0x18	; 24
     58a:	80 83       	st	Z, r24
     58c:	80 83       	st	Z, r24
     58e:	9e e7       	ldi	r25, 0x7E	; 126
     590:	90 83       	st	Z, r25
     592:	9c e3       	ldi	r25, 0x3C	; 60
     594:	90 83       	st	Z, r25
     596:	80 83       	st	Z, r24
     598:	08 95       	ret

0000059a <OLED_move_arrow>:
	OLED_write_d(0b00111100);
	OLED_write_d(0b00011000);
}

void OLED_move_arrow(uint8_t newRow, uint8_t newCol, uint8_t currentRow, uint8_t currentCol)
{
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	c8 2f       	mov	r28, r24
     5a0:	d6 2f       	mov	r29, r22
     5a2:	84 2f       	mov	r24, r20
	OLED_pos(currentRow, currentCol);
     5a4:	62 2f       	mov	r22, r18
     5a6:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     5aa:	e0 e0       	ldi	r30, 0x00	; 0
     5ac:	f2 e1       	ldi	r31, 0x12	; 18
     5ae:	10 82       	st	Z, r1
     5b0:	10 82       	st	Z, r1
     5b2:	10 82       	st	Z, r1
     5b4:	10 82       	st	Z, r1
     5b6:	10 82       	st	Z, r1
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	
	OLED_print_arrow(newRow, newCol);
     5b8:	6d 2f       	mov	r22, r29
     5ba:	8c 2f       	mov	r24, r28
     5bc:	0e 94 c0 02 	call	0x580	; 0x580 <OLED_print_arrow>
}
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	08 95       	ret

000005c6 <OLED_create_node>:


menuNode *OLED_create_node(char* name, menuNode* parent)
{
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	ec 01       	movw	r28, r24
	menuNode* ret = (menuNode*) malloc(sizeof(menuNode));
     5cc:	84 e1       	ldi	r24, 0x14	; 20
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	0e 94 61 05 	call	0xac2	; 0xac2 <malloc>
	ret->name = name;
     5d4:	fc 01       	movw	r30, r24
     5d6:	d1 83       	std	Z+1, r29	; 0x01
     5d8:	c0 83       	st	Z, r28
	ret->parent = NULL;
     5da:	13 82       	std	Z+3, r1	; 0x03
     5dc:	12 82       	std	Z+2, r1	; 0x02
	return ret;
}
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	08 95       	ret

000005e4 <OLED_generate_menu>:

// Implement function for freeing memory

menuNode *OLED_generate_menu(void)
{	
     5e4:	af 92       	push	r10
     5e6:	bf 92       	push	r11
     5e8:	cf 92       	push	r12
     5ea:	df 92       	push	r13
     5ec:	ef 92       	push	r14
     5ee:	ff 92       	push	r15
     5f0:	0f 93       	push	r16
     5f2:	1f 93       	push	r17
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
	menuNode *mainmenu = OLED_create_node("MAIN MENU", NULL);
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	8c ee       	ldi	r24, 0xEC	; 236
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
     604:	ec 01       	movw	r28, r24
	menuNode *highscores = OLED_create_node("Highscores", mainmenu);
     606:	bc 01       	movw	r22, r24
     608:	86 ef       	ldi	r24, 0xF6	; 246
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
     610:	6c 01       	movw	r12, r24
	menuNode *playgame = OLED_create_node("Start new game", mainmenu);
     612:	be 01       	movw	r22, r28
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	92 e0       	ldi	r25, 0x02	; 2
     618:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
     61c:	5c 01       	movw	r10, r24
	menuNode *debugging = OLED_create_node("Debugging", mainmenu);
     61e:	be 01       	movw	r22, r28
     620:	80 e1       	ldi	r24, 0x10	; 16
     622:	92 e0       	ldi	r25, 0x02	; 2
     624:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
     628:	8c 01       	movw	r16, r24
	menuNode *calibrate = OLED_create_node("Calibrate", mainmenu);
     62a:	be 01       	movw	r22, r28
     62c:	8a e1       	ldi	r24, 0x1A	; 26
     62e:	92 e0       	ldi	r25, 0x02	; 2
     630:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
     634:	7c 01       	movw	r14, r24
	menuNode *difficulty = OLED_create_node("Difficulty", mainmenu);
     636:	be 01       	movw	r22, r28
     638:	84 e2       	ldi	r24, 0x24	; 36
     63a:	92 e0       	ldi	r25, 0x02	; 2
     63c:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <OLED_create_node>
	calibrate->parent = mainmenu;
	difficulty->parent = mainmenu;
	debugging->parent = mainmenu;
	*/
	
	mainmenu->children[1] = playgame;
     640:	bf 82       	std	Y+7, r11	; 0x07
     642:	ae 82       	std	Y+6, r10	; 0x06
	mainmenu->children[2] = highscores;
     644:	d9 86       	std	Y+9, r13	; 0x09
     646:	c8 86       	std	Y+8, r12	; 0x08
	mainmenu->children[3] = difficulty;
     648:	9b 87       	std	Y+11, r25	; 0x0b
     64a:	8a 87       	std	Y+10, r24	; 0x0a
	mainmenu->children[4] = calibrate;
     64c:	fd 86       	std	Y+13, r15	; 0x0d
     64e:	ec 86       	std	Y+12, r14	; 0x0c
	mainmenu->children[5] = debugging;
     650:	1f 87       	std	Y+15, r17	; 0x0f
     652:	0e 87       	std	Y+14, r16	; 0x0e
	
	return mainmenu;
}
     654:	ce 01       	movw	r24, r28
     656:	df 91       	pop	r29
     658:	cf 91       	pop	r28
     65a:	1f 91       	pop	r17
     65c:	0f 91       	pop	r16
     65e:	ff 90       	pop	r15
     660:	ef 90       	pop	r14
     662:	df 90       	pop	r13
     664:	cf 90       	pop	r12
     666:	bf 90       	pop	r11
     668:	af 90       	pop	r10
     66a:	08 95       	ret

0000066c <OLED_print_menu>:

void OLED_print_menu(menuNode *node)
{
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
     670:	ec 01       	movw	r28, r24
	OLED_pos(0,50);
     672:	62 e3       	ldi	r22, 0x32	; 50
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->name);
     67a:	88 81       	ld	r24, Y
     67c:	99 81       	ldd	r25, Y+1	; 0x01
     67e:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
	//printf("%s\n", node->name);
	OLED_pos(1,50);
     682:	62 e3       	ldi	r22, 0x32	; 50
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->children[1]->name);
     68a:	ee 81       	ldd	r30, Y+6	; 0x06
     68c:	ff 81       	ldd	r31, Y+7	; 0x07
     68e:	80 81       	ld	r24, Z
     690:	91 81       	ldd	r25, Z+1	; 0x01
     692:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
	OLED_pos(2,50);
     696:	62 e3       	ldi	r22, 0x32	; 50
     698:	82 e0       	ldi	r24, 0x02	; 2
     69a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->children[2]->name);
     69e:	e8 85       	ldd	r30, Y+8	; 0x08
     6a0:	f9 85       	ldd	r31, Y+9	; 0x09
     6a2:	80 81       	ld	r24, Z
     6a4:	91 81       	ldd	r25, Z+1	; 0x01
     6a6:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
	OLED_pos(3,50);
     6aa:	62 e3       	ldi	r22, 0x32	; 50
     6ac:	83 e0       	ldi	r24, 0x03	; 3
     6ae:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->children[3]->name);
     6b2:	ea 85       	ldd	r30, Y+10	; 0x0a
     6b4:	fb 85       	ldd	r31, Y+11	; 0x0b
     6b6:	80 81       	ld	r24, Z
     6b8:	91 81       	ldd	r25, Z+1	; 0x01
     6ba:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
	OLED_pos(4,50);
     6be:	62 e3       	ldi	r22, 0x32	; 50
     6c0:	84 e0       	ldi	r24, 0x04	; 4
     6c2:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->children[4]->name);
     6c6:	ec 85       	ldd	r30, Y+12	; 0x0c
     6c8:	fd 85       	ldd	r31, Y+13	; 0x0d
     6ca:	80 81       	ld	r24, Z
     6cc:	91 81       	ldd	r25, Z+1	; 0x01
     6ce:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
	OLED_pos(5,50);
     6d2:	62 e3       	ldi	r22, 0x32	; 50
     6d4:	85 e0       	ldi	r24, 0x05	; 5
     6d6:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <OLED_pos>
	OLED_print_string(node->children[5]->name);
     6da:	ee 85       	ldd	r30, Y+14	; 0x0e
     6dc:	ff 85       	ldd	r31, Y+15	; 0x0f
     6de:	80 81       	ld	r24, Z
     6e0:	91 81       	ldd	r25, Z+1	; 0x01
     6e2:	0e 94 95 02 	call	0x52a	; 0x52a <OLED_print_string>
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	08 95       	ret

000006ec <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB4)|(1 << PB5)|(1 << PB7);
     6ec:	80 eb       	ldi	r24, 0xB0	; 176
     6ee:	87 bb       	out	0x17, r24	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
     6f0:	81 e5       	ldi	r24, 0x51	; 81
     6f2:	8d b9       	out	0x0d, r24	; 13
     6f4:	08 95       	ret

000006f6 <SPI_master_transmit>:

void SPI_master_transmit(char cData)
{
	/* Start transmission */
	
	SPDR = cData;
     6f6:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
     6f8:	77 9b       	sbis	0x0e, 7	; 14
     6fa:	fe cf       	rjmp	.-4      	; 0x6f8 <SPI_master_transmit+0x2>
		;
	}
	
	
	// Interrupt here?
}
     6fc:	08 95       	ret

000006fe <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
     6fe:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     700:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
     702:	88 e1       	ldi	r24, 0x18	; 24
     704:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ10);
     706:	8e e8       	ldi	r24, 0x8E	; 142
     708:	80 bd       	out	0x20, r24	; 32
     70a:	08 95       	ret

0000070c <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
     70c:	5d 9b       	sbis	0x0b, 5	; 11
     70e:	fe cf       	rjmp	.-4      	; 0x70c <USART_transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     710:	8c b9       	out	0x0c, r24	; 12
     712:	08 95       	ret

00000714 <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
     714:	5f 9b       	sbis	0x0b, 7	; 11
     716:	fe cf       	rjmp	.-4      	; 0x714 <USART_receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
     718:	8c b1       	in	r24, 0x0c	; 12
}
     71a:	08 95       	ret

0000071c <__divsf3>:
     71c:	0c d0       	rcall	.+24     	; 0x736 <__divsf3x>
     71e:	eb c0       	rjmp	.+470    	; 0x8f6 <__fp_round>
     720:	e3 d0       	rcall	.+454    	; 0x8e8 <__fp_pscB>
     722:	40 f0       	brcs	.+16     	; 0x734 <__divsf3+0x18>
     724:	da d0       	rcall	.+436    	; 0x8da <__fp_pscA>
     726:	30 f0       	brcs	.+12     	; 0x734 <__divsf3+0x18>
     728:	21 f4       	brne	.+8      	; 0x732 <__divsf3+0x16>
     72a:	5f 3f       	cpi	r21, 0xFF	; 255
     72c:	19 f0       	breq	.+6      	; 0x734 <__divsf3+0x18>
     72e:	cc c0       	rjmp	.+408    	; 0x8c8 <__fp_inf>
     730:	51 11       	cpse	r21, r1
     732:	15 c1       	rjmp	.+554    	; 0x95e <__fp_szero>
     734:	cf c0       	rjmp	.+414    	; 0x8d4 <__fp_nan>

00000736 <__divsf3x>:
     736:	f0 d0       	rcall	.+480    	; 0x918 <__fp_split3>
     738:	98 f3       	brcs	.-26     	; 0x720 <__divsf3+0x4>

0000073a <__divsf3_pse>:
     73a:	99 23       	and	r25, r25
     73c:	c9 f3       	breq	.-14     	; 0x730 <__divsf3+0x14>
     73e:	55 23       	and	r21, r21
     740:	b1 f3       	breq	.-20     	; 0x72e <__divsf3+0x12>
     742:	95 1b       	sub	r25, r21
     744:	55 0b       	sbc	r21, r21
     746:	bb 27       	eor	r27, r27
     748:	aa 27       	eor	r26, r26
     74a:	62 17       	cp	r22, r18
     74c:	73 07       	cpc	r23, r19
     74e:	84 07       	cpc	r24, r20
     750:	38 f0       	brcs	.+14     	; 0x760 <__divsf3_pse+0x26>
     752:	9f 5f       	subi	r25, 0xFF	; 255
     754:	5f 4f       	sbci	r21, 0xFF	; 255
     756:	22 0f       	add	r18, r18
     758:	33 1f       	adc	r19, r19
     75a:	44 1f       	adc	r20, r20
     75c:	aa 1f       	adc	r26, r26
     75e:	a9 f3       	breq	.-22     	; 0x74a <__divsf3_pse+0x10>
     760:	33 d0       	rcall	.+102    	; 0x7c8 <__divsf3_pse+0x8e>
     762:	0e 2e       	mov	r0, r30
     764:	3a f0       	brmi	.+14     	; 0x774 <__divsf3_pse+0x3a>
     766:	e0 e8       	ldi	r30, 0x80	; 128
     768:	30 d0       	rcall	.+96     	; 0x7ca <__divsf3_pse+0x90>
     76a:	91 50       	subi	r25, 0x01	; 1
     76c:	50 40       	sbci	r21, 0x00	; 0
     76e:	e6 95       	lsr	r30
     770:	00 1c       	adc	r0, r0
     772:	ca f7       	brpl	.-14     	; 0x766 <__divsf3_pse+0x2c>
     774:	29 d0       	rcall	.+82     	; 0x7c8 <__divsf3_pse+0x8e>
     776:	fe 2f       	mov	r31, r30
     778:	27 d0       	rcall	.+78     	; 0x7c8 <__divsf3_pse+0x8e>
     77a:	66 0f       	add	r22, r22
     77c:	77 1f       	adc	r23, r23
     77e:	88 1f       	adc	r24, r24
     780:	bb 1f       	adc	r27, r27
     782:	26 17       	cp	r18, r22
     784:	37 07       	cpc	r19, r23
     786:	48 07       	cpc	r20, r24
     788:	ab 07       	cpc	r26, r27
     78a:	b0 e8       	ldi	r27, 0x80	; 128
     78c:	09 f0       	breq	.+2      	; 0x790 <__divsf3_pse+0x56>
     78e:	bb 0b       	sbc	r27, r27
     790:	80 2d       	mov	r24, r0
     792:	bf 01       	movw	r22, r30
     794:	ff 27       	eor	r31, r31
     796:	93 58       	subi	r25, 0x83	; 131
     798:	5f 4f       	sbci	r21, 0xFF	; 255
     79a:	2a f0       	brmi	.+10     	; 0x7a6 <__divsf3_pse+0x6c>
     79c:	9e 3f       	cpi	r25, 0xFE	; 254
     79e:	51 05       	cpc	r21, r1
     7a0:	68 f0       	brcs	.+26     	; 0x7bc <__divsf3_pse+0x82>
     7a2:	92 c0       	rjmp	.+292    	; 0x8c8 <__fp_inf>
     7a4:	dc c0       	rjmp	.+440    	; 0x95e <__fp_szero>
     7a6:	5f 3f       	cpi	r21, 0xFF	; 255
     7a8:	ec f3       	brlt	.-6      	; 0x7a4 <__divsf3_pse+0x6a>
     7aa:	98 3e       	cpi	r25, 0xE8	; 232
     7ac:	dc f3       	brlt	.-10     	; 0x7a4 <__divsf3_pse+0x6a>
     7ae:	86 95       	lsr	r24
     7b0:	77 95       	ror	r23
     7b2:	67 95       	ror	r22
     7b4:	b7 95       	ror	r27
     7b6:	f7 95       	ror	r31
     7b8:	9f 5f       	subi	r25, 0xFF	; 255
     7ba:	c9 f7       	brne	.-14     	; 0x7ae <__divsf3_pse+0x74>
     7bc:	88 0f       	add	r24, r24
     7be:	91 1d       	adc	r25, r1
     7c0:	96 95       	lsr	r25
     7c2:	87 95       	ror	r24
     7c4:	97 f9       	bld	r25, 7
     7c6:	08 95       	ret
     7c8:	e1 e0       	ldi	r30, 0x01	; 1
     7ca:	66 0f       	add	r22, r22
     7cc:	77 1f       	adc	r23, r23
     7ce:	88 1f       	adc	r24, r24
     7d0:	bb 1f       	adc	r27, r27
     7d2:	62 17       	cp	r22, r18
     7d4:	73 07       	cpc	r23, r19
     7d6:	84 07       	cpc	r24, r20
     7d8:	ba 07       	cpc	r27, r26
     7da:	20 f0       	brcs	.+8      	; 0x7e4 <__divsf3_pse+0xaa>
     7dc:	62 1b       	sub	r22, r18
     7de:	73 0b       	sbc	r23, r19
     7e0:	84 0b       	sbc	r24, r20
     7e2:	ba 0b       	sbc	r27, r26
     7e4:	ee 1f       	adc	r30, r30
     7e6:	88 f7       	brcc	.-30     	; 0x7ca <__divsf3_pse+0x90>
     7e8:	e0 95       	com	r30
     7ea:	08 95       	ret

000007ec <__fixsfsi>:
     7ec:	04 d0       	rcall	.+8      	; 0x7f6 <__fixunssfsi>
     7ee:	68 94       	set
     7f0:	b1 11       	cpse	r27, r1
     7f2:	b5 c0       	rjmp	.+362    	; 0x95e <__fp_szero>
     7f4:	08 95       	ret

000007f6 <__fixunssfsi>:
     7f6:	98 d0       	rcall	.+304    	; 0x928 <__fp_splitA>
     7f8:	88 f0       	brcs	.+34     	; 0x81c <__fixunssfsi+0x26>
     7fa:	9f 57       	subi	r25, 0x7F	; 127
     7fc:	90 f0       	brcs	.+36     	; 0x822 <__fixunssfsi+0x2c>
     7fe:	b9 2f       	mov	r27, r25
     800:	99 27       	eor	r25, r25
     802:	b7 51       	subi	r27, 0x17	; 23
     804:	a0 f0       	brcs	.+40     	; 0x82e <__fixunssfsi+0x38>
     806:	d1 f0       	breq	.+52     	; 0x83c <__fixunssfsi+0x46>
     808:	66 0f       	add	r22, r22
     80a:	77 1f       	adc	r23, r23
     80c:	88 1f       	adc	r24, r24
     80e:	99 1f       	adc	r25, r25
     810:	1a f0       	brmi	.+6      	; 0x818 <__fixunssfsi+0x22>
     812:	ba 95       	dec	r27
     814:	c9 f7       	brne	.-14     	; 0x808 <__fixunssfsi+0x12>
     816:	12 c0       	rjmp	.+36     	; 0x83c <__fixunssfsi+0x46>
     818:	b1 30       	cpi	r27, 0x01	; 1
     81a:	81 f0       	breq	.+32     	; 0x83c <__fixunssfsi+0x46>
     81c:	9f d0       	rcall	.+318    	; 0x95c <__fp_zero>
     81e:	b1 e0       	ldi	r27, 0x01	; 1
     820:	08 95       	ret
     822:	9c c0       	rjmp	.+312    	; 0x95c <__fp_zero>
     824:	67 2f       	mov	r22, r23
     826:	78 2f       	mov	r23, r24
     828:	88 27       	eor	r24, r24
     82a:	b8 5f       	subi	r27, 0xF8	; 248
     82c:	39 f0       	breq	.+14     	; 0x83c <__fixunssfsi+0x46>
     82e:	b9 3f       	cpi	r27, 0xF9	; 249
     830:	cc f3       	brlt	.-14     	; 0x824 <__fixunssfsi+0x2e>
     832:	86 95       	lsr	r24
     834:	77 95       	ror	r23
     836:	67 95       	ror	r22
     838:	b3 95       	inc	r27
     83a:	d9 f7       	brne	.-10     	; 0x832 <__fixunssfsi+0x3c>
     83c:	3e f4       	brtc	.+14     	; 0x84c <__fixunssfsi+0x56>
     83e:	90 95       	com	r25
     840:	80 95       	com	r24
     842:	70 95       	com	r23
     844:	61 95       	neg	r22
     846:	7f 4f       	sbci	r23, 0xFF	; 255
     848:	8f 4f       	sbci	r24, 0xFF	; 255
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	08 95       	ret

0000084e <__floatunsisf>:
     84e:	e8 94       	clt
     850:	09 c0       	rjmp	.+18     	; 0x864 <__floatsisf+0x12>

00000852 <__floatsisf>:
     852:	97 fb       	bst	r25, 7
     854:	3e f4       	brtc	.+14     	; 0x864 <__floatsisf+0x12>
     856:	90 95       	com	r25
     858:	80 95       	com	r24
     85a:	70 95       	com	r23
     85c:	61 95       	neg	r22
     85e:	7f 4f       	sbci	r23, 0xFF	; 255
     860:	8f 4f       	sbci	r24, 0xFF	; 255
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	99 23       	and	r25, r25
     866:	a9 f0       	breq	.+42     	; 0x892 <__floatsisf+0x40>
     868:	f9 2f       	mov	r31, r25
     86a:	96 e9       	ldi	r25, 0x96	; 150
     86c:	bb 27       	eor	r27, r27
     86e:	93 95       	inc	r25
     870:	f6 95       	lsr	r31
     872:	87 95       	ror	r24
     874:	77 95       	ror	r23
     876:	67 95       	ror	r22
     878:	b7 95       	ror	r27
     87a:	f1 11       	cpse	r31, r1
     87c:	f8 cf       	rjmp	.-16     	; 0x86e <__floatsisf+0x1c>
     87e:	fa f4       	brpl	.+62     	; 0x8be <__floatsisf+0x6c>
     880:	bb 0f       	add	r27, r27
     882:	11 f4       	brne	.+4      	; 0x888 <__floatsisf+0x36>
     884:	60 ff       	sbrs	r22, 0
     886:	1b c0       	rjmp	.+54     	; 0x8be <__floatsisf+0x6c>
     888:	6f 5f       	subi	r22, 0xFF	; 255
     88a:	7f 4f       	sbci	r23, 0xFF	; 255
     88c:	8f 4f       	sbci	r24, 0xFF	; 255
     88e:	9f 4f       	sbci	r25, 0xFF	; 255
     890:	16 c0       	rjmp	.+44     	; 0x8be <__floatsisf+0x6c>
     892:	88 23       	and	r24, r24
     894:	11 f0       	breq	.+4      	; 0x89a <__floatsisf+0x48>
     896:	96 e9       	ldi	r25, 0x96	; 150
     898:	11 c0       	rjmp	.+34     	; 0x8bc <__floatsisf+0x6a>
     89a:	77 23       	and	r23, r23
     89c:	21 f0       	breq	.+8      	; 0x8a6 <__floatsisf+0x54>
     89e:	9e e8       	ldi	r25, 0x8E	; 142
     8a0:	87 2f       	mov	r24, r23
     8a2:	76 2f       	mov	r23, r22
     8a4:	05 c0       	rjmp	.+10     	; 0x8b0 <__floatsisf+0x5e>
     8a6:	66 23       	and	r22, r22
     8a8:	71 f0       	breq	.+28     	; 0x8c6 <__floatsisf+0x74>
     8aa:	96 e8       	ldi	r25, 0x86	; 134
     8ac:	86 2f       	mov	r24, r22
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	60 e0       	ldi	r22, 0x00	; 0
     8b2:	2a f0       	brmi	.+10     	; 0x8be <__floatsisf+0x6c>
     8b4:	9a 95       	dec	r25
     8b6:	66 0f       	add	r22, r22
     8b8:	77 1f       	adc	r23, r23
     8ba:	88 1f       	adc	r24, r24
     8bc:	da f7       	brpl	.-10     	; 0x8b4 <__floatsisf+0x62>
     8be:	88 0f       	add	r24, r24
     8c0:	96 95       	lsr	r25
     8c2:	87 95       	ror	r24
     8c4:	97 f9       	bld	r25, 7
     8c6:	08 95       	ret

000008c8 <__fp_inf>:
     8c8:	97 f9       	bld	r25, 7
     8ca:	9f 67       	ori	r25, 0x7F	; 127
     8cc:	80 e8       	ldi	r24, 0x80	; 128
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	08 95       	ret

000008d4 <__fp_nan>:
     8d4:	9f ef       	ldi	r25, 0xFF	; 255
     8d6:	80 ec       	ldi	r24, 0xC0	; 192
     8d8:	08 95       	ret

000008da <__fp_pscA>:
     8da:	00 24       	eor	r0, r0
     8dc:	0a 94       	dec	r0
     8de:	16 16       	cp	r1, r22
     8e0:	17 06       	cpc	r1, r23
     8e2:	18 06       	cpc	r1, r24
     8e4:	09 06       	cpc	r0, r25
     8e6:	08 95       	ret

000008e8 <__fp_pscB>:
     8e8:	00 24       	eor	r0, r0
     8ea:	0a 94       	dec	r0
     8ec:	12 16       	cp	r1, r18
     8ee:	13 06       	cpc	r1, r19
     8f0:	14 06       	cpc	r1, r20
     8f2:	05 06       	cpc	r0, r21
     8f4:	08 95       	ret

000008f6 <__fp_round>:
     8f6:	09 2e       	mov	r0, r25
     8f8:	03 94       	inc	r0
     8fa:	00 0c       	add	r0, r0
     8fc:	11 f4       	brne	.+4      	; 0x902 <__fp_round+0xc>
     8fe:	88 23       	and	r24, r24
     900:	52 f0       	brmi	.+20     	; 0x916 <__fp_round+0x20>
     902:	bb 0f       	add	r27, r27
     904:	40 f4       	brcc	.+16     	; 0x916 <__fp_round+0x20>
     906:	bf 2b       	or	r27, r31
     908:	11 f4       	brne	.+4      	; 0x90e <__fp_round+0x18>
     90a:	60 ff       	sbrs	r22, 0
     90c:	04 c0       	rjmp	.+8      	; 0x916 <__fp_round+0x20>
     90e:	6f 5f       	subi	r22, 0xFF	; 255
     910:	7f 4f       	sbci	r23, 0xFF	; 255
     912:	8f 4f       	sbci	r24, 0xFF	; 255
     914:	9f 4f       	sbci	r25, 0xFF	; 255
     916:	08 95       	ret

00000918 <__fp_split3>:
     918:	57 fd       	sbrc	r21, 7
     91a:	90 58       	subi	r25, 0x80	; 128
     91c:	44 0f       	add	r20, r20
     91e:	55 1f       	adc	r21, r21
     920:	59 f0       	breq	.+22     	; 0x938 <__fp_splitA+0x10>
     922:	5f 3f       	cpi	r21, 0xFF	; 255
     924:	71 f0       	breq	.+28     	; 0x942 <__fp_splitA+0x1a>
     926:	47 95       	ror	r20

00000928 <__fp_splitA>:
     928:	88 0f       	add	r24, r24
     92a:	97 fb       	bst	r25, 7
     92c:	99 1f       	adc	r25, r25
     92e:	61 f0       	breq	.+24     	; 0x948 <__fp_splitA+0x20>
     930:	9f 3f       	cpi	r25, 0xFF	; 255
     932:	79 f0       	breq	.+30     	; 0x952 <__fp_splitA+0x2a>
     934:	87 95       	ror	r24
     936:	08 95       	ret
     938:	12 16       	cp	r1, r18
     93a:	13 06       	cpc	r1, r19
     93c:	14 06       	cpc	r1, r20
     93e:	55 1f       	adc	r21, r21
     940:	f2 cf       	rjmp	.-28     	; 0x926 <__fp_split3+0xe>
     942:	46 95       	lsr	r20
     944:	f1 df       	rcall	.-30     	; 0x928 <__fp_splitA>
     946:	08 c0       	rjmp	.+16     	; 0x958 <__fp_splitA+0x30>
     948:	16 16       	cp	r1, r22
     94a:	17 06       	cpc	r1, r23
     94c:	18 06       	cpc	r1, r24
     94e:	99 1f       	adc	r25, r25
     950:	f1 cf       	rjmp	.-30     	; 0x934 <__fp_splitA+0xc>
     952:	86 95       	lsr	r24
     954:	71 05       	cpc	r23, r1
     956:	61 05       	cpc	r22, r1
     958:	08 94       	sec
     95a:	08 95       	ret

0000095c <__fp_zero>:
     95c:	e8 94       	clt

0000095e <__fp_szero>:
     95e:	bb 27       	eor	r27, r27
     960:	66 27       	eor	r22, r22
     962:	77 27       	eor	r23, r23
     964:	cb 01       	movw	r24, r22
     966:	97 f9       	bld	r25, 7
     968:	08 95       	ret

0000096a <__mulsf3>:
     96a:	0b d0       	rcall	.+22     	; 0x982 <__mulsf3x>
     96c:	c4 cf       	rjmp	.-120    	; 0x8f6 <__fp_round>
     96e:	b5 df       	rcall	.-150    	; 0x8da <__fp_pscA>
     970:	28 f0       	brcs	.+10     	; 0x97c <__mulsf3+0x12>
     972:	ba df       	rcall	.-140    	; 0x8e8 <__fp_pscB>
     974:	18 f0       	brcs	.+6      	; 0x97c <__mulsf3+0x12>
     976:	95 23       	and	r25, r21
     978:	09 f0       	breq	.+2      	; 0x97c <__mulsf3+0x12>
     97a:	a6 cf       	rjmp	.-180    	; 0x8c8 <__fp_inf>
     97c:	ab cf       	rjmp	.-170    	; 0x8d4 <__fp_nan>
     97e:	11 24       	eor	r1, r1
     980:	ee cf       	rjmp	.-36     	; 0x95e <__fp_szero>

00000982 <__mulsf3x>:
     982:	ca df       	rcall	.-108    	; 0x918 <__fp_split3>
     984:	a0 f3       	brcs	.-24     	; 0x96e <__mulsf3+0x4>

00000986 <__mulsf3_pse>:
     986:	95 9f       	mul	r25, r21
     988:	d1 f3       	breq	.-12     	; 0x97e <__mulsf3+0x14>
     98a:	95 0f       	add	r25, r21
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	55 1f       	adc	r21, r21
     990:	62 9f       	mul	r22, r18
     992:	f0 01       	movw	r30, r0
     994:	72 9f       	mul	r23, r18
     996:	bb 27       	eor	r27, r27
     998:	f0 0d       	add	r31, r0
     99a:	b1 1d       	adc	r27, r1
     99c:	63 9f       	mul	r22, r19
     99e:	aa 27       	eor	r26, r26
     9a0:	f0 0d       	add	r31, r0
     9a2:	b1 1d       	adc	r27, r1
     9a4:	aa 1f       	adc	r26, r26
     9a6:	64 9f       	mul	r22, r20
     9a8:	66 27       	eor	r22, r22
     9aa:	b0 0d       	add	r27, r0
     9ac:	a1 1d       	adc	r26, r1
     9ae:	66 1f       	adc	r22, r22
     9b0:	82 9f       	mul	r24, r18
     9b2:	22 27       	eor	r18, r18
     9b4:	b0 0d       	add	r27, r0
     9b6:	a1 1d       	adc	r26, r1
     9b8:	62 1f       	adc	r22, r18
     9ba:	73 9f       	mul	r23, r19
     9bc:	b0 0d       	add	r27, r0
     9be:	a1 1d       	adc	r26, r1
     9c0:	62 1f       	adc	r22, r18
     9c2:	83 9f       	mul	r24, r19
     9c4:	a0 0d       	add	r26, r0
     9c6:	61 1d       	adc	r22, r1
     9c8:	22 1f       	adc	r18, r18
     9ca:	74 9f       	mul	r23, r20
     9cc:	33 27       	eor	r19, r19
     9ce:	a0 0d       	add	r26, r0
     9d0:	61 1d       	adc	r22, r1
     9d2:	23 1f       	adc	r18, r19
     9d4:	84 9f       	mul	r24, r20
     9d6:	60 0d       	add	r22, r0
     9d8:	21 1d       	adc	r18, r1
     9da:	82 2f       	mov	r24, r18
     9dc:	76 2f       	mov	r23, r22
     9de:	6a 2f       	mov	r22, r26
     9e0:	11 24       	eor	r1, r1
     9e2:	9f 57       	subi	r25, 0x7F	; 127
     9e4:	50 40       	sbci	r21, 0x00	; 0
     9e6:	8a f0       	brmi	.+34     	; 0xa0a <__mulsf3_pse+0x84>
     9e8:	e1 f0       	breq	.+56     	; 0xa22 <__mulsf3_pse+0x9c>
     9ea:	88 23       	and	r24, r24
     9ec:	4a f0       	brmi	.+18     	; 0xa00 <__mulsf3_pse+0x7a>
     9ee:	ee 0f       	add	r30, r30
     9f0:	ff 1f       	adc	r31, r31
     9f2:	bb 1f       	adc	r27, r27
     9f4:	66 1f       	adc	r22, r22
     9f6:	77 1f       	adc	r23, r23
     9f8:	88 1f       	adc	r24, r24
     9fa:	91 50       	subi	r25, 0x01	; 1
     9fc:	50 40       	sbci	r21, 0x00	; 0
     9fe:	a9 f7       	brne	.-22     	; 0x9ea <__mulsf3_pse+0x64>
     a00:	9e 3f       	cpi	r25, 0xFE	; 254
     a02:	51 05       	cpc	r21, r1
     a04:	70 f0       	brcs	.+28     	; 0xa22 <__mulsf3_pse+0x9c>
     a06:	60 cf       	rjmp	.-320    	; 0x8c8 <__fp_inf>
     a08:	aa cf       	rjmp	.-172    	; 0x95e <__fp_szero>
     a0a:	5f 3f       	cpi	r21, 0xFF	; 255
     a0c:	ec f3       	brlt	.-6      	; 0xa08 <__mulsf3_pse+0x82>
     a0e:	98 3e       	cpi	r25, 0xE8	; 232
     a10:	dc f3       	brlt	.-10     	; 0xa08 <__mulsf3_pse+0x82>
     a12:	86 95       	lsr	r24
     a14:	77 95       	ror	r23
     a16:	67 95       	ror	r22
     a18:	b7 95       	ror	r27
     a1a:	f7 95       	ror	r31
     a1c:	e7 95       	ror	r30
     a1e:	9f 5f       	subi	r25, 0xFF	; 255
     a20:	c1 f7       	brne	.-16     	; 0xa12 <__mulsf3_pse+0x8c>
     a22:	fe 2b       	or	r31, r30
     a24:	88 0f       	add	r24, r24
     a26:	91 1d       	adc	r25, r1
     a28:	96 95       	lsr	r25
     a2a:	87 95       	ror	r24
     a2c:	97 f9       	bld	r25, 7
     a2e:	08 95       	ret

00000a30 <round>:
     a30:	7b df       	rcall	.-266    	; 0x928 <__fp_splitA>
     a32:	e0 f0       	brcs	.+56     	; 0xa6c <round+0x3c>
     a34:	9e 37       	cpi	r25, 0x7E	; 126
     a36:	d8 f0       	brcs	.+54     	; 0xa6e <round+0x3e>
     a38:	96 39       	cpi	r25, 0x96	; 150
     a3a:	b8 f4       	brcc	.+46     	; 0xa6a <round+0x3a>
     a3c:	9e 38       	cpi	r25, 0x8E	; 142
     a3e:	48 f4       	brcc	.+18     	; 0xa52 <round+0x22>
     a40:	67 2f       	mov	r22, r23
     a42:	78 2f       	mov	r23, r24
     a44:	88 27       	eor	r24, r24
     a46:	98 5f       	subi	r25, 0xF8	; 248
     a48:	f9 cf       	rjmp	.-14     	; 0xa3c <round+0xc>
     a4a:	86 95       	lsr	r24
     a4c:	77 95       	ror	r23
     a4e:	67 95       	ror	r22
     a50:	93 95       	inc	r25
     a52:	95 39       	cpi	r25, 0x95	; 149
     a54:	d0 f3       	brcs	.-12     	; 0xa4a <round+0x1a>
     a56:	b6 2f       	mov	r27, r22
     a58:	b1 70       	andi	r27, 0x01	; 1
     a5a:	6b 0f       	add	r22, r27
     a5c:	71 1d       	adc	r23, r1
     a5e:	81 1d       	adc	r24, r1
     a60:	20 f4       	brcc	.+8      	; 0xa6a <round+0x3a>
     a62:	87 95       	ror	r24
     a64:	77 95       	ror	r23
     a66:	67 95       	ror	r22
     a68:	93 95       	inc	r25
     a6a:	02 c0       	rjmp	.+4      	; 0xa70 <__fp_mintl>
     a6c:	1c c0       	rjmp	.+56     	; 0xaa6 <__fp_mpack>
     a6e:	77 cf       	rjmp	.-274    	; 0x95e <__fp_szero>

00000a70 <__fp_mintl>:
     a70:	88 23       	and	r24, r24
     a72:	71 f4       	brne	.+28     	; 0xa90 <__fp_mintl+0x20>
     a74:	77 23       	and	r23, r23
     a76:	21 f0       	breq	.+8      	; 0xa80 <__fp_mintl+0x10>
     a78:	98 50       	subi	r25, 0x08	; 8
     a7a:	87 2b       	or	r24, r23
     a7c:	76 2f       	mov	r23, r22
     a7e:	07 c0       	rjmp	.+14     	; 0xa8e <__fp_mintl+0x1e>
     a80:	66 23       	and	r22, r22
     a82:	11 f4       	brne	.+4      	; 0xa88 <__fp_mintl+0x18>
     a84:	99 27       	eor	r25, r25
     a86:	0d c0       	rjmp	.+26     	; 0xaa2 <__fp_mintl+0x32>
     a88:	90 51       	subi	r25, 0x10	; 16
     a8a:	86 2b       	or	r24, r22
     a8c:	70 e0       	ldi	r23, 0x00	; 0
     a8e:	60 e0       	ldi	r22, 0x00	; 0
     a90:	2a f0       	brmi	.+10     	; 0xa9c <__fp_mintl+0x2c>
     a92:	9a 95       	dec	r25
     a94:	66 0f       	add	r22, r22
     a96:	77 1f       	adc	r23, r23
     a98:	88 1f       	adc	r24, r24
     a9a:	da f7       	brpl	.-10     	; 0xa92 <__fp_mintl+0x22>
     a9c:	88 0f       	add	r24, r24
     a9e:	96 95       	lsr	r25
     aa0:	87 95       	ror	r24
     aa2:	97 f9       	bld	r25, 7
     aa4:	08 95       	ret

00000aa6 <__fp_mpack>:
     aa6:	9f 3f       	cpi	r25, 0xFF	; 255
     aa8:	31 f0       	breq	.+12     	; 0xab6 <__fp_mpack_finite+0xc>

00000aaa <__fp_mpack_finite>:
     aaa:	91 50       	subi	r25, 0x01	; 1
     aac:	20 f4       	brcc	.+8      	; 0xab6 <__fp_mpack_finite+0xc>
     aae:	87 95       	ror	r24
     ab0:	77 95       	ror	r23
     ab2:	67 95       	ror	r22
     ab4:	b7 95       	ror	r27
     ab6:	88 0f       	add	r24, r24
     ab8:	91 1d       	adc	r25, r1
     aba:	96 95       	lsr	r25
     abc:	87 95       	ror	r24
     abe:	97 f9       	bld	r25, 7
     ac0:	08 95       	ret

00000ac2 <malloc>:
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	82 30       	cpi	r24, 0x02	; 2
     ac8:	91 05       	cpc	r25, r1
     aca:	10 f4       	brcc	.+4      	; 0xad0 <malloc+0xe>
     acc:	82 e0       	ldi	r24, 0x02	; 2
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	e0 91 32 02 	lds	r30, 0x0232
     ad4:	f0 91 33 02 	lds	r31, 0x0233
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	30 97       	sbiw	r30, 0x00	; 0
     ae2:	39 f1       	breq	.+78     	; 0xb32 <malloc+0x70>
     ae4:	40 81       	ld	r20, Z
     ae6:	51 81       	ldd	r21, Z+1	; 0x01
     ae8:	48 17       	cp	r20, r24
     aea:	59 07       	cpc	r21, r25
     aec:	b8 f0       	brcs	.+46     	; 0xb1c <malloc+0x5a>
     aee:	48 17       	cp	r20, r24
     af0:	59 07       	cpc	r21, r25
     af2:	71 f4       	brne	.+28     	; 0xb10 <malloc+0x4e>
     af4:	82 81       	ldd	r24, Z+2	; 0x02
     af6:	93 81       	ldd	r25, Z+3	; 0x03
     af8:	10 97       	sbiw	r26, 0x00	; 0
     afa:	29 f0       	breq	.+10     	; 0xb06 <malloc+0x44>
     afc:	13 96       	adiw	r26, 0x03	; 3
     afe:	9c 93       	st	X, r25
     b00:	8e 93       	st	-X, r24
     b02:	12 97       	sbiw	r26, 0x02	; 2
     b04:	2c c0       	rjmp	.+88     	; 0xb5e <malloc+0x9c>
     b06:	90 93 33 02 	sts	0x0233, r25
     b0a:	80 93 32 02 	sts	0x0232, r24
     b0e:	27 c0       	rjmp	.+78     	; 0xb5e <malloc+0x9c>
     b10:	21 15       	cp	r18, r1
     b12:	31 05       	cpc	r19, r1
     b14:	31 f0       	breq	.+12     	; 0xb22 <malloc+0x60>
     b16:	42 17       	cp	r20, r18
     b18:	53 07       	cpc	r21, r19
     b1a:	18 f0       	brcs	.+6      	; 0xb22 <malloc+0x60>
     b1c:	a9 01       	movw	r20, r18
     b1e:	db 01       	movw	r26, r22
     b20:	01 c0       	rjmp	.+2      	; 0xb24 <malloc+0x62>
     b22:	ef 01       	movw	r28, r30
     b24:	9a 01       	movw	r18, r20
     b26:	bd 01       	movw	r22, r26
     b28:	df 01       	movw	r26, r30
     b2a:	02 80       	ldd	r0, Z+2	; 0x02
     b2c:	f3 81       	ldd	r31, Z+3	; 0x03
     b2e:	e0 2d       	mov	r30, r0
     b30:	d7 cf       	rjmp	.-82     	; 0xae0 <malloc+0x1e>
     b32:	21 15       	cp	r18, r1
     b34:	31 05       	cpc	r19, r1
     b36:	f9 f0       	breq	.+62     	; 0xb76 <malloc+0xb4>
     b38:	28 1b       	sub	r18, r24
     b3a:	39 0b       	sbc	r19, r25
     b3c:	24 30       	cpi	r18, 0x04	; 4
     b3e:	31 05       	cpc	r19, r1
     b40:	80 f4       	brcc	.+32     	; 0xb62 <malloc+0xa0>
     b42:	8a 81       	ldd	r24, Y+2	; 0x02
     b44:	9b 81       	ldd	r25, Y+3	; 0x03
     b46:	61 15       	cp	r22, r1
     b48:	71 05       	cpc	r23, r1
     b4a:	21 f0       	breq	.+8      	; 0xb54 <malloc+0x92>
     b4c:	fb 01       	movw	r30, r22
     b4e:	93 83       	std	Z+3, r25	; 0x03
     b50:	82 83       	std	Z+2, r24	; 0x02
     b52:	04 c0       	rjmp	.+8      	; 0xb5c <malloc+0x9a>
     b54:	90 93 33 02 	sts	0x0233, r25
     b58:	80 93 32 02 	sts	0x0232, r24
     b5c:	fe 01       	movw	r30, r28
     b5e:	32 96       	adiw	r30, 0x02	; 2
     b60:	44 c0       	rjmp	.+136    	; 0xbea <malloc+0x128>
     b62:	fe 01       	movw	r30, r28
     b64:	e2 0f       	add	r30, r18
     b66:	f3 1f       	adc	r31, r19
     b68:	81 93       	st	Z+, r24
     b6a:	91 93       	st	Z+, r25
     b6c:	22 50       	subi	r18, 0x02	; 2
     b6e:	31 09       	sbc	r19, r1
     b70:	39 83       	std	Y+1, r19	; 0x01
     b72:	28 83       	st	Y, r18
     b74:	3a c0       	rjmp	.+116    	; 0xbea <malloc+0x128>
     b76:	20 91 30 02 	lds	r18, 0x0230
     b7a:	30 91 31 02 	lds	r19, 0x0231
     b7e:	23 2b       	or	r18, r19
     b80:	41 f4       	brne	.+16     	; 0xb92 <malloc+0xd0>
     b82:	20 91 02 01 	lds	r18, 0x0102
     b86:	30 91 03 01 	lds	r19, 0x0103
     b8a:	30 93 31 02 	sts	0x0231, r19
     b8e:	20 93 30 02 	sts	0x0230, r18
     b92:	20 91 00 01 	lds	r18, 0x0100
     b96:	30 91 01 01 	lds	r19, 0x0101
     b9a:	21 15       	cp	r18, r1
     b9c:	31 05       	cpc	r19, r1
     b9e:	41 f4       	brne	.+16     	; 0xbb0 <malloc+0xee>
     ba0:	2d b7       	in	r18, 0x3d	; 61
     ba2:	3e b7       	in	r19, 0x3e	; 62
     ba4:	40 91 04 01 	lds	r20, 0x0104
     ba8:	50 91 05 01 	lds	r21, 0x0105
     bac:	24 1b       	sub	r18, r20
     bae:	35 0b       	sbc	r19, r21
     bb0:	e0 91 30 02 	lds	r30, 0x0230
     bb4:	f0 91 31 02 	lds	r31, 0x0231
     bb8:	e2 17       	cp	r30, r18
     bba:	f3 07       	cpc	r31, r19
     bbc:	a0 f4       	brcc	.+40     	; 0xbe6 <malloc+0x124>
     bbe:	2e 1b       	sub	r18, r30
     bc0:	3f 0b       	sbc	r19, r31
     bc2:	28 17       	cp	r18, r24
     bc4:	39 07       	cpc	r19, r25
     bc6:	78 f0       	brcs	.+30     	; 0xbe6 <malloc+0x124>
     bc8:	ac 01       	movw	r20, r24
     bca:	4e 5f       	subi	r20, 0xFE	; 254
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	24 17       	cp	r18, r20
     bd0:	35 07       	cpc	r19, r21
     bd2:	48 f0       	brcs	.+18     	; 0xbe6 <malloc+0x124>
     bd4:	4e 0f       	add	r20, r30
     bd6:	5f 1f       	adc	r21, r31
     bd8:	50 93 31 02 	sts	0x0231, r21
     bdc:	40 93 30 02 	sts	0x0230, r20
     be0:	81 93       	st	Z+, r24
     be2:	91 93       	st	Z+, r25
     be4:	02 c0       	rjmp	.+4      	; 0xbea <malloc+0x128>
     be6:	e0 e0       	ldi	r30, 0x00	; 0
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	cf 01       	movw	r24, r30
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	08 95       	ret

00000bf2 <free>:
     bf2:	cf 93       	push	r28
     bf4:	df 93       	push	r29
     bf6:	00 97       	sbiw	r24, 0x00	; 0
     bf8:	09 f4       	brne	.+2      	; 0xbfc <free+0xa>
     bfa:	87 c0       	rjmp	.+270    	; 0xd0a <free+0x118>
     bfc:	fc 01       	movw	r30, r24
     bfe:	32 97       	sbiw	r30, 0x02	; 2
     c00:	13 82       	std	Z+3, r1	; 0x03
     c02:	12 82       	std	Z+2, r1	; 0x02
     c04:	c0 91 32 02 	lds	r28, 0x0232
     c08:	d0 91 33 02 	lds	r29, 0x0233
     c0c:	20 97       	sbiw	r28, 0x00	; 0
     c0e:	81 f4       	brne	.+32     	; 0xc30 <free+0x3e>
     c10:	20 81       	ld	r18, Z
     c12:	31 81       	ldd	r19, Z+1	; 0x01
     c14:	28 0f       	add	r18, r24
     c16:	39 1f       	adc	r19, r25
     c18:	80 91 30 02 	lds	r24, 0x0230
     c1c:	90 91 31 02 	lds	r25, 0x0231
     c20:	82 17       	cp	r24, r18
     c22:	93 07       	cpc	r25, r19
     c24:	79 f5       	brne	.+94     	; 0xc84 <free+0x92>
     c26:	f0 93 31 02 	sts	0x0231, r31
     c2a:	e0 93 30 02 	sts	0x0230, r30
     c2e:	6d c0       	rjmp	.+218    	; 0xd0a <free+0x118>
     c30:	de 01       	movw	r26, r28
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	ae 17       	cp	r26, r30
     c38:	bf 07       	cpc	r27, r31
     c3a:	50 f4       	brcc	.+20     	; 0xc50 <free+0x5e>
     c3c:	12 96       	adiw	r26, 0x02	; 2
     c3e:	4d 91       	ld	r20, X+
     c40:	5c 91       	ld	r21, X
     c42:	13 97       	sbiw	r26, 0x03	; 3
     c44:	9d 01       	movw	r18, r26
     c46:	41 15       	cp	r20, r1
     c48:	51 05       	cpc	r21, r1
     c4a:	09 f1       	breq	.+66     	; 0xc8e <free+0x9c>
     c4c:	da 01       	movw	r26, r20
     c4e:	f3 cf       	rjmp	.-26     	; 0xc36 <free+0x44>
     c50:	b3 83       	std	Z+3, r27	; 0x03
     c52:	a2 83       	std	Z+2, r26	; 0x02
     c54:	40 81       	ld	r20, Z
     c56:	51 81       	ldd	r21, Z+1	; 0x01
     c58:	84 0f       	add	r24, r20
     c5a:	95 1f       	adc	r25, r21
     c5c:	8a 17       	cp	r24, r26
     c5e:	9b 07       	cpc	r25, r27
     c60:	71 f4       	brne	.+28     	; 0xc7e <free+0x8c>
     c62:	8d 91       	ld	r24, X+
     c64:	9c 91       	ld	r25, X
     c66:	11 97       	sbiw	r26, 0x01	; 1
     c68:	84 0f       	add	r24, r20
     c6a:	95 1f       	adc	r25, r21
     c6c:	02 96       	adiw	r24, 0x02	; 2
     c6e:	91 83       	std	Z+1, r25	; 0x01
     c70:	80 83       	st	Z, r24
     c72:	12 96       	adiw	r26, 0x02	; 2
     c74:	8d 91       	ld	r24, X+
     c76:	9c 91       	ld	r25, X
     c78:	13 97       	sbiw	r26, 0x03	; 3
     c7a:	93 83       	std	Z+3, r25	; 0x03
     c7c:	82 83       	std	Z+2, r24	; 0x02
     c7e:	21 15       	cp	r18, r1
     c80:	31 05       	cpc	r19, r1
     c82:	29 f4       	brne	.+10     	; 0xc8e <free+0x9c>
     c84:	f0 93 33 02 	sts	0x0233, r31
     c88:	e0 93 32 02 	sts	0x0232, r30
     c8c:	3e c0       	rjmp	.+124    	; 0xd0a <free+0x118>
     c8e:	d9 01       	movw	r26, r18
     c90:	13 96       	adiw	r26, 0x03	; 3
     c92:	fc 93       	st	X, r31
     c94:	ee 93       	st	-X, r30
     c96:	12 97       	sbiw	r26, 0x02	; 2
     c98:	4d 91       	ld	r20, X+
     c9a:	5d 91       	ld	r21, X+
     c9c:	a4 0f       	add	r26, r20
     c9e:	b5 1f       	adc	r27, r21
     ca0:	ea 17       	cp	r30, r26
     ca2:	fb 07       	cpc	r31, r27
     ca4:	79 f4       	brne	.+30     	; 0xcc4 <free+0xd2>
     ca6:	80 81       	ld	r24, Z
     ca8:	91 81       	ldd	r25, Z+1	; 0x01
     caa:	84 0f       	add	r24, r20
     cac:	95 1f       	adc	r25, r21
     cae:	02 96       	adiw	r24, 0x02	; 2
     cb0:	d9 01       	movw	r26, r18
     cb2:	11 96       	adiw	r26, 0x01	; 1
     cb4:	9c 93       	st	X, r25
     cb6:	8e 93       	st	-X, r24
     cb8:	82 81       	ldd	r24, Z+2	; 0x02
     cba:	93 81       	ldd	r25, Z+3	; 0x03
     cbc:	13 96       	adiw	r26, 0x03	; 3
     cbe:	9c 93       	st	X, r25
     cc0:	8e 93       	st	-X, r24
     cc2:	12 97       	sbiw	r26, 0x02	; 2
     cc4:	e0 e0       	ldi	r30, 0x00	; 0
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	8a 81       	ldd	r24, Y+2	; 0x02
     cca:	9b 81       	ldd	r25, Y+3	; 0x03
     ccc:	00 97       	sbiw	r24, 0x00	; 0
     cce:	19 f0       	breq	.+6      	; 0xcd6 <free+0xe4>
     cd0:	fe 01       	movw	r30, r28
     cd2:	ec 01       	movw	r28, r24
     cd4:	f9 cf       	rjmp	.-14     	; 0xcc8 <free+0xd6>
     cd6:	ce 01       	movw	r24, r28
     cd8:	02 96       	adiw	r24, 0x02	; 2
     cda:	28 81       	ld	r18, Y
     cdc:	39 81       	ldd	r19, Y+1	; 0x01
     cde:	82 0f       	add	r24, r18
     ce0:	93 1f       	adc	r25, r19
     ce2:	20 91 30 02 	lds	r18, 0x0230
     ce6:	30 91 31 02 	lds	r19, 0x0231
     cea:	28 17       	cp	r18, r24
     cec:	39 07       	cpc	r19, r25
     cee:	69 f4       	brne	.+26     	; 0xd0a <free+0x118>
     cf0:	30 97       	sbiw	r30, 0x00	; 0
     cf2:	29 f4       	brne	.+10     	; 0xcfe <free+0x10c>
     cf4:	10 92 33 02 	sts	0x0233, r1
     cf8:	10 92 32 02 	sts	0x0232, r1
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <free+0x110>
     cfe:	13 82       	std	Z+3, r1	; 0x03
     d00:	12 82       	std	Z+2, r1	; 0x02
     d02:	d0 93 31 02 	sts	0x0231, r29
     d06:	c0 93 30 02 	sts	0x0230, r28
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	08 95       	ret

00000d10 <fdevopen>:
     d10:	0f 93       	push	r16
     d12:	1f 93       	push	r17
     d14:	cf 93       	push	r28
     d16:	df 93       	push	r29
     d18:	ec 01       	movw	r28, r24
     d1a:	8b 01       	movw	r16, r22
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	31 f4       	brne	.+12     	; 0xd2c <fdevopen+0x1c>
     d20:	61 15       	cp	r22, r1
     d22:	71 05       	cpc	r23, r1
     d24:	19 f4       	brne	.+6      	; 0xd2c <fdevopen+0x1c>
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	38 c0       	rjmp	.+112    	; 0xd9c <fdevopen+0x8c>
     d2c:	6e e0       	ldi	r22, 0x0E	; 14
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	0e 94 b9 08 	call	0x1172	; 0x1172 <calloc>
     d38:	fc 01       	movw	r30, r24
     d3a:	00 97       	sbiw	r24, 0x00	; 0
     d3c:	a1 f3       	breq	.-24     	; 0xd26 <fdevopen+0x16>
     d3e:	80 e8       	ldi	r24, 0x80	; 128
     d40:	83 83       	std	Z+3, r24	; 0x03
     d42:	01 15       	cp	r16, r1
     d44:	11 05       	cpc	r17, r1
     d46:	71 f0       	breq	.+28     	; 0xd64 <fdevopen+0x54>
     d48:	13 87       	std	Z+11, r17	; 0x0b
     d4a:	02 87       	std	Z+10, r16	; 0x0a
     d4c:	81 e8       	ldi	r24, 0x81	; 129
     d4e:	83 83       	std	Z+3, r24	; 0x03
     d50:	80 91 34 02 	lds	r24, 0x0234
     d54:	90 91 35 02 	lds	r25, 0x0235
     d58:	89 2b       	or	r24, r25
     d5a:	21 f4       	brne	.+8      	; 0xd64 <fdevopen+0x54>
     d5c:	f0 93 35 02 	sts	0x0235, r31
     d60:	e0 93 34 02 	sts	0x0234, r30
     d64:	20 97       	sbiw	r28, 0x00	; 0
     d66:	c9 f0       	breq	.+50     	; 0xd9a <fdevopen+0x8a>
     d68:	d1 87       	std	Z+9, r29	; 0x09
     d6a:	c0 87       	std	Z+8, r28	; 0x08
     d6c:	83 81       	ldd	r24, Z+3	; 0x03
     d6e:	82 60       	ori	r24, 0x02	; 2
     d70:	83 83       	std	Z+3, r24	; 0x03
     d72:	80 91 36 02 	lds	r24, 0x0236
     d76:	90 91 37 02 	lds	r25, 0x0237
     d7a:	89 2b       	or	r24, r25
     d7c:	71 f4       	brne	.+28     	; 0xd9a <fdevopen+0x8a>
     d7e:	f0 93 37 02 	sts	0x0237, r31
     d82:	e0 93 36 02 	sts	0x0236, r30
     d86:	80 91 38 02 	lds	r24, 0x0238
     d8a:	90 91 39 02 	lds	r25, 0x0239
     d8e:	89 2b       	or	r24, r25
     d90:	21 f4       	brne	.+8      	; 0xd9a <fdevopen+0x8a>
     d92:	f0 93 39 02 	sts	0x0239, r31
     d96:	e0 93 38 02 	sts	0x0238, r30
     d9a:	cf 01       	movw	r24, r30
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	1f 91       	pop	r17
     da2:	0f 91       	pop	r16
     da4:	08 95       	ret

00000da6 <printf>:
     da6:	a0 e0       	ldi	r26, 0x00	; 0
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	e9 ed       	ldi	r30, 0xD9	; 217
     dac:	f6 e0       	ldi	r31, 0x06	; 6
     dae:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__prologue_saves__+0x20>
     db2:	fe 01       	movw	r30, r28
     db4:	35 96       	adiw	r30, 0x05	; 5
     db6:	61 91       	ld	r22, Z+
     db8:	71 91       	ld	r23, Z+
     dba:	af 01       	movw	r20, r30
     dbc:	80 91 36 02 	lds	r24, 0x0236
     dc0:	90 91 37 02 	lds	r25, 0x0237
     dc4:	0e 94 e7 06 	call	0xdce	; 0xdce <vfprintf>
     dc8:	e2 e0       	ldi	r30, 0x02	; 2
     dca:	0c 94 ae 09 	jmp	0x135c	; 0x135c <__epilogue_restores__+0x20>

00000dce <vfprintf>:
     dce:	ac e0       	ldi	r26, 0x0C	; 12
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	ed ee       	ldi	r30, 0xED	; 237
     dd4:	f6 e0       	ldi	r31, 0x06	; 6
     dd6:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__prologue_saves__>
     dda:	7c 01       	movw	r14, r24
     ddc:	6b 01       	movw	r12, r22
     dde:	8a 01       	movw	r16, r20
     de0:	fc 01       	movw	r30, r24
     de2:	17 82       	std	Z+7, r1	; 0x07
     de4:	16 82       	std	Z+6, r1	; 0x06
     de6:	83 81       	ldd	r24, Z+3	; 0x03
     de8:	81 ff       	sbrs	r24, 1
     dea:	bd c1       	rjmp	.+890    	; 0x1166 <vfprintf+0x398>
     dec:	ce 01       	movw	r24, r28
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	4c 01       	movw	r8, r24
     df2:	f7 01       	movw	r30, r14
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	f6 01       	movw	r30, r12
     df8:	93 fd       	sbrc	r25, 3
     dfa:	85 91       	lpm	r24, Z+
     dfc:	93 ff       	sbrs	r25, 3
     dfe:	81 91       	ld	r24, Z+
     e00:	6f 01       	movw	r12, r30
     e02:	88 23       	and	r24, r24
     e04:	09 f4       	brne	.+2      	; 0xe08 <vfprintf+0x3a>
     e06:	ab c1       	rjmp	.+854    	; 0x115e <vfprintf+0x390>
     e08:	85 32       	cpi	r24, 0x25	; 37
     e0a:	39 f4       	brne	.+14     	; 0xe1a <vfprintf+0x4c>
     e0c:	93 fd       	sbrc	r25, 3
     e0e:	85 91       	lpm	r24, Z+
     e10:	93 ff       	sbrs	r25, 3
     e12:	81 91       	ld	r24, Z+
     e14:	6f 01       	movw	r12, r30
     e16:	85 32       	cpi	r24, 0x25	; 37
     e18:	29 f4       	brne	.+10     	; 0xe24 <vfprintf+0x56>
     e1a:	b7 01       	movw	r22, r14
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
     e22:	e7 cf       	rjmp	.-50     	; 0xdf2 <vfprintf+0x24>
     e24:	51 2c       	mov	r5, r1
     e26:	31 2c       	mov	r3, r1
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	20 32       	cpi	r18, 0x20	; 32
     e2c:	a0 f4       	brcc	.+40     	; 0xe56 <vfprintf+0x88>
     e2e:	8b 32       	cpi	r24, 0x2B	; 43
     e30:	69 f0       	breq	.+26     	; 0xe4c <vfprintf+0x7e>
     e32:	30 f4       	brcc	.+12     	; 0xe40 <vfprintf+0x72>
     e34:	80 32       	cpi	r24, 0x20	; 32
     e36:	59 f0       	breq	.+22     	; 0xe4e <vfprintf+0x80>
     e38:	83 32       	cpi	r24, 0x23	; 35
     e3a:	69 f4       	brne	.+26     	; 0xe56 <vfprintf+0x88>
     e3c:	20 61       	ori	r18, 0x10	; 16
     e3e:	2c c0       	rjmp	.+88     	; 0xe98 <vfprintf+0xca>
     e40:	8d 32       	cpi	r24, 0x2D	; 45
     e42:	39 f0       	breq	.+14     	; 0xe52 <vfprintf+0x84>
     e44:	80 33       	cpi	r24, 0x30	; 48
     e46:	39 f4       	brne	.+14     	; 0xe56 <vfprintf+0x88>
     e48:	21 60       	ori	r18, 0x01	; 1
     e4a:	26 c0       	rjmp	.+76     	; 0xe98 <vfprintf+0xca>
     e4c:	22 60       	ori	r18, 0x02	; 2
     e4e:	24 60       	ori	r18, 0x04	; 4
     e50:	23 c0       	rjmp	.+70     	; 0xe98 <vfprintf+0xca>
     e52:	28 60       	ori	r18, 0x08	; 8
     e54:	21 c0       	rjmp	.+66     	; 0xe98 <vfprintf+0xca>
     e56:	27 fd       	sbrc	r18, 7
     e58:	27 c0       	rjmp	.+78     	; 0xea8 <vfprintf+0xda>
     e5a:	30 ed       	ldi	r19, 0xD0	; 208
     e5c:	38 0f       	add	r19, r24
     e5e:	3a 30       	cpi	r19, 0x0A	; 10
     e60:	78 f4       	brcc	.+30     	; 0xe80 <vfprintf+0xb2>
     e62:	26 ff       	sbrs	r18, 6
     e64:	06 c0       	rjmp	.+12     	; 0xe72 <vfprintf+0xa4>
     e66:	fa e0       	ldi	r31, 0x0A	; 10
     e68:	5f 9e       	mul	r5, r31
     e6a:	30 0d       	add	r19, r0
     e6c:	11 24       	eor	r1, r1
     e6e:	53 2e       	mov	r5, r19
     e70:	13 c0       	rjmp	.+38     	; 0xe98 <vfprintf+0xca>
     e72:	8a e0       	ldi	r24, 0x0A	; 10
     e74:	38 9e       	mul	r3, r24
     e76:	30 0d       	add	r19, r0
     e78:	11 24       	eor	r1, r1
     e7a:	33 2e       	mov	r3, r19
     e7c:	20 62       	ori	r18, 0x20	; 32
     e7e:	0c c0       	rjmp	.+24     	; 0xe98 <vfprintf+0xca>
     e80:	8e 32       	cpi	r24, 0x2E	; 46
     e82:	21 f4       	brne	.+8      	; 0xe8c <vfprintf+0xbe>
     e84:	26 fd       	sbrc	r18, 6
     e86:	6b c1       	rjmp	.+726    	; 0x115e <vfprintf+0x390>
     e88:	20 64       	ori	r18, 0x40	; 64
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <vfprintf+0xca>
     e8c:	8c 36       	cpi	r24, 0x6C	; 108
     e8e:	11 f4       	brne	.+4      	; 0xe94 <vfprintf+0xc6>
     e90:	20 68       	ori	r18, 0x80	; 128
     e92:	02 c0       	rjmp	.+4      	; 0xe98 <vfprintf+0xca>
     e94:	88 36       	cpi	r24, 0x68	; 104
     e96:	41 f4       	brne	.+16     	; 0xea8 <vfprintf+0xda>
     e98:	f6 01       	movw	r30, r12
     e9a:	93 fd       	sbrc	r25, 3
     e9c:	85 91       	lpm	r24, Z+
     e9e:	93 ff       	sbrs	r25, 3
     ea0:	81 91       	ld	r24, Z+
     ea2:	6f 01       	movw	r12, r30
     ea4:	81 11       	cpse	r24, r1
     ea6:	c1 cf       	rjmp	.-126    	; 0xe2a <vfprintf+0x5c>
     ea8:	98 2f       	mov	r25, r24
     eaa:	9f 7d       	andi	r25, 0xDF	; 223
     eac:	95 54       	subi	r25, 0x45	; 69
     eae:	93 30       	cpi	r25, 0x03	; 3
     eb0:	28 f4       	brcc	.+10     	; 0xebc <vfprintf+0xee>
     eb2:	0c 5f       	subi	r16, 0xFC	; 252
     eb4:	1f 4f       	sbci	r17, 0xFF	; 255
     eb6:	ff e3       	ldi	r31, 0x3F	; 63
     eb8:	f9 83       	std	Y+1, r31	; 0x01
     eba:	0d c0       	rjmp	.+26     	; 0xed6 <vfprintf+0x108>
     ebc:	83 36       	cpi	r24, 0x63	; 99
     ebe:	31 f0       	breq	.+12     	; 0xecc <vfprintf+0xfe>
     ec0:	83 37       	cpi	r24, 0x73	; 115
     ec2:	71 f0       	breq	.+28     	; 0xee0 <vfprintf+0x112>
     ec4:	83 35       	cpi	r24, 0x53	; 83
     ec6:	09 f0       	breq	.+2      	; 0xeca <vfprintf+0xfc>
     ec8:	5b c0       	rjmp	.+182    	; 0xf80 <vfprintf+0x1b2>
     eca:	22 c0       	rjmp	.+68     	; 0xf10 <vfprintf+0x142>
     ecc:	f8 01       	movw	r30, r16
     ece:	80 81       	ld	r24, Z
     ed0:	89 83       	std	Y+1, r24	; 0x01
     ed2:	0e 5f       	subi	r16, 0xFE	; 254
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	44 24       	eor	r4, r4
     ed8:	43 94       	inc	r4
     eda:	51 2c       	mov	r5, r1
     edc:	54 01       	movw	r10, r8
     ede:	15 c0       	rjmp	.+42     	; 0xf0a <vfprintf+0x13c>
     ee0:	38 01       	movw	r6, r16
     ee2:	f2 e0       	ldi	r31, 0x02	; 2
     ee4:	6f 0e       	add	r6, r31
     ee6:	71 1c       	adc	r7, r1
     ee8:	f8 01       	movw	r30, r16
     eea:	a0 80       	ld	r10, Z
     eec:	b1 80       	ldd	r11, Z+1	; 0x01
     eee:	26 ff       	sbrs	r18, 6
     ef0:	03 c0       	rjmp	.+6      	; 0xef8 <vfprintf+0x12a>
     ef2:	65 2d       	mov	r22, r5
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <vfprintf+0x12e>
     ef8:	6f ef       	ldi	r22, 0xFF	; 255
     efa:	7f ef       	ldi	r23, 0xFF	; 255
     efc:	c5 01       	movw	r24, r10
     efe:	2c 87       	std	Y+12, r18	; 0x0c
     f00:	0e 94 e7 08 	call	0x11ce	; 0x11ce <strnlen>
     f04:	2c 01       	movw	r4, r24
     f06:	83 01       	movw	r16, r6
     f08:	2c 85       	ldd	r18, Y+12	; 0x0c
     f0a:	2f 77       	andi	r18, 0x7F	; 127
     f0c:	22 2e       	mov	r2, r18
     f0e:	17 c0       	rjmp	.+46     	; 0xf3e <vfprintf+0x170>
     f10:	38 01       	movw	r6, r16
     f12:	f2 e0       	ldi	r31, 0x02	; 2
     f14:	6f 0e       	add	r6, r31
     f16:	71 1c       	adc	r7, r1
     f18:	f8 01       	movw	r30, r16
     f1a:	a0 80       	ld	r10, Z
     f1c:	b1 80       	ldd	r11, Z+1	; 0x01
     f1e:	26 ff       	sbrs	r18, 6
     f20:	03 c0       	rjmp	.+6      	; 0xf28 <vfprintf+0x15a>
     f22:	65 2d       	mov	r22, r5
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <vfprintf+0x15e>
     f28:	6f ef       	ldi	r22, 0xFF	; 255
     f2a:	7f ef       	ldi	r23, 0xFF	; 255
     f2c:	c5 01       	movw	r24, r10
     f2e:	2c 87       	std	Y+12, r18	; 0x0c
     f30:	0e 94 d5 08 	call	0x11aa	; 0x11aa <strnlen_P>
     f34:	2c 01       	movw	r4, r24
     f36:	2c 85       	ldd	r18, Y+12	; 0x0c
     f38:	20 68       	ori	r18, 0x80	; 128
     f3a:	22 2e       	mov	r2, r18
     f3c:	83 01       	movw	r16, r6
     f3e:	23 fc       	sbrc	r2, 3
     f40:	1b c0       	rjmp	.+54     	; 0xf78 <vfprintf+0x1aa>
     f42:	83 2d       	mov	r24, r3
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	48 16       	cp	r4, r24
     f48:	59 06       	cpc	r5, r25
     f4a:	b0 f4       	brcc	.+44     	; 0xf78 <vfprintf+0x1aa>
     f4c:	b7 01       	movw	r22, r14
     f4e:	80 e2       	ldi	r24, 0x20	; 32
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
     f56:	3a 94       	dec	r3
     f58:	f4 cf       	rjmp	.-24     	; 0xf42 <vfprintf+0x174>
     f5a:	f5 01       	movw	r30, r10
     f5c:	27 fc       	sbrc	r2, 7
     f5e:	85 91       	lpm	r24, Z+
     f60:	27 fe       	sbrs	r2, 7
     f62:	81 91       	ld	r24, Z+
     f64:	5f 01       	movw	r10, r30
     f66:	b7 01       	movw	r22, r14
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
     f6e:	31 10       	cpse	r3, r1
     f70:	3a 94       	dec	r3
     f72:	f1 e0       	ldi	r31, 0x01	; 1
     f74:	4f 1a       	sub	r4, r31
     f76:	51 08       	sbc	r5, r1
     f78:	41 14       	cp	r4, r1
     f7a:	51 04       	cpc	r5, r1
     f7c:	71 f7       	brne	.-36     	; 0xf5a <vfprintf+0x18c>
     f7e:	e5 c0       	rjmp	.+458    	; 0x114a <vfprintf+0x37c>
     f80:	84 36       	cpi	r24, 0x64	; 100
     f82:	11 f0       	breq	.+4      	; 0xf88 <vfprintf+0x1ba>
     f84:	89 36       	cpi	r24, 0x69	; 105
     f86:	39 f5       	brne	.+78     	; 0xfd6 <vfprintf+0x208>
     f88:	f8 01       	movw	r30, r16
     f8a:	27 ff       	sbrs	r18, 7
     f8c:	07 c0       	rjmp	.+14     	; 0xf9c <vfprintf+0x1ce>
     f8e:	60 81       	ld	r22, Z
     f90:	71 81       	ldd	r23, Z+1	; 0x01
     f92:	82 81       	ldd	r24, Z+2	; 0x02
     f94:	93 81       	ldd	r25, Z+3	; 0x03
     f96:	0c 5f       	subi	r16, 0xFC	; 252
     f98:	1f 4f       	sbci	r17, 0xFF	; 255
     f9a:	08 c0       	rjmp	.+16     	; 0xfac <vfprintf+0x1de>
     f9c:	60 81       	ld	r22, Z
     f9e:	71 81       	ldd	r23, Z+1	; 0x01
     fa0:	88 27       	eor	r24, r24
     fa2:	77 fd       	sbrc	r23, 7
     fa4:	80 95       	com	r24
     fa6:	98 2f       	mov	r25, r24
     fa8:	0e 5f       	subi	r16, 0xFE	; 254
     faa:	1f 4f       	sbci	r17, 0xFF	; 255
     fac:	2f 76       	andi	r18, 0x6F	; 111
     fae:	b2 2e       	mov	r11, r18
     fb0:	97 ff       	sbrs	r25, 7
     fb2:	09 c0       	rjmp	.+18     	; 0xfc6 <vfprintf+0x1f8>
     fb4:	90 95       	com	r25
     fb6:	80 95       	com	r24
     fb8:	70 95       	com	r23
     fba:	61 95       	neg	r22
     fbc:	7f 4f       	sbci	r23, 0xFF	; 255
     fbe:	8f 4f       	sbci	r24, 0xFF	; 255
     fc0:	9f 4f       	sbci	r25, 0xFF	; 255
     fc2:	20 68       	ori	r18, 0x80	; 128
     fc4:	b2 2e       	mov	r11, r18
     fc6:	2a e0       	ldi	r18, 0x0A	; 10
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	a4 01       	movw	r20, r8
     fcc:	0e 94 24 09 	call	0x1248	; 0x1248 <__ultoa_invert>
     fd0:	a8 2e       	mov	r10, r24
     fd2:	a8 18       	sub	r10, r8
     fd4:	44 c0       	rjmp	.+136    	; 0x105e <vfprintf+0x290>
     fd6:	85 37       	cpi	r24, 0x75	; 117
     fd8:	29 f4       	brne	.+10     	; 0xfe4 <vfprintf+0x216>
     fda:	2f 7e       	andi	r18, 0xEF	; 239
     fdc:	b2 2e       	mov	r11, r18
     fde:	2a e0       	ldi	r18, 0x0A	; 10
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	25 c0       	rjmp	.+74     	; 0x102e <vfprintf+0x260>
     fe4:	f2 2f       	mov	r31, r18
     fe6:	f9 7f       	andi	r31, 0xF9	; 249
     fe8:	bf 2e       	mov	r11, r31
     fea:	8f 36       	cpi	r24, 0x6F	; 111
     fec:	c1 f0       	breq	.+48     	; 0x101e <vfprintf+0x250>
     fee:	18 f4       	brcc	.+6      	; 0xff6 <vfprintf+0x228>
     ff0:	88 35       	cpi	r24, 0x58	; 88
     ff2:	79 f0       	breq	.+30     	; 0x1012 <vfprintf+0x244>
     ff4:	b4 c0       	rjmp	.+360    	; 0x115e <vfprintf+0x390>
     ff6:	80 37       	cpi	r24, 0x70	; 112
     ff8:	19 f0       	breq	.+6      	; 0x1000 <vfprintf+0x232>
     ffa:	88 37       	cpi	r24, 0x78	; 120
     ffc:	21 f0       	breq	.+8      	; 0x1006 <vfprintf+0x238>
     ffe:	af c0       	rjmp	.+350    	; 0x115e <vfprintf+0x390>
    1000:	2f 2f       	mov	r18, r31
    1002:	20 61       	ori	r18, 0x10	; 16
    1004:	b2 2e       	mov	r11, r18
    1006:	b4 fe       	sbrs	r11, 4
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <vfprintf+0x256>
    100a:	8b 2d       	mov	r24, r11
    100c:	84 60       	ori	r24, 0x04	; 4
    100e:	b8 2e       	mov	r11, r24
    1010:	09 c0       	rjmp	.+18     	; 0x1024 <vfprintf+0x256>
    1012:	24 ff       	sbrs	r18, 4
    1014:	0a c0       	rjmp	.+20     	; 0x102a <vfprintf+0x25c>
    1016:	9f 2f       	mov	r25, r31
    1018:	96 60       	ori	r25, 0x06	; 6
    101a:	b9 2e       	mov	r11, r25
    101c:	06 c0       	rjmp	.+12     	; 0x102a <vfprintf+0x25c>
    101e:	28 e0       	ldi	r18, 0x08	; 8
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	05 c0       	rjmp	.+10     	; 0x102e <vfprintf+0x260>
    1024:	20 e1       	ldi	r18, 0x10	; 16
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	02 c0       	rjmp	.+4      	; 0x102e <vfprintf+0x260>
    102a:	20 e1       	ldi	r18, 0x10	; 16
    102c:	32 e0       	ldi	r19, 0x02	; 2
    102e:	f8 01       	movw	r30, r16
    1030:	b7 fe       	sbrs	r11, 7
    1032:	07 c0       	rjmp	.+14     	; 0x1042 <vfprintf+0x274>
    1034:	60 81       	ld	r22, Z
    1036:	71 81       	ldd	r23, Z+1	; 0x01
    1038:	82 81       	ldd	r24, Z+2	; 0x02
    103a:	93 81       	ldd	r25, Z+3	; 0x03
    103c:	0c 5f       	subi	r16, 0xFC	; 252
    103e:	1f 4f       	sbci	r17, 0xFF	; 255
    1040:	06 c0       	rjmp	.+12     	; 0x104e <vfprintf+0x280>
    1042:	60 81       	ld	r22, Z
    1044:	71 81       	ldd	r23, Z+1	; 0x01
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 5f       	subi	r16, 0xFE	; 254
    104c:	1f 4f       	sbci	r17, 0xFF	; 255
    104e:	a4 01       	movw	r20, r8
    1050:	0e 94 24 09 	call	0x1248	; 0x1248 <__ultoa_invert>
    1054:	a8 2e       	mov	r10, r24
    1056:	a8 18       	sub	r10, r8
    1058:	fb 2d       	mov	r31, r11
    105a:	ff 77       	andi	r31, 0x7F	; 127
    105c:	bf 2e       	mov	r11, r31
    105e:	b6 fe       	sbrs	r11, 6
    1060:	0b c0       	rjmp	.+22     	; 0x1078 <vfprintf+0x2aa>
    1062:	2b 2d       	mov	r18, r11
    1064:	2e 7f       	andi	r18, 0xFE	; 254
    1066:	a5 14       	cp	r10, r5
    1068:	50 f4       	brcc	.+20     	; 0x107e <vfprintf+0x2b0>
    106a:	b4 fe       	sbrs	r11, 4
    106c:	0a c0       	rjmp	.+20     	; 0x1082 <vfprintf+0x2b4>
    106e:	b2 fc       	sbrc	r11, 2
    1070:	08 c0       	rjmp	.+16     	; 0x1082 <vfprintf+0x2b4>
    1072:	2b 2d       	mov	r18, r11
    1074:	2e 7e       	andi	r18, 0xEE	; 238
    1076:	05 c0       	rjmp	.+10     	; 0x1082 <vfprintf+0x2b4>
    1078:	7a 2c       	mov	r7, r10
    107a:	2b 2d       	mov	r18, r11
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <vfprintf+0x2b6>
    107e:	7a 2c       	mov	r7, r10
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <vfprintf+0x2b6>
    1082:	75 2c       	mov	r7, r5
    1084:	24 ff       	sbrs	r18, 4
    1086:	0d c0       	rjmp	.+26     	; 0x10a2 <vfprintf+0x2d4>
    1088:	fe 01       	movw	r30, r28
    108a:	ea 0d       	add	r30, r10
    108c:	f1 1d       	adc	r31, r1
    108e:	80 81       	ld	r24, Z
    1090:	80 33       	cpi	r24, 0x30	; 48
    1092:	11 f4       	brne	.+4      	; 0x1098 <vfprintf+0x2ca>
    1094:	29 7e       	andi	r18, 0xE9	; 233
    1096:	09 c0       	rjmp	.+18     	; 0x10aa <vfprintf+0x2dc>
    1098:	22 ff       	sbrs	r18, 2
    109a:	06 c0       	rjmp	.+12     	; 0x10a8 <vfprintf+0x2da>
    109c:	73 94       	inc	r7
    109e:	73 94       	inc	r7
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <vfprintf+0x2dc>
    10a2:	82 2f       	mov	r24, r18
    10a4:	86 78       	andi	r24, 0x86	; 134
    10a6:	09 f0       	breq	.+2      	; 0x10aa <vfprintf+0x2dc>
    10a8:	73 94       	inc	r7
    10aa:	23 fd       	sbrc	r18, 3
    10ac:	13 c0       	rjmp	.+38     	; 0x10d4 <vfprintf+0x306>
    10ae:	20 ff       	sbrs	r18, 0
    10b0:	06 c0       	rjmp	.+12     	; 0x10be <vfprintf+0x2f0>
    10b2:	5a 2c       	mov	r5, r10
    10b4:	73 14       	cp	r7, r3
    10b6:	18 f4       	brcc	.+6      	; 0x10be <vfprintf+0x2f0>
    10b8:	53 0c       	add	r5, r3
    10ba:	57 18       	sub	r5, r7
    10bc:	73 2c       	mov	r7, r3
    10be:	73 14       	cp	r7, r3
    10c0:	68 f4       	brcc	.+26     	; 0x10dc <vfprintf+0x30e>
    10c2:	b7 01       	movw	r22, r14
    10c4:	80 e2       	ldi	r24, 0x20	; 32
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	2c 87       	std	Y+12, r18	; 0x0c
    10ca:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    10ce:	73 94       	inc	r7
    10d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    10d2:	f5 cf       	rjmp	.-22     	; 0x10be <vfprintf+0x2f0>
    10d4:	73 14       	cp	r7, r3
    10d6:	10 f4       	brcc	.+4      	; 0x10dc <vfprintf+0x30e>
    10d8:	37 18       	sub	r3, r7
    10da:	01 c0       	rjmp	.+2      	; 0x10de <vfprintf+0x310>
    10dc:	31 2c       	mov	r3, r1
    10de:	24 ff       	sbrs	r18, 4
    10e0:	12 c0       	rjmp	.+36     	; 0x1106 <vfprintf+0x338>
    10e2:	b7 01       	movw	r22, r14
    10e4:	80 e3       	ldi	r24, 0x30	; 48
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	2c 87       	std	Y+12, r18	; 0x0c
    10ea:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    10ee:	2c 85       	ldd	r18, Y+12	; 0x0c
    10f0:	22 ff       	sbrs	r18, 2
    10f2:	17 c0       	rjmp	.+46     	; 0x1122 <vfprintf+0x354>
    10f4:	21 ff       	sbrs	r18, 1
    10f6:	03 c0       	rjmp	.+6      	; 0x10fe <vfprintf+0x330>
    10f8:	88 e5       	ldi	r24, 0x58	; 88
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <vfprintf+0x334>
    10fe:	88 e7       	ldi	r24, 0x78	; 120
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	b7 01       	movw	r22, r14
    1104:	0c c0       	rjmp	.+24     	; 0x111e <vfprintf+0x350>
    1106:	82 2f       	mov	r24, r18
    1108:	86 78       	andi	r24, 0x86	; 134
    110a:	59 f0       	breq	.+22     	; 0x1122 <vfprintf+0x354>
    110c:	21 fd       	sbrc	r18, 1
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <vfprintf+0x346>
    1110:	80 e2       	ldi	r24, 0x20	; 32
    1112:	01 c0       	rjmp	.+2      	; 0x1116 <vfprintf+0x348>
    1114:	8b e2       	ldi	r24, 0x2B	; 43
    1116:	27 fd       	sbrc	r18, 7
    1118:	8d e2       	ldi	r24, 0x2D	; 45
    111a:	b7 01       	movw	r22, r14
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    1122:	a5 14       	cp	r10, r5
    1124:	38 f4       	brcc	.+14     	; 0x1134 <vfprintf+0x366>
    1126:	b7 01       	movw	r22, r14
    1128:	80 e3       	ldi	r24, 0x30	; 48
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    1130:	5a 94       	dec	r5
    1132:	f7 cf       	rjmp	.-18     	; 0x1122 <vfprintf+0x354>
    1134:	aa 94       	dec	r10
    1136:	f4 01       	movw	r30, r8
    1138:	ea 0d       	add	r30, r10
    113a:	f1 1d       	adc	r31, r1
    113c:	80 81       	ld	r24, Z
    113e:	b7 01       	movw	r22, r14
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    1146:	a1 10       	cpse	r10, r1
    1148:	f5 cf       	rjmp	.-22     	; 0x1134 <vfprintf+0x366>
    114a:	33 20       	and	r3, r3
    114c:	09 f4       	brne	.+2      	; 0x1150 <vfprintf+0x382>
    114e:	51 ce       	rjmp	.-862    	; 0xdf2 <vfprintf+0x24>
    1150:	b7 01       	movw	r22, r14
    1152:	80 e2       	ldi	r24, 0x20	; 32
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <fputc>
    115a:	3a 94       	dec	r3
    115c:	f6 cf       	rjmp	.-20     	; 0x114a <vfprintf+0x37c>
    115e:	f7 01       	movw	r30, r14
    1160:	86 81       	ldd	r24, Z+6	; 0x06
    1162:	97 81       	ldd	r25, Z+7	; 0x07
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfprintf+0x39c>
    1166:	8f ef       	ldi	r24, 0xFF	; 255
    1168:	9f ef       	ldi	r25, 0xFF	; 255
    116a:	2c 96       	adiw	r28, 0x0c	; 12
    116c:	e2 e1       	ldi	r30, 0x12	; 18
    116e:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__epilogue_restores__>

00001172 <calloc>:
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	86 9f       	mul	r24, r22
    117c:	80 01       	movw	r16, r0
    117e:	87 9f       	mul	r24, r23
    1180:	10 0d       	add	r17, r0
    1182:	96 9f       	mul	r25, r22
    1184:	10 0d       	add	r17, r0
    1186:	11 24       	eor	r1, r1
    1188:	c8 01       	movw	r24, r16
    118a:	0e 94 61 05 	call	0xac2	; 0xac2 <malloc>
    118e:	ec 01       	movw	r28, r24
    1190:	00 97       	sbiw	r24, 0x00	; 0
    1192:	29 f0       	breq	.+10     	; 0x119e <calloc+0x2c>
    1194:	a8 01       	movw	r20, r16
    1196:	60 e0       	ldi	r22, 0x00	; 0
    1198:	70 e0       	ldi	r23, 0x00	; 0
    119a:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <memset>
    119e:	ce 01       	movw	r24, r28
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	1f 91       	pop	r17
    11a6:	0f 91       	pop	r16
    11a8:	08 95       	ret

000011aa <strnlen_P>:
    11aa:	fc 01       	movw	r30, r24
    11ac:	05 90       	lpm	r0, Z+
    11ae:	61 50       	subi	r22, 0x01	; 1
    11b0:	70 40       	sbci	r23, 0x00	; 0
    11b2:	01 10       	cpse	r0, r1
    11b4:	d8 f7       	brcc	.-10     	; 0x11ac <strnlen_P+0x2>
    11b6:	80 95       	com	r24
    11b8:	90 95       	com	r25
    11ba:	8e 0f       	add	r24, r30
    11bc:	9f 1f       	adc	r25, r31
    11be:	08 95       	ret

000011c0 <memset>:
    11c0:	dc 01       	movw	r26, r24
    11c2:	01 c0       	rjmp	.+2      	; 0x11c6 <memset+0x6>
    11c4:	6d 93       	st	X+, r22
    11c6:	41 50       	subi	r20, 0x01	; 1
    11c8:	50 40       	sbci	r21, 0x00	; 0
    11ca:	e0 f7       	brcc	.-8      	; 0x11c4 <memset+0x4>
    11cc:	08 95       	ret

000011ce <strnlen>:
    11ce:	fc 01       	movw	r30, r24
    11d0:	61 50       	subi	r22, 0x01	; 1
    11d2:	70 40       	sbci	r23, 0x00	; 0
    11d4:	01 90       	ld	r0, Z+
    11d6:	01 10       	cpse	r0, r1
    11d8:	d8 f7       	brcc	.-10     	; 0x11d0 <strnlen+0x2>
    11da:	80 95       	com	r24
    11dc:	90 95       	com	r25
    11de:	8e 0f       	add	r24, r30
    11e0:	9f 1f       	adc	r25, r31
    11e2:	08 95       	ret

000011e4 <fputc>:
    11e4:	0f 93       	push	r16
    11e6:	1f 93       	push	r17
    11e8:	cf 93       	push	r28
    11ea:	df 93       	push	r29
    11ec:	18 2f       	mov	r17, r24
    11ee:	09 2f       	mov	r16, r25
    11f0:	eb 01       	movw	r28, r22
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	81 fd       	sbrc	r24, 1
    11f6:	03 c0       	rjmp	.+6      	; 0x11fe <fputc+0x1a>
    11f8:	8f ef       	ldi	r24, 0xFF	; 255
    11fa:	9f ef       	ldi	r25, 0xFF	; 255
    11fc:	20 c0       	rjmp	.+64     	; 0x123e <fputc+0x5a>
    11fe:	82 ff       	sbrs	r24, 2
    1200:	10 c0       	rjmp	.+32     	; 0x1222 <fputc+0x3e>
    1202:	4e 81       	ldd	r20, Y+6	; 0x06
    1204:	5f 81       	ldd	r21, Y+7	; 0x07
    1206:	2c 81       	ldd	r18, Y+4	; 0x04
    1208:	3d 81       	ldd	r19, Y+5	; 0x05
    120a:	42 17       	cp	r20, r18
    120c:	53 07       	cpc	r21, r19
    120e:	7c f4       	brge	.+30     	; 0x122e <fputc+0x4a>
    1210:	e8 81       	ld	r30, Y
    1212:	f9 81       	ldd	r31, Y+1	; 0x01
    1214:	9f 01       	movw	r18, r30
    1216:	2f 5f       	subi	r18, 0xFF	; 255
    1218:	3f 4f       	sbci	r19, 0xFF	; 255
    121a:	39 83       	std	Y+1, r19	; 0x01
    121c:	28 83       	st	Y, r18
    121e:	10 83       	st	Z, r17
    1220:	06 c0       	rjmp	.+12     	; 0x122e <fputc+0x4a>
    1222:	e8 85       	ldd	r30, Y+8	; 0x08
    1224:	f9 85       	ldd	r31, Y+9	; 0x09
    1226:	81 2f       	mov	r24, r17
    1228:	09 95       	icall
    122a:	89 2b       	or	r24, r25
    122c:	29 f7       	brne	.-54     	; 0x11f8 <fputc+0x14>
    122e:	2e 81       	ldd	r18, Y+6	; 0x06
    1230:	3f 81       	ldd	r19, Y+7	; 0x07
    1232:	2f 5f       	subi	r18, 0xFF	; 255
    1234:	3f 4f       	sbci	r19, 0xFF	; 255
    1236:	3f 83       	std	Y+7, r19	; 0x07
    1238:	2e 83       	std	Y+6, r18	; 0x06
    123a:	81 2f       	mov	r24, r17
    123c:	90 2f       	mov	r25, r16
    123e:	df 91       	pop	r29
    1240:	cf 91       	pop	r28
    1242:	1f 91       	pop	r17
    1244:	0f 91       	pop	r16
    1246:	08 95       	ret

00001248 <__ultoa_invert>:
    1248:	fa 01       	movw	r30, r20
    124a:	aa 27       	eor	r26, r26
    124c:	28 30       	cpi	r18, 0x08	; 8
    124e:	51 f1       	breq	.+84     	; 0x12a4 <__ultoa_invert+0x5c>
    1250:	20 31       	cpi	r18, 0x10	; 16
    1252:	81 f1       	breq	.+96     	; 0x12b4 <__ultoa_invert+0x6c>
    1254:	e8 94       	clt
    1256:	6f 93       	push	r22
    1258:	6e 7f       	andi	r22, 0xFE	; 254
    125a:	6e 5f       	subi	r22, 0xFE	; 254
    125c:	7f 4f       	sbci	r23, 0xFF	; 255
    125e:	8f 4f       	sbci	r24, 0xFF	; 255
    1260:	9f 4f       	sbci	r25, 0xFF	; 255
    1262:	af 4f       	sbci	r26, 0xFF	; 255
    1264:	b1 e0       	ldi	r27, 0x01	; 1
    1266:	3e d0       	rcall	.+124    	; 0x12e4 <__ultoa_invert+0x9c>
    1268:	b4 e0       	ldi	r27, 0x04	; 4
    126a:	3c d0       	rcall	.+120    	; 0x12e4 <__ultoa_invert+0x9c>
    126c:	67 0f       	add	r22, r23
    126e:	78 1f       	adc	r23, r24
    1270:	89 1f       	adc	r24, r25
    1272:	9a 1f       	adc	r25, r26
    1274:	a1 1d       	adc	r26, r1
    1276:	68 0f       	add	r22, r24
    1278:	79 1f       	adc	r23, r25
    127a:	8a 1f       	adc	r24, r26
    127c:	91 1d       	adc	r25, r1
    127e:	a1 1d       	adc	r26, r1
    1280:	6a 0f       	add	r22, r26
    1282:	71 1d       	adc	r23, r1
    1284:	81 1d       	adc	r24, r1
    1286:	91 1d       	adc	r25, r1
    1288:	a1 1d       	adc	r26, r1
    128a:	20 d0       	rcall	.+64     	; 0x12cc <__ultoa_invert+0x84>
    128c:	09 f4       	brne	.+2      	; 0x1290 <__ultoa_invert+0x48>
    128e:	68 94       	set
    1290:	3f 91       	pop	r19
    1292:	2a e0       	ldi	r18, 0x0A	; 10
    1294:	26 9f       	mul	r18, r22
    1296:	11 24       	eor	r1, r1
    1298:	30 19       	sub	r19, r0
    129a:	30 5d       	subi	r19, 0xD0	; 208
    129c:	31 93       	st	Z+, r19
    129e:	de f6       	brtc	.-74     	; 0x1256 <__ultoa_invert+0xe>
    12a0:	cf 01       	movw	r24, r30
    12a2:	08 95       	ret
    12a4:	46 2f       	mov	r20, r22
    12a6:	47 70       	andi	r20, 0x07	; 7
    12a8:	40 5d       	subi	r20, 0xD0	; 208
    12aa:	41 93       	st	Z+, r20
    12ac:	b3 e0       	ldi	r27, 0x03	; 3
    12ae:	0f d0       	rcall	.+30     	; 0x12ce <__ultoa_invert+0x86>
    12b0:	c9 f7       	brne	.-14     	; 0x12a4 <__ultoa_invert+0x5c>
    12b2:	f6 cf       	rjmp	.-20     	; 0x12a0 <__ultoa_invert+0x58>
    12b4:	46 2f       	mov	r20, r22
    12b6:	4f 70       	andi	r20, 0x0F	; 15
    12b8:	40 5d       	subi	r20, 0xD0	; 208
    12ba:	4a 33       	cpi	r20, 0x3A	; 58
    12bc:	18 f0       	brcs	.+6      	; 0x12c4 <__ultoa_invert+0x7c>
    12be:	49 5d       	subi	r20, 0xD9	; 217
    12c0:	31 fd       	sbrc	r19, 1
    12c2:	40 52       	subi	r20, 0x20	; 32
    12c4:	41 93       	st	Z+, r20
    12c6:	02 d0       	rcall	.+4      	; 0x12cc <__ultoa_invert+0x84>
    12c8:	a9 f7       	brne	.-22     	; 0x12b4 <__ultoa_invert+0x6c>
    12ca:	ea cf       	rjmp	.-44     	; 0x12a0 <__ultoa_invert+0x58>
    12cc:	b4 e0       	ldi	r27, 0x04	; 4
    12ce:	a6 95       	lsr	r26
    12d0:	97 95       	ror	r25
    12d2:	87 95       	ror	r24
    12d4:	77 95       	ror	r23
    12d6:	67 95       	ror	r22
    12d8:	ba 95       	dec	r27
    12da:	c9 f7       	brne	.-14     	; 0x12ce <__ultoa_invert+0x86>
    12dc:	00 97       	sbiw	r24, 0x00	; 0
    12de:	61 05       	cpc	r22, r1
    12e0:	71 05       	cpc	r23, r1
    12e2:	08 95       	ret
    12e4:	9b 01       	movw	r18, r22
    12e6:	ac 01       	movw	r20, r24
    12e8:	0a 2e       	mov	r0, r26
    12ea:	06 94       	lsr	r0
    12ec:	57 95       	ror	r21
    12ee:	47 95       	ror	r20
    12f0:	37 95       	ror	r19
    12f2:	27 95       	ror	r18
    12f4:	ba 95       	dec	r27
    12f6:	c9 f7       	brne	.-14     	; 0x12ea <__ultoa_invert+0xa2>
    12f8:	62 0f       	add	r22, r18
    12fa:	73 1f       	adc	r23, r19
    12fc:	84 1f       	adc	r24, r20
    12fe:	95 1f       	adc	r25, r21
    1300:	a0 1d       	adc	r26, r0
    1302:	08 95       	ret

00001304 <__prologue_saves__>:
    1304:	2f 92       	push	r2
    1306:	3f 92       	push	r3
    1308:	4f 92       	push	r4
    130a:	5f 92       	push	r5
    130c:	6f 92       	push	r6
    130e:	7f 92       	push	r7
    1310:	8f 92       	push	r8
    1312:	9f 92       	push	r9
    1314:	af 92       	push	r10
    1316:	bf 92       	push	r11
    1318:	cf 92       	push	r12
    131a:	df 92       	push	r13
    131c:	ef 92       	push	r14
    131e:	ff 92       	push	r15
    1320:	0f 93       	push	r16
    1322:	1f 93       	push	r17
    1324:	cf 93       	push	r28
    1326:	df 93       	push	r29
    1328:	cd b7       	in	r28, 0x3d	; 61
    132a:	de b7       	in	r29, 0x3e	; 62
    132c:	ca 1b       	sub	r28, r26
    132e:	db 0b       	sbc	r29, r27
    1330:	0f b6       	in	r0, 0x3f	; 63
    1332:	f8 94       	cli
    1334:	de bf       	out	0x3e, r29	; 62
    1336:	0f be       	out	0x3f, r0	; 63
    1338:	cd bf       	out	0x3d, r28	; 61
    133a:	09 94       	ijmp

0000133c <__epilogue_restores__>:
    133c:	2a 88       	ldd	r2, Y+18	; 0x12
    133e:	39 88       	ldd	r3, Y+17	; 0x11
    1340:	48 88       	ldd	r4, Y+16	; 0x10
    1342:	5f 84       	ldd	r5, Y+15	; 0x0f
    1344:	6e 84       	ldd	r6, Y+14	; 0x0e
    1346:	7d 84       	ldd	r7, Y+13	; 0x0d
    1348:	8c 84       	ldd	r8, Y+12	; 0x0c
    134a:	9b 84       	ldd	r9, Y+11	; 0x0b
    134c:	aa 84       	ldd	r10, Y+10	; 0x0a
    134e:	b9 84       	ldd	r11, Y+9	; 0x09
    1350:	c8 84       	ldd	r12, Y+8	; 0x08
    1352:	df 80       	ldd	r13, Y+7	; 0x07
    1354:	ee 80       	ldd	r14, Y+6	; 0x06
    1356:	fd 80       	ldd	r15, Y+5	; 0x05
    1358:	0c 81       	ldd	r16, Y+4	; 0x04
    135a:	1b 81       	ldd	r17, Y+3	; 0x03
    135c:	aa 81       	ldd	r26, Y+2	; 0x02
    135e:	b9 81       	ldd	r27, Y+1	; 0x01
    1360:	ce 0f       	add	r28, r30
    1362:	d1 1d       	adc	r29, r1
    1364:	0f b6       	in	r0, 0x3f	; 63
    1366:	f8 94       	cli
    1368:	de bf       	out	0x3e, r29	; 62
    136a:	0f be       	out	0x3f, r0	; 63
    136c:	cd bf       	out	0x3d, r28	; 61
    136e:	ed 01       	movw	r28, r26
    1370:	08 95       	ret

00001372 <_exit>:
    1372:	f8 94       	cli

00001374 <__stop_program>:
    1374:	ff cf       	rjmp	.-2      	; 0x1374 <__stop_program>

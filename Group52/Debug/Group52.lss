
Group52.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000ab8  00000b4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ab8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010a  0080010a  00000b56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b56  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000742  00000000  00000000  00000c42  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000466  00000000  00000000  00001384  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000408  00000000  00000000  000017ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001bf4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ac  00000000  00000000  00001d54  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000305  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00002305  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 eb       	ldi	r30, 0xB8	; 184
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 30       	cpi	r26, 0x0A	; 10
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e0       	ldi	r26, 0x0A	; 10
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a4 31       	cpi	r26, 0x14	; 20
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
  a6:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <joystick_Get_Position>:
#include "joystick.h"
#include <avr/io.h>
#include <util/delay.h>

position joystick_Get_Position(void)
{
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
	volatile char *adc = (char *) 0x1500;
	/* Select CH1 */
	adc[0] = 0b00000100;
  b4:	84 e0       	ldi	r24, 0x04	; 4
  b6:	80 93 00 15 	sts	0x1500, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	87 e1       	ldi	r24, 0x17	; 23
  bc:	8a 95       	dec	r24
  be:	f1 f7       	brne	.-4      	; 0xbc <joystick_Get_Position+0xe>
  c0:	00 00       	nop
	_delay_us(70);
	uint8_t xValue = adc[0];
  c2:	e0 e0       	ldi	r30, 0x00	; 0
  c4:	f5 e1       	ldi	r31, 0x15	; 21
  c6:	20 81       	ld	r18, Z
	
	/* Select CH2 */
	adc[0] = 0b00000101;
  c8:	85 e0       	ldi	r24, 0x05	; 5
  ca:	80 83       	st	Z, r24
  cc:	87 e1       	ldi	r24, 0x17	; 23
  ce:	8a 95       	dec	r24
  d0:	f1 f7       	brne	.-4      	; 0xce <joystick_Get_Position+0x20>
  d2:	00 00       	nop
	_delay_us(70);
	uint8_t yValue = adc[0];
  d4:	10 91 00 15 	lds	r17, 0x1500
	
	int8_t xPosition;
	int8_t yPosition;
	int8_t foo;
	
	if (xValue < 128) {
  d8:	22 23       	and	r18, r18
  da:	04 f1       	brlt	.+64     	; 0x11c <joystick_Get_Position+0x6e>
		foo = 128 - xValue;
		printf("%i\n", xValue);
  dc:	c2 2f       	mov	r28, r18
  de:	d0 e0       	ldi	r29, 0x00	; 0
  e0:	1f 92       	push	r1
  e2:	2f 93       	push	r18
  e4:	86 e0       	ldi	r24, 0x06	; 6
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	9f 93       	push	r25
  ea:	8f 93       	push	r24
  ec:	0e 94 4d 01 	call	0x29a	; 0x29a <printf>
		xPosition = (128 - xValue) / 128 * 100;
  f0:	20 e8       	ldi	r18, 0x80	; 128
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	2c 1b       	sub	r18, r28
  f6:	3d 0b       	sbc	r19, r29
  f8:	c9 01       	movw	r24, r18
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	99 23       	and	r25, r25
 104:	14 f4       	brge	.+4      	; 0x10a <joystick_Get_Position+0x5c>
 106:	81 58       	subi	r24, 0x81	; 129
 108:	9f 4f       	sbci	r25, 0xFF	; 255
 10a:	88 0f       	add	r24, r24
 10c:	89 2f       	mov	r24, r25
 10e:	88 1f       	adc	r24, r24
 110:	99 0b       	sbc	r25, r25
 112:	94 e6       	ldi	r25, 0x64	; 100
 114:	89 9f       	mul	r24, r25
 116:	80 2d       	mov	r24, r0
 118:	11 24       	eor	r1, r1
 11a:	10 c0       	rjmp	.+32     	; 0x13c <joystick_Get_Position+0x8e>
		
	} else if (xValue >= 128) {
		xPosition = (xValue - 128) / 128 * 100;
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	20 58       	subi	r18, 0x80	; 128
 120:	31 09       	sbc	r19, r1
 122:	c9 01       	movw	r24, r18
 124:	99 23       	and	r25, r25
 126:	14 f4       	brge	.+4      	; 0x12c <joystick_Get_Position+0x7e>
 128:	81 58       	subi	r24, 0x81	; 129
 12a:	9f 4f       	sbci	r25, 0xFF	; 255
 12c:	88 0f       	add	r24, r24
 12e:	89 2f       	mov	r24, r25
 130:	88 1f       	adc	r24, r24
 132:	99 0b       	sbc	r25, r25
 134:	94 e6       	ldi	r25, 0x64	; 100
 136:	89 9f       	mul	r24, r25
 138:	80 2d       	mov	r24, r0
 13a:	11 24       	eor	r1, r1
	}
	
	if (yValue < 128) {
 13c:	11 23       	and	r17, r17
 13e:	8c f0       	brlt	.+34     	; 0x162 <joystick_Get_Position+0xb4>
		yPosition = (128 - yValue) / 128 * 100;
 140:	40 e8       	ldi	r20, 0x80	; 128
 142:	50 e0       	ldi	r21, 0x00	; 0
 144:	41 1b       	sub	r20, r17
 146:	51 09       	sbc	r21, r1
 148:	9a 01       	movw	r18, r20
 14a:	12 f4       	brpl	.+4      	; 0x150 <joystick_Get_Position+0xa2>
 14c:	21 58       	subi	r18, 0x81	; 129
 14e:	3f 4f       	sbci	r19, 0xFF	; 255
 150:	22 0f       	add	r18, r18
 152:	23 2f       	mov	r18, r19
 154:	22 1f       	adc	r18, r18
 156:	33 0b       	sbc	r19, r19
 158:	94 e6       	ldi	r25, 0x64	; 100
 15a:	29 9f       	mul	r18, r25
 15c:	90 2d       	mov	r25, r0
 15e:	11 24       	eor	r1, r1
 160:	11 c0       	rjmp	.+34     	; 0x184 <joystick_Get_Position+0xd6>
	} else if (yValue >= 128) {
		yPosition = (yValue - 128) / 128 * 100;
 162:	41 2f       	mov	r20, r17
 164:	50 e0       	ldi	r21, 0x00	; 0
 166:	40 58       	subi	r20, 0x80	; 128
 168:	51 09       	sbc	r21, r1
 16a:	9a 01       	movw	r18, r20
 16c:	55 23       	and	r21, r21
 16e:	14 f4       	brge	.+4      	; 0x174 <joystick_Get_Position+0xc6>
 170:	21 58       	subi	r18, 0x81	; 129
 172:	3f 4f       	sbci	r19, 0xFF	; 255
 174:	22 0f       	add	r18, r18
 176:	23 2f       	mov	r18, r19
 178:	22 1f       	adc	r18, r18
 17a:	33 0b       	sbc	r19, r19
 17c:	94 e6       	ldi	r25, 0x64	; 100
 17e:	29 9f       	mul	r18, r25
 180:	90 2d       	mov	r25, r0
 182:	11 24       	eor	r1, r1
	
	position pos;
	pos.stick_positions[0] = xPosition;
	pos.stick_positions[1] = yPosition;
	return pos;
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	1f 91       	pop	r17
 18a:	08 95       	ret

0000018c <main>:
void SRAM_test2(void);

int main(void)
{
	/*Exercise 1*/
	fdevopen(usart_Transmit, usart_Receive);
 18c:	6e ef       	ldi	r22, 0xFE	; 254
 18e:	70 e0       	ldi	r23, 0x00	; 0
 190:	8a ef       	ldi	r24, 0xFA	; 250
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 02 01 	call	0x204	; 0x204 <fdevopen>
	usart_Init(MYUBBR);
 198:	8f e1       	ldi	r24, 0x1F	; 31
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <usart_Init>
	
	/*Exercise 2*/
	MCUCR |= (1 << SRE);
 1a0:	85 b7       	in	r24, 0x35	; 53
 1a2:	80 68       	ori	r24, 0x80	; 128
 1a4:	85 bf       	out	0x35, r24	; 53
	printf("test");
	volatile char *adc = (char *) 0x1500;
	uint8_t retrieved;
	*/
	
	position foo = joystick_Get_Position();
 1a6:	0e 94 57 00 	call	0xae	; 0xae <joystick_Get_Position>
	int8_t xValue = foo.stick_positions[0];
	
	
	while(1)
	{
		foo = joystick_Get_Position();
 1aa:	0e 94 57 00 	call	0xae	; 0xae <joystick_Get_Position>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	8f e7       	ldi	r24, 0x7F	; 127
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x28>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x32>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x34>
 1c0:	2f ef       	ldi	r18, 0xFF	; 255
 1c2:	8f e7       	ldi	r24, 0x7F	; 127
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x3a>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x44>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0x46>
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	8f e7       	ldi	r24, 0x7F	; 127
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	21 50       	subi	r18, 0x01	; 1
 1da:	80 40       	sbci	r24, 0x00	; 0
 1dc:	90 40       	sbci	r25, 0x00	; 0
 1de:	e1 f7       	brne	.-8      	; 0x1d8 <main+0x4c>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <main+0x56>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x58>
 1e4:	e2 cf       	rjmp	.-60     	; 0x1aa <main+0x1e>

000001e6 <usart_Init>:
#include <avr/io.h>

void usart_Init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
 1e6:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 1e8:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
 1ea:	88 e1       	ldi	r24, 0x18	; 24
 1ec:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ10);
 1ee:	8e e8       	ldi	r24, 0x8E	; 142
 1f0:	80 bd       	out	0x20, r24	; 32
 1f2:	08 95       	ret

000001f4 <usart_Transmit>:
}

void usart_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
 1f4:	5d 9b       	sbis	0x0b, 5	; 11
 1f6:	fe cf       	rjmp	.-4      	; 0x1f4 <usart_Transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
 1f8:	8c b9       	out	0x0c, r24	; 12
 1fa:	08 95       	ret

000001fc <usart_Receive>:
}

unsigned char usart_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
 1fc:	5f 9b       	sbis	0x0b, 7	; 11
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <usart_Receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
 200:	8c b1       	in	r24, 0x0c	; 12
}
 202:	08 95       	ret

00000204 <fdevopen>:
 204:	0f 93       	push	r16
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	ec 01       	movw	r28, r24
 20e:	8b 01       	movw	r16, r22
 210:	00 97       	sbiw	r24, 0x00	; 0
 212:	31 f4       	brne	.+12     	; 0x220 <fdevopen+0x1c>
 214:	61 15       	cp	r22, r1
 216:	71 05       	cpc	r23, r1
 218:	19 f4       	brne	.+6      	; 0x220 <fdevopen+0x1c>
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	38 c0       	rjmp	.+112    	; 0x290 <fdevopen+0x8c>
 220:	6e e0       	ldi	r22, 0x0E	; 14
 222:	70 e0       	ldi	r23, 0x00	; 0
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	0e 94 33 03 	call	0x666	; 0x666 <calloc>
 22c:	fc 01       	movw	r30, r24
 22e:	00 97       	sbiw	r24, 0x00	; 0
 230:	a1 f3       	breq	.-24     	; 0x21a <fdevopen+0x16>
 232:	80 e8       	ldi	r24, 0x80	; 128
 234:	83 83       	std	Z+3, r24	; 0x03
 236:	01 15       	cp	r16, r1
 238:	11 05       	cpc	r17, r1
 23a:	71 f0       	breq	.+28     	; 0x258 <fdevopen+0x54>
 23c:	13 87       	std	Z+11, r17	; 0x0b
 23e:	02 87       	std	Z+10, r16	; 0x0a
 240:	81 e8       	ldi	r24, 0x81	; 129
 242:	83 83       	std	Z+3, r24	; 0x03
 244:	80 91 0a 01 	lds	r24, 0x010A
 248:	90 91 0b 01 	lds	r25, 0x010B
 24c:	89 2b       	or	r24, r25
 24e:	21 f4       	brne	.+8      	; 0x258 <fdevopen+0x54>
 250:	f0 93 0b 01 	sts	0x010B, r31
 254:	e0 93 0a 01 	sts	0x010A, r30
 258:	20 97       	sbiw	r28, 0x00	; 0
 25a:	c9 f0       	breq	.+50     	; 0x28e <fdevopen+0x8a>
 25c:	d1 87       	std	Z+9, r29	; 0x09
 25e:	c0 87       	std	Z+8, r28	; 0x08
 260:	83 81       	ldd	r24, Z+3	; 0x03
 262:	82 60       	ori	r24, 0x02	; 2
 264:	83 83       	std	Z+3, r24	; 0x03
 266:	80 91 0c 01 	lds	r24, 0x010C
 26a:	90 91 0d 01 	lds	r25, 0x010D
 26e:	89 2b       	or	r24, r25
 270:	71 f4       	brne	.+28     	; 0x28e <fdevopen+0x8a>
 272:	f0 93 0d 01 	sts	0x010D, r31
 276:	e0 93 0c 01 	sts	0x010C, r30
 27a:	80 91 0e 01 	lds	r24, 0x010E
 27e:	90 91 0f 01 	lds	r25, 0x010F
 282:	89 2b       	or	r24, r25
 284:	21 f4       	brne	.+8      	; 0x28e <fdevopen+0x8a>
 286:	f0 93 0f 01 	sts	0x010F, r31
 28a:	e0 93 0e 01 	sts	0x010E, r30
 28e:	cf 01       	movw	r24, r30
 290:	df 91       	pop	r29
 292:	cf 91       	pop	r28
 294:	1f 91       	pop	r17
 296:	0f 91       	pop	r16
 298:	08 95       	ret

0000029a <printf>:
 29a:	a0 e0       	ldi	r26, 0x00	; 0
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	e3 e5       	ldi	r30, 0x53	; 83
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__prologue_saves__+0x20>
 2a6:	fe 01       	movw	r30, r28
 2a8:	35 96       	adiw	r30, 0x05	; 5
 2aa:	61 91       	ld	r22, Z+
 2ac:	71 91       	ld	r23, Z+
 2ae:	af 01       	movw	r20, r30
 2b0:	80 91 0c 01 	lds	r24, 0x010C
 2b4:	90 91 0d 01 	lds	r25, 0x010D
 2b8:	0e 94 61 01 	call	0x2c2	; 0x2c2 <vfprintf>
 2bc:	e2 e0       	ldi	r30, 0x02	; 2
 2be:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__epilogue_restores__+0x20>

000002c2 <vfprintf>:
 2c2:	ac e0       	ldi	r26, 0x0C	; 12
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	e7 e6       	ldi	r30, 0x67	; 103
 2c8:	f1 e0       	ldi	r31, 0x01	; 1
 2ca:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__prologue_saves__>
 2ce:	7c 01       	movw	r14, r24
 2d0:	6b 01       	movw	r12, r22
 2d2:	8a 01       	movw	r16, r20
 2d4:	fc 01       	movw	r30, r24
 2d6:	17 82       	std	Z+7, r1	; 0x07
 2d8:	16 82       	std	Z+6, r1	; 0x06
 2da:	83 81       	ldd	r24, Z+3	; 0x03
 2dc:	81 ff       	sbrs	r24, 1
 2de:	bd c1       	rjmp	.+890    	; 0x65a <__stack+0x15b>
 2e0:	ce 01       	movw	r24, r28
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	4c 01       	movw	r8, r24
 2e6:	f7 01       	movw	r30, r14
 2e8:	93 81       	ldd	r25, Z+3	; 0x03
 2ea:	f6 01       	movw	r30, r12
 2ec:	93 fd       	sbrc	r25, 3
 2ee:	85 91       	lpm	r24, Z+
 2f0:	93 ff       	sbrs	r25, 3
 2f2:	81 91       	ld	r24, Z+
 2f4:	6f 01       	movw	r12, r30
 2f6:	88 23       	and	r24, r24
 2f8:	09 f4       	brne	.+2      	; 0x2fc <vfprintf+0x3a>
 2fa:	ab c1       	rjmp	.+854    	; 0x652 <__stack+0x153>
 2fc:	85 32       	cpi	r24, 0x25	; 37
 2fe:	39 f4       	brne	.+14     	; 0x30e <vfprintf+0x4c>
 300:	93 fd       	sbrc	r25, 3
 302:	85 91       	lpm	r24, Z+
 304:	93 ff       	sbrs	r25, 3
 306:	81 91       	ld	r24, Z+
 308:	6f 01       	movw	r12, r30
 30a:	85 32       	cpi	r24, 0x25	; 37
 30c:	29 f4       	brne	.+10     	; 0x318 <vfprintf+0x56>
 30e:	b7 01       	movw	r22, r14
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 316:	e7 cf       	rjmp	.-50     	; 0x2e6 <vfprintf+0x24>
 318:	51 2c       	mov	r5, r1
 31a:	31 2c       	mov	r3, r1
 31c:	20 e0       	ldi	r18, 0x00	; 0
 31e:	20 32       	cpi	r18, 0x20	; 32
 320:	a0 f4       	brcc	.+40     	; 0x34a <vfprintf+0x88>
 322:	8b 32       	cpi	r24, 0x2B	; 43
 324:	69 f0       	breq	.+26     	; 0x340 <vfprintf+0x7e>
 326:	30 f4       	brcc	.+12     	; 0x334 <vfprintf+0x72>
 328:	80 32       	cpi	r24, 0x20	; 32
 32a:	59 f0       	breq	.+22     	; 0x342 <vfprintf+0x80>
 32c:	83 32       	cpi	r24, 0x23	; 35
 32e:	69 f4       	brne	.+26     	; 0x34a <vfprintf+0x88>
 330:	20 61       	ori	r18, 0x10	; 16
 332:	2c c0       	rjmp	.+88     	; 0x38c <vfprintf+0xca>
 334:	8d 32       	cpi	r24, 0x2D	; 45
 336:	39 f0       	breq	.+14     	; 0x346 <vfprintf+0x84>
 338:	80 33       	cpi	r24, 0x30	; 48
 33a:	39 f4       	brne	.+14     	; 0x34a <vfprintf+0x88>
 33c:	21 60       	ori	r18, 0x01	; 1
 33e:	26 c0       	rjmp	.+76     	; 0x38c <vfprintf+0xca>
 340:	22 60       	ori	r18, 0x02	; 2
 342:	24 60       	ori	r18, 0x04	; 4
 344:	23 c0       	rjmp	.+70     	; 0x38c <vfprintf+0xca>
 346:	28 60       	ori	r18, 0x08	; 8
 348:	21 c0       	rjmp	.+66     	; 0x38c <vfprintf+0xca>
 34a:	27 fd       	sbrc	r18, 7
 34c:	27 c0       	rjmp	.+78     	; 0x39c <vfprintf+0xda>
 34e:	30 ed       	ldi	r19, 0xD0	; 208
 350:	38 0f       	add	r19, r24
 352:	3a 30       	cpi	r19, 0x0A	; 10
 354:	78 f4       	brcc	.+30     	; 0x374 <vfprintf+0xb2>
 356:	26 ff       	sbrs	r18, 6
 358:	06 c0       	rjmp	.+12     	; 0x366 <vfprintf+0xa4>
 35a:	fa e0       	ldi	r31, 0x0A	; 10
 35c:	5f 9e       	mul	r5, r31
 35e:	30 0d       	add	r19, r0
 360:	11 24       	eor	r1, r1
 362:	53 2e       	mov	r5, r19
 364:	13 c0       	rjmp	.+38     	; 0x38c <vfprintf+0xca>
 366:	8a e0       	ldi	r24, 0x0A	; 10
 368:	38 9e       	mul	r3, r24
 36a:	30 0d       	add	r19, r0
 36c:	11 24       	eor	r1, r1
 36e:	33 2e       	mov	r3, r19
 370:	20 62       	ori	r18, 0x20	; 32
 372:	0c c0       	rjmp	.+24     	; 0x38c <vfprintf+0xca>
 374:	8e 32       	cpi	r24, 0x2E	; 46
 376:	21 f4       	brne	.+8      	; 0x380 <vfprintf+0xbe>
 378:	26 fd       	sbrc	r18, 6
 37a:	6b c1       	rjmp	.+726    	; 0x652 <__stack+0x153>
 37c:	20 64       	ori	r18, 0x40	; 64
 37e:	06 c0       	rjmp	.+12     	; 0x38c <vfprintf+0xca>
 380:	8c 36       	cpi	r24, 0x6C	; 108
 382:	11 f4       	brne	.+4      	; 0x388 <vfprintf+0xc6>
 384:	20 68       	ori	r18, 0x80	; 128
 386:	02 c0       	rjmp	.+4      	; 0x38c <vfprintf+0xca>
 388:	88 36       	cpi	r24, 0x68	; 104
 38a:	41 f4       	brne	.+16     	; 0x39c <vfprintf+0xda>
 38c:	f6 01       	movw	r30, r12
 38e:	93 fd       	sbrc	r25, 3
 390:	85 91       	lpm	r24, Z+
 392:	93 ff       	sbrs	r25, 3
 394:	81 91       	ld	r24, Z+
 396:	6f 01       	movw	r12, r30
 398:	81 11       	cpse	r24, r1
 39a:	c1 cf       	rjmp	.-126    	; 0x31e <vfprintf+0x5c>
 39c:	98 2f       	mov	r25, r24
 39e:	9f 7d       	andi	r25, 0xDF	; 223
 3a0:	95 54       	subi	r25, 0x45	; 69
 3a2:	93 30       	cpi	r25, 0x03	; 3
 3a4:	28 f4       	brcc	.+10     	; 0x3b0 <vfprintf+0xee>
 3a6:	0c 5f       	subi	r16, 0xFC	; 252
 3a8:	1f 4f       	sbci	r17, 0xFF	; 255
 3aa:	ff e3       	ldi	r31, 0x3F	; 63
 3ac:	f9 83       	std	Y+1, r31	; 0x01
 3ae:	0d c0       	rjmp	.+26     	; 0x3ca <vfprintf+0x108>
 3b0:	83 36       	cpi	r24, 0x63	; 99
 3b2:	31 f0       	breq	.+12     	; 0x3c0 <vfprintf+0xfe>
 3b4:	83 37       	cpi	r24, 0x73	; 115
 3b6:	71 f0       	breq	.+28     	; 0x3d4 <vfprintf+0x112>
 3b8:	83 35       	cpi	r24, 0x53	; 83
 3ba:	09 f0       	breq	.+2      	; 0x3be <vfprintf+0xfc>
 3bc:	5b c0       	rjmp	.+182    	; 0x474 <vfprintf+0x1b2>
 3be:	22 c0       	rjmp	.+68     	; 0x404 <vfprintf+0x142>
 3c0:	f8 01       	movw	r30, r16
 3c2:	80 81       	ld	r24, Z
 3c4:	89 83       	std	Y+1, r24	; 0x01
 3c6:	0e 5f       	subi	r16, 0xFE	; 254
 3c8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ca:	44 24       	eor	r4, r4
 3cc:	43 94       	inc	r4
 3ce:	51 2c       	mov	r5, r1
 3d0:	54 01       	movw	r10, r8
 3d2:	15 c0       	rjmp	.+42     	; 0x3fe <vfprintf+0x13c>
 3d4:	38 01       	movw	r6, r16
 3d6:	f2 e0       	ldi	r31, 0x02	; 2
 3d8:	6f 0e       	add	r6, r31
 3da:	71 1c       	adc	r7, r1
 3dc:	f8 01       	movw	r30, r16
 3de:	a0 80       	ld	r10, Z
 3e0:	b1 80       	ldd	r11, Z+1	; 0x01
 3e2:	26 ff       	sbrs	r18, 6
 3e4:	03 c0       	rjmp	.+6      	; 0x3ec <vfprintf+0x12a>
 3e6:	65 2d       	mov	r22, r5
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <vfprintf+0x12e>
 3ec:	6f ef       	ldi	r22, 0xFF	; 255
 3ee:	7f ef       	ldi	r23, 0xFF	; 255
 3f0:	c5 01       	movw	r24, r10
 3f2:	2c 87       	std	Y+12, r18	; 0x0c
 3f4:	0e 94 88 04 	call	0x910	; 0x910 <strnlen>
 3f8:	2c 01       	movw	r4, r24
 3fa:	83 01       	movw	r16, r6
 3fc:	2c 85       	ldd	r18, Y+12	; 0x0c
 3fe:	2f 77       	andi	r18, 0x7F	; 127
 400:	22 2e       	mov	r2, r18
 402:	17 c0       	rjmp	.+46     	; 0x432 <vfprintf+0x170>
 404:	38 01       	movw	r6, r16
 406:	f2 e0       	ldi	r31, 0x02	; 2
 408:	6f 0e       	add	r6, r31
 40a:	71 1c       	adc	r7, r1
 40c:	f8 01       	movw	r30, r16
 40e:	a0 80       	ld	r10, Z
 410:	b1 80       	ldd	r11, Z+1	; 0x01
 412:	26 ff       	sbrs	r18, 6
 414:	03 c0       	rjmp	.+6      	; 0x41c <vfprintf+0x15a>
 416:	65 2d       	mov	r22, r5
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	02 c0       	rjmp	.+4      	; 0x420 <vfprintf+0x15e>
 41c:	6f ef       	ldi	r22, 0xFF	; 255
 41e:	7f ef       	ldi	r23, 0xFF	; 255
 420:	c5 01       	movw	r24, r10
 422:	2c 87       	std	Y+12, r18	; 0x0c
 424:	0e 94 76 04 	call	0x8ec	; 0x8ec <strnlen_P>
 428:	2c 01       	movw	r4, r24
 42a:	2c 85       	ldd	r18, Y+12	; 0x0c
 42c:	20 68       	ori	r18, 0x80	; 128
 42e:	22 2e       	mov	r2, r18
 430:	83 01       	movw	r16, r6
 432:	23 fc       	sbrc	r2, 3
 434:	1b c0       	rjmp	.+54     	; 0x46c <vfprintf+0x1aa>
 436:	83 2d       	mov	r24, r3
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	48 16       	cp	r4, r24
 43c:	59 06       	cpc	r5, r25
 43e:	b0 f4       	brcc	.+44     	; 0x46c <vfprintf+0x1aa>
 440:	b7 01       	movw	r22, r14
 442:	80 e2       	ldi	r24, 0x20	; 32
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 44a:	3a 94       	dec	r3
 44c:	f4 cf       	rjmp	.-24     	; 0x436 <vfprintf+0x174>
 44e:	f5 01       	movw	r30, r10
 450:	27 fc       	sbrc	r2, 7
 452:	85 91       	lpm	r24, Z+
 454:	27 fe       	sbrs	r2, 7
 456:	81 91       	ld	r24, Z+
 458:	5f 01       	movw	r10, r30
 45a:	b7 01       	movw	r22, r14
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 462:	31 10       	cpse	r3, r1
 464:	3a 94       	dec	r3
 466:	f1 e0       	ldi	r31, 0x01	; 1
 468:	4f 1a       	sub	r4, r31
 46a:	51 08       	sbc	r5, r1
 46c:	41 14       	cp	r4, r1
 46e:	51 04       	cpc	r5, r1
 470:	71 f7       	brne	.-36     	; 0x44e <vfprintf+0x18c>
 472:	e5 c0       	rjmp	.+458    	; 0x63e <__stack+0x13f>
 474:	84 36       	cpi	r24, 0x64	; 100
 476:	11 f0       	breq	.+4      	; 0x47c <vfprintf+0x1ba>
 478:	89 36       	cpi	r24, 0x69	; 105
 47a:	39 f5       	brne	.+78     	; 0x4ca <vfprintf+0x208>
 47c:	f8 01       	movw	r30, r16
 47e:	27 ff       	sbrs	r18, 7
 480:	07 c0       	rjmp	.+14     	; 0x490 <vfprintf+0x1ce>
 482:	60 81       	ld	r22, Z
 484:	71 81       	ldd	r23, Z+1	; 0x01
 486:	82 81       	ldd	r24, Z+2	; 0x02
 488:	93 81       	ldd	r25, Z+3	; 0x03
 48a:	0c 5f       	subi	r16, 0xFC	; 252
 48c:	1f 4f       	sbci	r17, 0xFF	; 255
 48e:	08 c0       	rjmp	.+16     	; 0x4a0 <vfprintf+0x1de>
 490:	60 81       	ld	r22, Z
 492:	71 81       	ldd	r23, Z+1	; 0x01
 494:	88 27       	eor	r24, r24
 496:	77 fd       	sbrc	r23, 7
 498:	80 95       	com	r24
 49a:	98 2f       	mov	r25, r24
 49c:	0e 5f       	subi	r16, 0xFE	; 254
 49e:	1f 4f       	sbci	r17, 0xFF	; 255
 4a0:	2f 76       	andi	r18, 0x6F	; 111
 4a2:	b2 2e       	mov	r11, r18
 4a4:	97 ff       	sbrs	r25, 7
 4a6:	09 c0       	rjmp	.+18     	; 0x4ba <vfprintf+0x1f8>
 4a8:	90 95       	com	r25
 4aa:	80 95       	com	r24
 4ac:	70 95       	com	r23
 4ae:	61 95       	neg	r22
 4b0:	7f 4f       	sbci	r23, 0xFF	; 255
 4b2:	8f 4f       	sbci	r24, 0xFF	; 255
 4b4:	9f 4f       	sbci	r25, 0xFF	; 255
 4b6:	20 68       	ori	r18, 0x80	; 128
 4b8:	b2 2e       	mov	r11, r18
 4ba:	2a e0       	ldi	r18, 0x0A	; 10
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	a4 01       	movw	r20, r8
 4c0:	0e 94 c5 04 	call	0x98a	; 0x98a <__ultoa_invert>
 4c4:	a8 2e       	mov	r10, r24
 4c6:	a8 18       	sub	r10, r8
 4c8:	44 c0       	rjmp	.+136    	; 0x552 <__stack+0x53>
 4ca:	85 37       	cpi	r24, 0x75	; 117
 4cc:	29 f4       	brne	.+10     	; 0x4d8 <vfprintf+0x216>
 4ce:	2f 7e       	andi	r18, 0xEF	; 239
 4d0:	b2 2e       	mov	r11, r18
 4d2:	2a e0       	ldi	r18, 0x0A	; 10
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	25 c0       	rjmp	.+74     	; 0x522 <__stack+0x23>
 4d8:	f2 2f       	mov	r31, r18
 4da:	f9 7f       	andi	r31, 0xF9	; 249
 4dc:	bf 2e       	mov	r11, r31
 4de:	8f 36       	cpi	r24, 0x6F	; 111
 4e0:	c1 f0       	breq	.+48     	; 0x512 <__stack+0x13>
 4e2:	18 f4       	brcc	.+6      	; 0x4ea <vfprintf+0x228>
 4e4:	88 35       	cpi	r24, 0x58	; 88
 4e6:	79 f0       	breq	.+30     	; 0x506 <__stack+0x7>
 4e8:	b4 c0       	rjmp	.+360    	; 0x652 <__stack+0x153>
 4ea:	80 37       	cpi	r24, 0x70	; 112
 4ec:	19 f0       	breq	.+6      	; 0x4f4 <vfprintf+0x232>
 4ee:	88 37       	cpi	r24, 0x78	; 120
 4f0:	21 f0       	breq	.+8      	; 0x4fa <vfprintf+0x238>
 4f2:	af c0       	rjmp	.+350    	; 0x652 <__stack+0x153>
 4f4:	2f 2f       	mov	r18, r31
 4f6:	20 61       	ori	r18, 0x10	; 16
 4f8:	b2 2e       	mov	r11, r18
 4fa:	b4 fe       	sbrs	r11, 4
 4fc:	0d c0       	rjmp	.+26     	; 0x518 <__stack+0x19>
 4fe:	8b 2d       	mov	r24, r11
 500:	84 60       	ori	r24, 0x04	; 4
 502:	b8 2e       	mov	r11, r24
 504:	09 c0       	rjmp	.+18     	; 0x518 <__stack+0x19>
 506:	24 ff       	sbrs	r18, 4
 508:	0a c0       	rjmp	.+20     	; 0x51e <__stack+0x1f>
 50a:	9f 2f       	mov	r25, r31
 50c:	96 60       	ori	r25, 0x06	; 6
 50e:	b9 2e       	mov	r11, r25
 510:	06 c0       	rjmp	.+12     	; 0x51e <__stack+0x1f>
 512:	28 e0       	ldi	r18, 0x08	; 8
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	05 c0       	rjmp	.+10     	; 0x522 <__stack+0x23>
 518:	20 e1       	ldi	r18, 0x10	; 16
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__stack+0x23>
 51e:	20 e1       	ldi	r18, 0x10	; 16
 520:	32 e0       	ldi	r19, 0x02	; 2
 522:	f8 01       	movw	r30, r16
 524:	b7 fe       	sbrs	r11, 7
 526:	07 c0       	rjmp	.+14     	; 0x536 <__stack+0x37>
 528:	60 81       	ld	r22, Z
 52a:	71 81       	ldd	r23, Z+1	; 0x01
 52c:	82 81       	ldd	r24, Z+2	; 0x02
 52e:	93 81       	ldd	r25, Z+3	; 0x03
 530:	0c 5f       	subi	r16, 0xFC	; 252
 532:	1f 4f       	sbci	r17, 0xFF	; 255
 534:	06 c0       	rjmp	.+12     	; 0x542 <__stack+0x43>
 536:	60 81       	ld	r22, Z
 538:	71 81       	ldd	r23, Z+1	; 0x01
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 5f       	subi	r16, 0xFE	; 254
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	a4 01       	movw	r20, r8
 544:	0e 94 c5 04 	call	0x98a	; 0x98a <__ultoa_invert>
 548:	a8 2e       	mov	r10, r24
 54a:	a8 18       	sub	r10, r8
 54c:	fb 2d       	mov	r31, r11
 54e:	ff 77       	andi	r31, 0x7F	; 127
 550:	bf 2e       	mov	r11, r31
 552:	b6 fe       	sbrs	r11, 6
 554:	0b c0       	rjmp	.+22     	; 0x56c <__stack+0x6d>
 556:	2b 2d       	mov	r18, r11
 558:	2e 7f       	andi	r18, 0xFE	; 254
 55a:	a5 14       	cp	r10, r5
 55c:	50 f4       	brcc	.+20     	; 0x572 <__stack+0x73>
 55e:	b4 fe       	sbrs	r11, 4
 560:	0a c0       	rjmp	.+20     	; 0x576 <__stack+0x77>
 562:	b2 fc       	sbrc	r11, 2
 564:	08 c0       	rjmp	.+16     	; 0x576 <__stack+0x77>
 566:	2b 2d       	mov	r18, r11
 568:	2e 7e       	andi	r18, 0xEE	; 238
 56a:	05 c0       	rjmp	.+10     	; 0x576 <__stack+0x77>
 56c:	7a 2c       	mov	r7, r10
 56e:	2b 2d       	mov	r18, r11
 570:	03 c0       	rjmp	.+6      	; 0x578 <__stack+0x79>
 572:	7a 2c       	mov	r7, r10
 574:	01 c0       	rjmp	.+2      	; 0x578 <__stack+0x79>
 576:	75 2c       	mov	r7, r5
 578:	24 ff       	sbrs	r18, 4
 57a:	0d c0       	rjmp	.+26     	; 0x596 <__stack+0x97>
 57c:	fe 01       	movw	r30, r28
 57e:	ea 0d       	add	r30, r10
 580:	f1 1d       	adc	r31, r1
 582:	80 81       	ld	r24, Z
 584:	80 33       	cpi	r24, 0x30	; 48
 586:	11 f4       	brne	.+4      	; 0x58c <__stack+0x8d>
 588:	29 7e       	andi	r18, 0xE9	; 233
 58a:	09 c0       	rjmp	.+18     	; 0x59e <__stack+0x9f>
 58c:	22 ff       	sbrs	r18, 2
 58e:	06 c0       	rjmp	.+12     	; 0x59c <__stack+0x9d>
 590:	73 94       	inc	r7
 592:	73 94       	inc	r7
 594:	04 c0       	rjmp	.+8      	; 0x59e <__stack+0x9f>
 596:	82 2f       	mov	r24, r18
 598:	86 78       	andi	r24, 0x86	; 134
 59a:	09 f0       	breq	.+2      	; 0x59e <__stack+0x9f>
 59c:	73 94       	inc	r7
 59e:	23 fd       	sbrc	r18, 3
 5a0:	13 c0       	rjmp	.+38     	; 0x5c8 <__stack+0xc9>
 5a2:	20 ff       	sbrs	r18, 0
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__stack+0xb3>
 5a6:	5a 2c       	mov	r5, r10
 5a8:	73 14       	cp	r7, r3
 5aa:	18 f4       	brcc	.+6      	; 0x5b2 <__stack+0xb3>
 5ac:	53 0c       	add	r5, r3
 5ae:	57 18       	sub	r5, r7
 5b0:	73 2c       	mov	r7, r3
 5b2:	73 14       	cp	r7, r3
 5b4:	68 f4       	brcc	.+26     	; 0x5d0 <__stack+0xd1>
 5b6:	b7 01       	movw	r22, r14
 5b8:	80 e2       	ldi	r24, 0x20	; 32
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	2c 87       	std	Y+12, r18	; 0x0c
 5be:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 5c2:	73 94       	inc	r7
 5c4:	2c 85       	ldd	r18, Y+12	; 0x0c
 5c6:	f5 cf       	rjmp	.-22     	; 0x5b2 <__stack+0xb3>
 5c8:	73 14       	cp	r7, r3
 5ca:	10 f4       	brcc	.+4      	; 0x5d0 <__stack+0xd1>
 5cc:	37 18       	sub	r3, r7
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <__stack+0xd3>
 5d0:	31 2c       	mov	r3, r1
 5d2:	24 ff       	sbrs	r18, 4
 5d4:	12 c0       	rjmp	.+36     	; 0x5fa <__stack+0xfb>
 5d6:	b7 01       	movw	r22, r14
 5d8:	80 e3       	ldi	r24, 0x30	; 48
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	2c 87       	std	Y+12, r18	; 0x0c
 5de:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 5e2:	2c 85       	ldd	r18, Y+12	; 0x0c
 5e4:	22 ff       	sbrs	r18, 2
 5e6:	17 c0       	rjmp	.+46     	; 0x616 <__stack+0x117>
 5e8:	21 ff       	sbrs	r18, 1
 5ea:	03 c0       	rjmp	.+6      	; 0x5f2 <__stack+0xf3>
 5ec:	88 e5       	ldi	r24, 0x58	; 88
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__stack+0xf7>
 5f2:	88 e7       	ldi	r24, 0x78	; 120
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	b7 01       	movw	r22, r14
 5f8:	0c c0       	rjmp	.+24     	; 0x612 <__stack+0x113>
 5fa:	82 2f       	mov	r24, r18
 5fc:	86 78       	andi	r24, 0x86	; 134
 5fe:	59 f0       	breq	.+22     	; 0x616 <__stack+0x117>
 600:	21 fd       	sbrc	r18, 1
 602:	02 c0       	rjmp	.+4      	; 0x608 <__stack+0x109>
 604:	80 e2       	ldi	r24, 0x20	; 32
 606:	01 c0       	rjmp	.+2      	; 0x60a <__stack+0x10b>
 608:	8b e2       	ldi	r24, 0x2B	; 43
 60a:	27 fd       	sbrc	r18, 7
 60c:	8d e2       	ldi	r24, 0x2D	; 45
 60e:	b7 01       	movw	r22, r14
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 616:	a5 14       	cp	r10, r5
 618:	38 f4       	brcc	.+14     	; 0x628 <__stack+0x129>
 61a:	b7 01       	movw	r22, r14
 61c:	80 e3       	ldi	r24, 0x30	; 48
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 624:	5a 94       	dec	r5
 626:	f7 cf       	rjmp	.-18     	; 0x616 <__stack+0x117>
 628:	aa 94       	dec	r10
 62a:	f4 01       	movw	r30, r8
 62c:	ea 0d       	add	r30, r10
 62e:	f1 1d       	adc	r31, r1
 630:	80 81       	ld	r24, Z
 632:	b7 01       	movw	r22, r14
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 63a:	a1 10       	cpse	r10, r1
 63c:	f5 cf       	rjmp	.-22     	; 0x628 <__stack+0x129>
 63e:	33 20       	and	r3, r3
 640:	09 f4       	brne	.+2      	; 0x644 <__stack+0x145>
 642:	51 ce       	rjmp	.-862    	; 0x2e6 <vfprintf+0x24>
 644:	b7 01       	movw	r22, r14
 646:	80 e2       	ldi	r24, 0x20	; 32
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 93 04 	call	0x926	; 0x926 <fputc>
 64e:	3a 94       	dec	r3
 650:	f6 cf       	rjmp	.-20     	; 0x63e <__stack+0x13f>
 652:	f7 01       	movw	r30, r14
 654:	86 81       	ldd	r24, Z+6	; 0x06
 656:	97 81       	ldd	r25, Z+7	; 0x07
 658:	02 c0       	rjmp	.+4      	; 0x65e <__stack+0x15f>
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	9f ef       	ldi	r25, 0xFF	; 255
 65e:	2c 96       	adiw	r28, 0x0c	; 12
 660:	e2 e1       	ldi	r30, 0x12	; 18
 662:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__epilogue_restores__>

00000666 <calloc>:
 666:	0f 93       	push	r16
 668:	1f 93       	push	r17
 66a:	cf 93       	push	r28
 66c:	df 93       	push	r29
 66e:	86 9f       	mul	r24, r22
 670:	80 01       	movw	r16, r0
 672:	87 9f       	mul	r24, r23
 674:	10 0d       	add	r17, r0
 676:	96 9f       	mul	r25, r22
 678:	10 0d       	add	r17, r0
 67a:	11 24       	eor	r1, r1
 67c:	c8 01       	movw	r24, r16
 67e:	0e 94 4f 03 	call	0x69e	; 0x69e <malloc>
 682:	ec 01       	movw	r28, r24
 684:	00 97       	sbiw	r24, 0x00	; 0
 686:	29 f0       	breq	.+10     	; 0x692 <calloc+0x2c>
 688:	a8 01       	movw	r20, r16
 68a:	60 e0       	ldi	r22, 0x00	; 0
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	0e 94 81 04 	call	0x902	; 0x902 <memset>
 692:	ce 01       	movw	r24, r28
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	1f 91       	pop	r17
 69a:	0f 91       	pop	r16
 69c:	08 95       	ret

0000069e <malloc>:
 69e:	cf 93       	push	r28
 6a0:	df 93       	push	r29
 6a2:	82 30       	cpi	r24, 0x02	; 2
 6a4:	91 05       	cpc	r25, r1
 6a6:	10 f4       	brcc	.+4      	; 0x6ac <malloc+0xe>
 6a8:	82 e0       	ldi	r24, 0x02	; 2
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	e0 91 12 01 	lds	r30, 0x0112
 6b0:	f0 91 13 01 	lds	r31, 0x0113
 6b4:	20 e0       	ldi	r18, 0x00	; 0
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	a0 e0       	ldi	r26, 0x00	; 0
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	30 97       	sbiw	r30, 0x00	; 0
 6be:	39 f1       	breq	.+78     	; 0x70e <malloc+0x70>
 6c0:	40 81       	ld	r20, Z
 6c2:	51 81       	ldd	r21, Z+1	; 0x01
 6c4:	48 17       	cp	r20, r24
 6c6:	59 07       	cpc	r21, r25
 6c8:	b8 f0       	brcs	.+46     	; 0x6f8 <malloc+0x5a>
 6ca:	48 17       	cp	r20, r24
 6cc:	59 07       	cpc	r21, r25
 6ce:	71 f4       	brne	.+28     	; 0x6ec <malloc+0x4e>
 6d0:	82 81       	ldd	r24, Z+2	; 0x02
 6d2:	93 81       	ldd	r25, Z+3	; 0x03
 6d4:	10 97       	sbiw	r26, 0x00	; 0
 6d6:	29 f0       	breq	.+10     	; 0x6e2 <malloc+0x44>
 6d8:	13 96       	adiw	r26, 0x03	; 3
 6da:	9c 93       	st	X, r25
 6dc:	8e 93       	st	-X, r24
 6de:	12 97       	sbiw	r26, 0x02	; 2
 6e0:	2c c0       	rjmp	.+88     	; 0x73a <malloc+0x9c>
 6e2:	90 93 13 01 	sts	0x0113, r25
 6e6:	80 93 12 01 	sts	0x0112, r24
 6ea:	27 c0       	rjmp	.+78     	; 0x73a <malloc+0x9c>
 6ec:	21 15       	cp	r18, r1
 6ee:	31 05       	cpc	r19, r1
 6f0:	31 f0       	breq	.+12     	; 0x6fe <malloc+0x60>
 6f2:	42 17       	cp	r20, r18
 6f4:	53 07       	cpc	r21, r19
 6f6:	18 f0       	brcs	.+6      	; 0x6fe <malloc+0x60>
 6f8:	a9 01       	movw	r20, r18
 6fa:	db 01       	movw	r26, r22
 6fc:	01 c0       	rjmp	.+2      	; 0x700 <malloc+0x62>
 6fe:	ef 01       	movw	r28, r30
 700:	9a 01       	movw	r18, r20
 702:	bd 01       	movw	r22, r26
 704:	df 01       	movw	r26, r30
 706:	02 80       	ldd	r0, Z+2	; 0x02
 708:	f3 81       	ldd	r31, Z+3	; 0x03
 70a:	e0 2d       	mov	r30, r0
 70c:	d7 cf       	rjmp	.-82     	; 0x6bc <malloc+0x1e>
 70e:	21 15       	cp	r18, r1
 710:	31 05       	cpc	r19, r1
 712:	f9 f0       	breq	.+62     	; 0x752 <malloc+0xb4>
 714:	28 1b       	sub	r18, r24
 716:	39 0b       	sbc	r19, r25
 718:	24 30       	cpi	r18, 0x04	; 4
 71a:	31 05       	cpc	r19, r1
 71c:	80 f4       	brcc	.+32     	; 0x73e <malloc+0xa0>
 71e:	8a 81       	ldd	r24, Y+2	; 0x02
 720:	9b 81       	ldd	r25, Y+3	; 0x03
 722:	61 15       	cp	r22, r1
 724:	71 05       	cpc	r23, r1
 726:	21 f0       	breq	.+8      	; 0x730 <malloc+0x92>
 728:	fb 01       	movw	r30, r22
 72a:	93 83       	std	Z+3, r25	; 0x03
 72c:	82 83       	std	Z+2, r24	; 0x02
 72e:	04 c0       	rjmp	.+8      	; 0x738 <malloc+0x9a>
 730:	90 93 13 01 	sts	0x0113, r25
 734:	80 93 12 01 	sts	0x0112, r24
 738:	fe 01       	movw	r30, r28
 73a:	32 96       	adiw	r30, 0x02	; 2
 73c:	44 c0       	rjmp	.+136    	; 0x7c6 <malloc+0x128>
 73e:	fe 01       	movw	r30, r28
 740:	e2 0f       	add	r30, r18
 742:	f3 1f       	adc	r31, r19
 744:	81 93       	st	Z+, r24
 746:	91 93       	st	Z+, r25
 748:	22 50       	subi	r18, 0x02	; 2
 74a:	31 09       	sbc	r19, r1
 74c:	39 83       	std	Y+1, r19	; 0x01
 74e:	28 83       	st	Y, r18
 750:	3a c0       	rjmp	.+116    	; 0x7c6 <malloc+0x128>
 752:	20 91 10 01 	lds	r18, 0x0110
 756:	30 91 11 01 	lds	r19, 0x0111
 75a:	23 2b       	or	r18, r19
 75c:	41 f4       	brne	.+16     	; 0x76e <malloc+0xd0>
 75e:	20 91 02 01 	lds	r18, 0x0102
 762:	30 91 03 01 	lds	r19, 0x0103
 766:	30 93 11 01 	sts	0x0111, r19
 76a:	20 93 10 01 	sts	0x0110, r18
 76e:	20 91 00 01 	lds	r18, 0x0100
 772:	30 91 01 01 	lds	r19, 0x0101
 776:	21 15       	cp	r18, r1
 778:	31 05       	cpc	r19, r1
 77a:	41 f4       	brne	.+16     	; 0x78c <malloc+0xee>
 77c:	2d b7       	in	r18, 0x3d	; 61
 77e:	3e b7       	in	r19, 0x3e	; 62
 780:	40 91 04 01 	lds	r20, 0x0104
 784:	50 91 05 01 	lds	r21, 0x0105
 788:	24 1b       	sub	r18, r20
 78a:	35 0b       	sbc	r19, r21
 78c:	e0 91 10 01 	lds	r30, 0x0110
 790:	f0 91 11 01 	lds	r31, 0x0111
 794:	e2 17       	cp	r30, r18
 796:	f3 07       	cpc	r31, r19
 798:	a0 f4       	brcc	.+40     	; 0x7c2 <malloc+0x124>
 79a:	2e 1b       	sub	r18, r30
 79c:	3f 0b       	sbc	r19, r31
 79e:	28 17       	cp	r18, r24
 7a0:	39 07       	cpc	r19, r25
 7a2:	78 f0       	brcs	.+30     	; 0x7c2 <malloc+0x124>
 7a4:	ac 01       	movw	r20, r24
 7a6:	4e 5f       	subi	r20, 0xFE	; 254
 7a8:	5f 4f       	sbci	r21, 0xFF	; 255
 7aa:	24 17       	cp	r18, r20
 7ac:	35 07       	cpc	r19, r21
 7ae:	48 f0       	brcs	.+18     	; 0x7c2 <malloc+0x124>
 7b0:	4e 0f       	add	r20, r30
 7b2:	5f 1f       	adc	r21, r31
 7b4:	50 93 11 01 	sts	0x0111, r21
 7b8:	40 93 10 01 	sts	0x0110, r20
 7bc:	81 93       	st	Z+, r24
 7be:	91 93       	st	Z+, r25
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <malloc+0x128>
 7c2:	e0 e0       	ldi	r30, 0x00	; 0
 7c4:	f0 e0       	ldi	r31, 0x00	; 0
 7c6:	cf 01       	movw	r24, r30
 7c8:	df 91       	pop	r29
 7ca:	cf 91       	pop	r28
 7cc:	08 95       	ret

000007ce <free>:
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	00 97       	sbiw	r24, 0x00	; 0
 7d4:	09 f4       	brne	.+2      	; 0x7d8 <free+0xa>
 7d6:	87 c0       	rjmp	.+270    	; 0x8e6 <free+0x118>
 7d8:	fc 01       	movw	r30, r24
 7da:	32 97       	sbiw	r30, 0x02	; 2
 7dc:	13 82       	std	Z+3, r1	; 0x03
 7de:	12 82       	std	Z+2, r1	; 0x02
 7e0:	c0 91 12 01 	lds	r28, 0x0112
 7e4:	d0 91 13 01 	lds	r29, 0x0113
 7e8:	20 97       	sbiw	r28, 0x00	; 0
 7ea:	81 f4       	brne	.+32     	; 0x80c <free+0x3e>
 7ec:	20 81       	ld	r18, Z
 7ee:	31 81       	ldd	r19, Z+1	; 0x01
 7f0:	28 0f       	add	r18, r24
 7f2:	39 1f       	adc	r19, r25
 7f4:	80 91 10 01 	lds	r24, 0x0110
 7f8:	90 91 11 01 	lds	r25, 0x0111
 7fc:	82 17       	cp	r24, r18
 7fe:	93 07       	cpc	r25, r19
 800:	79 f5       	brne	.+94     	; 0x860 <free+0x92>
 802:	f0 93 11 01 	sts	0x0111, r31
 806:	e0 93 10 01 	sts	0x0110, r30
 80a:	6d c0       	rjmp	.+218    	; 0x8e6 <free+0x118>
 80c:	de 01       	movw	r26, r28
 80e:	20 e0       	ldi	r18, 0x00	; 0
 810:	30 e0       	ldi	r19, 0x00	; 0
 812:	ae 17       	cp	r26, r30
 814:	bf 07       	cpc	r27, r31
 816:	50 f4       	brcc	.+20     	; 0x82c <free+0x5e>
 818:	12 96       	adiw	r26, 0x02	; 2
 81a:	4d 91       	ld	r20, X+
 81c:	5c 91       	ld	r21, X
 81e:	13 97       	sbiw	r26, 0x03	; 3
 820:	9d 01       	movw	r18, r26
 822:	41 15       	cp	r20, r1
 824:	51 05       	cpc	r21, r1
 826:	09 f1       	breq	.+66     	; 0x86a <free+0x9c>
 828:	da 01       	movw	r26, r20
 82a:	f3 cf       	rjmp	.-26     	; 0x812 <free+0x44>
 82c:	b3 83       	std	Z+3, r27	; 0x03
 82e:	a2 83       	std	Z+2, r26	; 0x02
 830:	40 81       	ld	r20, Z
 832:	51 81       	ldd	r21, Z+1	; 0x01
 834:	84 0f       	add	r24, r20
 836:	95 1f       	adc	r25, r21
 838:	8a 17       	cp	r24, r26
 83a:	9b 07       	cpc	r25, r27
 83c:	71 f4       	brne	.+28     	; 0x85a <free+0x8c>
 83e:	8d 91       	ld	r24, X+
 840:	9c 91       	ld	r25, X
 842:	11 97       	sbiw	r26, 0x01	; 1
 844:	84 0f       	add	r24, r20
 846:	95 1f       	adc	r25, r21
 848:	02 96       	adiw	r24, 0x02	; 2
 84a:	91 83       	std	Z+1, r25	; 0x01
 84c:	80 83       	st	Z, r24
 84e:	12 96       	adiw	r26, 0x02	; 2
 850:	8d 91       	ld	r24, X+
 852:	9c 91       	ld	r25, X
 854:	13 97       	sbiw	r26, 0x03	; 3
 856:	93 83       	std	Z+3, r25	; 0x03
 858:	82 83       	std	Z+2, r24	; 0x02
 85a:	21 15       	cp	r18, r1
 85c:	31 05       	cpc	r19, r1
 85e:	29 f4       	brne	.+10     	; 0x86a <free+0x9c>
 860:	f0 93 13 01 	sts	0x0113, r31
 864:	e0 93 12 01 	sts	0x0112, r30
 868:	3e c0       	rjmp	.+124    	; 0x8e6 <free+0x118>
 86a:	d9 01       	movw	r26, r18
 86c:	13 96       	adiw	r26, 0x03	; 3
 86e:	fc 93       	st	X, r31
 870:	ee 93       	st	-X, r30
 872:	12 97       	sbiw	r26, 0x02	; 2
 874:	4d 91       	ld	r20, X+
 876:	5d 91       	ld	r21, X+
 878:	a4 0f       	add	r26, r20
 87a:	b5 1f       	adc	r27, r21
 87c:	ea 17       	cp	r30, r26
 87e:	fb 07       	cpc	r31, r27
 880:	79 f4       	brne	.+30     	; 0x8a0 <free+0xd2>
 882:	80 81       	ld	r24, Z
 884:	91 81       	ldd	r25, Z+1	; 0x01
 886:	84 0f       	add	r24, r20
 888:	95 1f       	adc	r25, r21
 88a:	02 96       	adiw	r24, 0x02	; 2
 88c:	d9 01       	movw	r26, r18
 88e:	11 96       	adiw	r26, 0x01	; 1
 890:	9c 93       	st	X, r25
 892:	8e 93       	st	-X, r24
 894:	82 81       	ldd	r24, Z+2	; 0x02
 896:	93 81       	ldd	r25, Z+3	; 0x03
 898:	13 96       	adiw	r26, 0x03	; 3
 89a:	9c 93       	st	X, r25
 89c:	8e 93       	st	-X, r24
 89e:	12 97       	sbiw	r26, 0x02	; 2
 8a0:	e0 e0       	ldi	r30, 0x00	; 0
 8a2:	f0 e0       	ldi	r31, 0x00	; 0
 8a4:	8a 81       	ldd	r24, Y+2	; 0x02
 8a6:	9b 81       	ldd	r25, Y+3	; 0x03
 8a8:	00 97       	sbiw	r24, 0x00	; 0
 8aa:	19 f0       	breq	.+6      	; 0x8b2 <free+0xe4>
 8ac:	fe 01       	movw	r30, r28
 8ae:	ec 01       	movw	r28, r24
 8b0:	f9 cf       	rjmp	.-14     	; 0x8a4 <free+0xd6>
 8b2:	ce 01       	movw	r24, r28
 8b4:	02 96       	adiw	r24, 0x02	; 2
 8b6:	28 81       	ld	r18, Y
 8b8:	39 81       	ldd	r19, Y+1	; 0x01
 8ba:	82 0f       	add	r24, r18
 8bc:	93 1f       	adc	r25, r19
 8be:	20 91 10 01 	lds	r18, 0x0110
 8c2:	30 91 11 01 	lds	r19, 0x0111
 8c6:	28 17       	cp	r18, r24
 8c8:	39 07       	cpc	r19, r25
 8ca:	69 f4       	brne	.+26     	; 0x8e6 <free+0x118>
 8cc:	30 97       	sbiw	r30, 0x00	; 0
 8ce:	29 f4       	brne	.+10     	; 0x8da <free+0x10c>
 8d0:	10 92 13 01 	sts	0x0113, r1
 8d4:	10 92 12 01 	sts	0x0112, r1
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <free+0x110>
 8da:	13 82       	std	Z+3, r1	; 0x03
 8dc:	12 82       	std	Z+2, r1	; 0x02
 8de:	d0 93 11 01 	sts	0x0111, r29
 8e2:	c0 93 10 01 	sts	0x0110, r28
 8e6:	df 91       	pop	r29
 8e8:	cf 91       	pop	r28
 8ea:	08 95       	ret

000008ec <strnlen_P>:
 8ec:	fc 01       	movw	r30, r24
 8ee:	05 90       	lpm	r0, Z+
 8f0:	61 50       	subi	r22, 0x01	; 1
 8f2:	70 40       	sbci	r23, 0x00	; 0
 8f4:	01 10       	cpse	r0, r1
 8f6:	d8 f7       	brcc	.-10     	; 0x8ee <strnlen_P+0x2>
 8f8:	80 95       	com	r24
 8fa:	90 95       	com	r25
 8fc:	8e 0f       	add	r24, r30
 8fe:	9f 1f       	adc	r25, r31
 900:	08 95       	ret

00000902 <memset>:
 902:	dc 01       	movw	r26, r24
 904:	01 c0       	rjmp	.+2      	; 0x908 <memset+0x6>
 906:	6d 93       	st	X+, r22
 908:	41 50       	subi	r20, 0x01	; 1
 90a:	50 40       	sbci	r21, 0x00	; 0
 90c:	e0 f7       	brcc	.-8      	; 0x906 <memset+0x4>
 90e:	08 95       	ret

00000910 <strnlen>:
 910:	fc 01       	movw	r30, r24
 912:	61 50       	subi	r22, 0x01	; 1
 914:	70 40       	sbci	r23, 0x00	; 0
 916:	01 90       	ld	r0, Z+
 918:	01 10       	cpse	r0, r1
 91a:	d8 f7       	brcc	.-10     	; 0x912 <strnlen+0x2>
 91c:	80 95       	com	r24
 91e:	90 95       	com	r25
 920:	8e 0f       	add	r24, r30
 922:	9f 1f       	adc	r25, r31
 924:	08 95       	ret

00000926 <fputc>:
 926:	0f 93       	push	r16
 928:	1f 93       	push	r17
 92a:	cf 93       	push	r28
 92c:	df 93       	push	r29
 92e:	18 2f       	mov	r17, r24
 930:	09 2f       	mov	r16, r25
 932:	eb 01       	movw	r28, r22
 934:	8b 81       	ldd	r24, Y+3	; 0x03
 936:	81 fd       	sbrc	r24, 1
 938:	03 c0       	rjmp	.+6      	; 0x940 <fputc+0x1a>
 93a:	8f ef       	ldi	r24, 0xFF	; 255
 93c:	9f ef       	ldi	r25, 0xFF	; 255
 93e:	20 c0       	rjmp	.+64     	; 0x980 <fputc+0x5a>
 940:	82 ff       	sbrs	r24, 2
 942:	10 c0       	rjmp	.+32     	; 0x964 <fputc+0x3e>
 944:	4e 81       	ldd	r20, Y+6	; 0x06
 946:	5f 81       	ldd	r21, Y+7	; 0x07
 948:	2c 81       	ldd	r18, Y+4	; 0x04
 94a:	3d 81       	ldd	r19, Y+5	; 0x05
 94c:	42 17       	cp	r20, r18
 94e:	53 07       	cpc	r21, r19
 950:	7c f4       	brge	.+30     	; 0x970 <fputc+0x4a>
 952:	e8 81       	ld	r30, Y
 954:	f9 81       	ldd	r31, Y+1	; 0x01
 956:	9f 01       	movw	r18, r30
 958:	2f 5f       	subi	r18, 0xFF	; 255
 95a:	3f 4f       	sbci	r19, 0xFF	; 255
 95c:	39 83       	std	Y+1, r19	; 0x01
 95e:	28 83       	st	Y, r18
 960:	10 83       	st	Z, r17
 962:	06 c0       	rjmp	.+12     	; 0x970 <fputc+0x4a>
 964:	e8 85       	ldd	r30, Y+8	; 0x08
 966:	f9 85       	ldd	r31, Y+9	; 0x09
 968:	81 2f       	mov	r24, r17
 96a:	09 95       	icall
 96c:	89 2b       	or	r24, r25
 96e:	29 f7       	brne	.-54     	; 0x93a <fputc+0x14>
 970:	2e 81       	ldd	r18, Y+6	; 0x06
 972:	3f 81       	ldd	r19, Y+7	; 0x07
 974:	2f 5f       	subi	r18, 0xFF	; 255
 976:	3f 4f       	sbci	r19, 0xFF	; 255
 978:	3f 83       	std	Y+7, r19	; 0x07
 97a:	2e 83       	std	Y+6, r18	; 0x06
 97c:	81 2f       	mov	r24, r17
 97e:	90 2f       	mov	r25, r16
 980:	df 91       	pop	r29
 982:	cf 91       	pop	r28
 984:	1f 91       	pop	r17
 986:	0f 91       	pop	r16
 988:	08 95       	ret

0000098a <__ultoa_invert>:
 98a:	fa 01       	movw	r30, r20
 98c:	aa 27       	eor	r26, r26
 98e:	28 30       	cpi	r18, 0x08	; 8
 990:	51 f1       	breq	.+84     	; 0x9e6 <__ultoa_invert+0x5c>
 992:	20 31       	cpi	r18, 0x10	; 16
 994:	81 f1       	breq	.+96     	; 0x9f6 <__ultoa_invert+0x6c>
 996:	e8 94       	clt
 998:	6f 93       	push	r22
 99a:	6e 7f       	andi	r22, 0xFE	; 254
 99c:	6e 5f       	subi	r22, 0xFE	; 254
 99e:	7f 4f       	sbci	r23, 0xFF	; 255
 9a0:	8f 4f       	sbci	r24, 0xFF	; 255
 9a2:	9f 4f       	sbci	r25, 0xFF	; 255
 9a4:	af 4f       	sbci	r26, 0xFF	; 255
 9a6:	b1 e0       	ldi	r27, 0x01	; 1
 9a8:	3e d0       	rcall	.+124    	; 0xa26 <__ultoa_invert+0x9c>
 9aa:	b4 e0       	ldi	r27, 0x04	; 4
 9ac:	3c d0       	rcall	.+120    	; 0xa26 <__ultoa_invert+0x9c>
 9ae:	67 0f       	add	r22, r23
 9b0:	78 1f       	adc	r23, r24
 9b2:	89 1f       	adc	r24, r25
 9b4:	9a 1f       	adc	r25, r26
 9b6:	a1 1d       	adc	r26, r1
 9b8:	68 0f       	add	r22, r24
 9ba:	79 1f       	adc	r23, r25
 9bc:	8a 1f       	adc	r24, r26
 9be:	91 1d       	adc	r25, r1
 9c0:	a1 1d       	adc	r26, r1
 9c2:	6a 0f       	add	r22, r26
 9c4:	71 1d       	adc	r23, r1
 9c6:	81 1d       	adc	r24, r1
 9c8:	91 1d       	adc	r25, r1
 9ca:	a1 1d       	adc	r26, r1
 9cc:	20 d0       	rcall	.+64     	; 0xa0e <__ultoa_invert+0x84>
 9ce:	09 f4       	brne	.+2      	; 0x9d2 <__ultoa_invert+0x48>
 9d0:	68 94       	set
 9d2:	3f 91       	pop	r19
 9d4:	2a e0       	ldi	r18, 0x0A	; 10
 9d6:	26 9f       	mul	r18, r22
 9d8:	11 24       	eor	r1, r1
 9da:	30 19       	sub	r19, r0
 9dc:	30 5d       	subi	r19, 0xD0	; 208
 9de:	31 93       	st	Z+, r19
 9e0:	de f6       	brtc	.-74     	; 0x998 <__ultoa_invert+0xe>
 9e2:	cf 01       	movw	r24, r30
 9e4:	08 95       	ret
 9e6:	46 2f       	mov	r20, r22
 9e8:	47 70       	andi	r20, 0x07	; 7
 9ea:	40 5d       	subi	r20, 0xD0	; 208
 9ec:	41 93       	st	Z+, r20
 9ee:	b3 e0       	ldi	r27, 0x03	; 3
 9f0:	0f d0       	rcall	.+30     	; 0xa10 <__ultoa_invert+0x86>
 9f2:	c9 f7       	brne	.-14     	; 0x9e6 <__ultoa_invert+0x5c>
 9f4:	f6 cf       	rjmp	.-20     	; 0x9e2 <__ultoa_invert+0x58>
 9f6:	46 2f       	mov	r20, r22
 9f8:	4f 70       	andi	r20, 0x0F	; 15
 9fa:	40 5d       	subi	r20, 0xD0	; 208
 9fc:	4a 33       	cpi	r20, 0x3A	; 58
 9fe:	18 f0       	brcs	.+6      	; 0xa06 <__ultoa_invert+0x7c>
 a00:	49 5d       	subi	r20, 0xD9	; 217
 a02:	31 fd       	sbrc	r19, 1
 a04:	40 52       	subi	r20, 0x20	; 32
 a06:	41 93       	st	Z+, r20
 a08:	02 d0       	rcall	.+4      	; 0xa0e <__ultoa_invert+0x84>
 a0a:	a9 f7       	brne	.-22     	; 0x9f6 <__ultoa_invert+0x6c>
 a0c:	ea cf       	rjmp	.-44     	; 0x9e2 <__ultoa_invert+0x58>
 a0e:	b4 e0       	ldi	r27, 0x04	; 4
 a10:	a6 95       	lsr	r26
 a12:	97 95       	ror	r25
 a14:	87 95       	ror	r24
 a16:	77 95       	ror	r23
 a18:	67 95       	ror	r22
 a1a:	ba 95       	dec	r27
 a1c:	c9 f7       	brne	.-14     	; 0xa10 <__ultoa_invert+0x86>
 a1e:	00 97       	sbiw	r24, 0x00	; 0
 a20:	61 05       	cpc	r22, r1
 a22:	71 05       	cpc	r23, r1
 a24:	08 95       	ret
 a26:	9b 01       	movw	r18, r22
 a28:	ac 01       	movw	r20, r24
 a2a:	0a 2e       	mov	r0, r26
 a2c:	06 94       	lsr	r0
 a2e:	57 95       	ror	r21
 a30:	47 95       	ror	r20
 a32:	37 95       	ror	r19
 a34:	27 95       	ror	r18
 a36:	ba 95       	dec	r27
 a38:	c9 f7       	brne	.-14     	; 0xa2c <__ultoa_invert+0xa2>
 a3a:	62 0f       	add	r22, r18
 a3c:	73 1f       	adc	r23, r19
 a3e:	84 1f       	adc	r24, r20
 a40:	95 1f       	adc	r25, r21
 a42:	a0 1d       	adc	r26, r0
 a44:	08 95       	ret

00000a46 <__prologue_saves__>:
 a46:	2f 92       	push	r2
 a48:	3f 92       	push	r3
 a4a:	4f 92       	push	r4
 a4c:	5f 92       	push	r5
 a4e:	6f 92       	push	r6
 a50:	7f 92       	push	r7
 a52:	8f 92       	push	r8
 a54:	9f 92       	push	r9
 a56:	af 92       	push	r10
 a58:	bf 92       	push	r11
 a5a:	cf 92       	push	r12
 a5c:	df 92       	push	r13
 a5e:	ef 92       	push	r14
 a60:	ff 92       	push	r15
 a62:	0f 93       	push	r16
 a64:	1f 93       	push	r17
 a66:	cf 93       	push	r28
 a68:	df 93       	push	r29
 a6a:	cd b7       	in	r28, 0x3d	; 61
 a6c:	de b7       	in	r29, 0x3e	; 62
 a6e:	ca 1b       	sub	r28, r26
 a70:	db 0b       	sbc	r29, r27
 a72:	0f b6       	in	r0, 0x3f	; 63
 a74:	f8 94       	cli
 a76:	de bf       	out	0x3e, r29	; 62
 a78:	0f be       	out	0x3f, r0	; 63
 a7a:	cd bf       	out	0x3d, r28	; 61
 a7c:	09 94       	ijmp

00000a7e <__epilogue_restores__>:
 a7e:	2a 88       	ldd	r2, Y+18	; 0x12
 a80:	39 88       	ldd	r3, Y+17	; 0x11
 a82:	48 88       	ldd	r4, Y+16	; 0x10
 a84:	5f 84       	ldd	r5, Y+15	; 0x0f
 a86:	6e 84       	ldd	r6, Y+14	; 0x0e
 a88:	7d 84       	ldd	r7, Y+13	; 0x0d
 a8a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a8c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a8e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a90:	b9 84       	ldd	r11, Y+9	; 0x09
 a92:	c8 84       	ldd	r12, Y+8	; 0x08
 a94:	df 80       	ldd	r13, Y+7	; 0x07
 a96:	ee 80       	ldd	r14, Y+6	; 0x06
 a98:	fd 80       	ldd	r15, Y+5	; 0x05
 a9a:	0c 81       	ldd	r16, Y+4	; 0x04
 a9c:	1b 81       	ldd	r17, Y+3	; 0x03
 a9e:	aa 81       	ldd	r26, Y+2	; 0x02
 aa0:	b9 81       	ldd	r27, Y+1	; 0x01
 aa2:	ce 0f       	add	r28, r30
 aa4:	d1 1d       	adc	r29, r1
 aa6:	0f b6       	in	r0, 0x3f	; 63
 aa8:	f8 94       	cli
 aaa:	de bf       	out	0x3e, r29	; 62
 aac:	0f be       	out	0x3f, r0	; 63
 aae:	cd bf       	out	0x3d, r28	; 61
 ab0:	ed 01       	movw	r28, r26
 ab2:	08 95       	ret

00000ab4 <_exit>:
 ab4:	f8 94       	cli

00000ab6 <__stop_program>:
 ab6:	ff cf       	rjmp	.-2      	; 0xab6 <__stop_program>


Group52.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000138  00800100  00001444  000014d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001444  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800238  00800238  00001610  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  0000166c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000217d  00000000  00000000  0000186c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ae9  00000000  00000000  000039e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000acc  00000000  00000000  000044d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004b0  00000000  00000000  00004fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000659  00000000  00000000  00005450  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000111e  00000000  00000000  00005aa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d8  00000000  00000000  00006bc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e4 e4       	ldi	r30, 0x44	; 68
     200:	f4 e1       	ldi	r31, 0x14	; 20
     202:	02 c0       	rjmp	.+4      	; 0x208 <__do_copy_data+0x10>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	a8 33       	cpi	r26, 0x38	; 56
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__do_copy_data+0xc>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	a8 e3       	ldi	r26, 0x38	; 56
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	a2 34       	cpi	r26, 0x42	; 66
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <main>
     222:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <adc_read>:
#include <util/delay.h>
#include "adc.h"

uint8_t adc_read(DeviceType device){
	volatile char *adc = (char *) 0x1400;
	switch (device) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	69 f0       	breq	.+26     	; 0x248 <adc_read+0x1e>
     22e:	18 f4       	brcc	.+6      	; 0x236 <adc_read+0xc>
     230:	81 30       	cpi	r24, 0x01	; 1
     232:	31 f0       	breq	.+12     	; 0x240 <adc_read+0x16>
     234:	14 c0       	rjmp	.+40     	; 0x25e <adc_read+0x34>
     236:	83 30       	cpi	r24, 0x03	; 3
     238:	59 f0       	breq	.+22     	; 0x250 <adc_read+0x26>
     23a:	84 30       	cpi	r24, 0x04	; 4
     23c:	69 f0       	breq	.+26     	; 0x258 <adc_read+0x2e>
     23e:	0f c0       	rjmp	.+30     	; 0x25e <adc_read+0x34>
		case JOYAXIS1:
		/* Select CH1 */
		adc[0] = 0b00000100;
     240:	84 e0       	ldi	r24, 0x04	; 4
     242:	80 93 00 14 	sts	0x1400, r24
		break;
     246:	0b c0       	rjmp	.+22     	; 0x25e <adc_read+0x34>
		
		case JOYAXIS2:
		/* Select CH2 */
		adc[0] = 0b00000101;
     248:	85 e0       	ldi	r24, 0x05	; 5
     24a:	80 93 00 14 	sts	0x1400, r24
		break;
     24e:	07 c0       	rjmp	.+14     	; 0x25e <adc_read+0x34>
		
		case LSLIDER:
		/* Select CH3 */
		adc[0] = 0b00000110;
     250:	86 e0       	ldi	r24, 0x06	; 6
     252:	80 93 00 14 	sts	0x1400, r24
		break;
     256:	03 c0       	rjmp	.+6      	; 0x25e <adc_read+0x34>
		
		case RSLIDER:
		/* Select CH1 */
		adc[0] = 0b00000111;
     258:	87 e0       	ldi	r24, 0x07	; 7
     25a:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25e:	2c ec       	ldi	r18, 0xCC	; 204
     260:	8c e0       	ldi	r24, 0x0C	; 12
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	21 50       	subi	r18, 0x01	; 1
     266:	80 40       	sbci	r24, 0x00	; 0
     268:	90 40       	sbci	r25, 0x00	; 0
     26a:	e1 f7       	brne	.-8      	; 0x264 <adc_read+0x3a>
     26c:	00 c0       	rjmp	.+0      	; 0x26e <adc_read+0x44>
		break;
		default:
		break;
	}
	_delay_ms(70);
	return adc[0];
     26e:	80 91 00 14 	lds	r24, 0x1400
     272:	08 95       	ret

00000274 <JOYSTICK_init>:
#include "math.h"

void JOYSTICK_init(void)
{
	/* Set PB2 as input for button*/
	DDRB &= ~(1 << PB2);
     274:	ba 98       	cbi	0x17, 2	; 23
	PORTB &= (1 << PB2);
     276:	88 b3       	in	r24, 0x18	; 24
     278:	84 70       	andi	r24, 0x04	; 4
     27a:	88 bb       	out	0x18, r24	; 24
     27c:	08 95       	ret

0000027e <toPositionPercent>:
	return NEUTRAL;
}

int16_t toPositionPercent(int16_t value)
{
	value -= 127;
     27e:	8f 57       	subi	r24, 0x7F	; 127
     280:	91 09       	sbc	r25, r1
	int16_t percentValue = round((float)value / 127 * 100);
     282:	bc 01       	movw	r22, r24
     284:	88 27       	eor	r24, r24
     286:	77 fd       	sbrc	r23, 7
     288:	80 95       	com	r24
     28a:	98 2f       	mov	r25, r24
     28c:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	4e ef       	ldi	r20, 0xFE	; 254
     296:	52 e4       	ldi	r21, 0x42	; 66
     298:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__divsf3>
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	48 ec       	ldi	r20, 0xC8	; 200
     2a2:	52 e4       	ldi	r21, 0x42	; 66
     2a4:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
     2a8:	0e 94 7f 05 	call	0xafe	; 0xafe <round>
     2ac:	0e 94 5d 04 	call	0x8ba	; 0x8ba <__fixsfsi>
	return percentValue;
}
     2b0:	cb 01       	movw	r24, r22
     2b2:	08 95       	ret

000002b4 <JOYSTICK_get_position>:
{
	
}

struct positions JOYSTICK_get_position(void)
{
     2b4:	ff 92       	push	r15
     2b6:	0f 93       	push	r16
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	28 97       	sbiw	r28, 0x08	; 8
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
	int16_t yValue = (int16_t) adc_read(JOYAXIS1);
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
     2d4:	f8 2e       	mov	r15, r24
	int16_t xValue = (int16_t) adc_read(JOYAXIS2);
     2d6:	82 e0       	ldi	r24, 0x02	; 2
     2d8:	0e 94 15 01 	call	0x22a	; 0x22a <adc_read>
	
	int16_t xPosition = toPositionPercent(xValue);
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
     2e2:	18 2f       	mov	r17, r24
     2e4:	09 2f       	mov	r16, r25
	int16_t yPosition = toPositionPercent(yValue);
     2e6:	8f 2d       	mov	r24, r15
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 3f 01 	call	0x27e	; 0x27e <toPositionPercent>
	
	struct positions pos;
	pos.x = xPosition;
	pos.y = yPosition;
	
	return pos;
     2ee:	19 83       	std	Y+1, r17	; 0x01
     2f0:	0a 83       	std	Y+2, r16	; 0x02
     2f2:	8b 83       	std	Y+3, r24	; 0x03
     2f4:	9c 83       	std	Y+4, r25	; 0x04
     2f6:	21 2f       	mov	r18, r17
     2f8:	30 2f       	mov	r19, r16
     2fa:	48 2f       	mov	r20, r24
     2fc:	59 2f       	mov	r21, r25
     2fe:	6d 81       	ldd	r22, Y+5	; 0x05
     300:	7e 81       	ldd	r23, Y+6	; 0x06
}
     302:	8f 81       	ldd	r24, Y+7	; 0x07
     304:	98 85       	ldd	r25, Y+8	; 0x08
     306:	28 96       	adiw	r28, 0x08	; 8
     308:	0f b6       	in	r0, 0x3f	; 63
     30a:	f8 94       	cli
     30c:	de bf       	out	0x3e, r29	; 62
     30e:	0f be       	out	0x3f, r0	; 63
     310:	cd bf       	out	0x3d, r28	; 61
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	ff 90       	pop	r15
     31c:	08 95       	ret

0000031e <JOYSTICK_get_direction>:


DirectionType JOYSTICK_get_direction(void)
{
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	28 97       	sbiw	r28, 0x08	; 8
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	f8 94       	cli
     32c:	de bf       	out	0x3e, r29	; 62
     32e:	0f be       	out	0x3f, r0	; 63
     330:	cd bf       	out	0x3d, r28	; 61
	struct positions pos = JOYSTICK_get_position();
     332:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <JOYSTICK_get_position>
     336:	29 83       	std	Y+1, r18	; 0x01
     338:	3a 83       	std	Y+2, r19	; 0x02
     33a:	4b 83       	std	Y+3, r20	; 0x03
     33c:	5c 83       	std	Y+4, r21	; 0x04
     33e:	29 81       	ldd	r18, Y+1	; 0x01
     340:	3a 81       	ldd	r19, Y+2	; 0x02
     342:	8b 81       	ldd	r24, Y+3	; 0x03
     344:	9c 81       	ldd	r25, Y+4	; 0x04
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
     346:	ac 01       	movw	r20, r24
     348:	48 5e       	subi	r20, 0xE8	; 232
     34a:	5f 4f       	sbci	r21, 0xFF	; 255
     34c:	41 33       	cpi	r20, 0x31	; 49
     34e:	51 05       	cpc	r21, r1
     350:	48 f4       	brcc	.+18     	; 0x364 <JOYSTICK_get_direction+0x46>
		
		if (pos.x < -THRESHOLD) {
     352:	27 3e       	cpi	r18, 0xE7	; 231
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	38 07       	cpc	r19, r24
     358:	94 f0       	brlt	.+36     	; 0x37e <JOYSTICK_get_direction+0x60>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
     35a:	2a 31       	cpi	r18, 0x1A	; 26
     35c:	31 05       	cpc	r19, r1
     35e:	8c f4       	brge	.+34     	; 0x382 <JOYSTICK_get_direction+0x64>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	16 c0       	rjmp	.+44     	; 0x390 <JOYSTICK_get_direction+0x72>
			return LEFT;
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
     364:	28 5e       	subi	r18, 0xE8	; 232
     366:	3f 4f       	sbci	r19, 0xFF	; 255
     368:	21 33       	cpi	r18, 0x31	; 49
     36a:	31 05       	cpc	r19, r1
     36c:	60 f4       	brcc	.+24     	; 0x386 <JOYSTICK_get_direction+0x68>
		
		if (pos.y < -THRESHOLD) {
     36e:	87 3e       	cpi	r24, 0xE7	; 231
     370:	2f ef       	ldi	r18, 0xFF	; 255
     372:	92 07       	cpc	r25, r18
     374:	54 f0       	brlt	.+20     	; 0x38a <JOYSTICK_get_direction+0x6c>
			return DOWN;
		} else if (pos.y > THRESHOLD) {
     376:	4a 97       	sbiw	r24, 0x1a	; 26
     378:	54 f4       	brge	.+20     	; 0x38e <JOYSTICK_get_direction+0x70>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	09 c0       	rjmp	.+18     	; 0x390 <JOYSTICK_get_direction+0x72>
	int8_t THRESHOLD = 25;
	
	if (pos.y < THRESHOLD && pos.y > -THRESHOLD) {
		
		if (pos.x < -THRESHOLD) {
			return LEFT;
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	07 c0       	rjmp	.+14     	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.x > THRESHOLD) {
			return RIGHT;
     382:	82 e0       	ldi	r24, 0x02	; 2
     384:	05 c0       	rjmp	.+10     	; 0x390 <JOYSTICK_get_direction+0x72>
			return UP;
		}
		
	}
	
	return NEUTRAL;
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	03 c0       	rjmp	.+6      	; 0x390 <JOYSTICK_get_direction+0x72>
		}
		
	} else if (pos.x < THRESHOLD && pos.x > -THRESHOLD) {
		
		if (pos.y < -THRESHOLD) {
			return DOWN;
     38a:	84 e0       	ldi	r24, 0x04	; 4
     38c:	01 c0       	rjmp	.+2      	; 0x390 <JOYSTICK_get_direction+0x72>
		} else if (pos.y > THRESHOLD) {
			return UP;
     38e:	83 e0       	ldi	r24, 0x03	; 3
		}
		
	}
	
	return NEUTRAL;
}
     390:	28 96       	adiw	r28, 0x08	; 8
     392:	0f b6       	in	r0, 0x3f	; 63
     394:	f8 94       	cli
     396:	de bf       	out	0x3e, r29	; 62
     398:	0f be       	out	0x3f, r0	; 63
     39a:	cd bf       	out	0x3d, r28	; 61
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <JOYSTICK_read_button>:
	return pos;
}

uint8_t JOYSTICK_read_button(void)
{
	return (PINB & (1 << PB2)) == 0;
     3a2:	86 b3       	in	r24, 0x16	; 22
     3a4:	82 fb       	bst	r24, 2
     3a6:	88 27       	eor	r24, r24
     3a8:	80 f9       	bld	r24, 0
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	89 27       	eor	r24, r25
     3ae:	08 95       	ret

000003b0 <main>:


int main(void)
{
	/* Needs to be set when using external memory */
	MCUCR |= (1 << SRE);
     3b0:	85 b7       	in	r24, 0x35	; 53
     3b2:	80 68       	ori	r24, 0x80	; 128
     3b4:	85 bf       	out	0x35, r24	; 53

	fdevopen(USART_transmit, USART_receive);
     3b6:	61 ef       	ldi	r22, 0xF1	; 241
     3b8:	73 e0       	ldi	r23, 0x03	; 3
     3ba:	8d ee       	ldi	r24, 0xED	; 237
     3bc:	93 e0       	ldi	r25, 0x03	; 3
     3be:	0e 94 ef 06 	call	0xdde	; 0xdde <fdevopen>
	USART_init(MYUBBR);
     3c2:	8f e1       	ldi	r24, 0x1F	; 31
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	0e 94 e6 03 	call	0x7cc	; 0x7cc <USART_init>
	OLED_init();
     3ca:	0e 94 c4 02 	call	0x588	; 0x588 <OLED_init>
	JOYSTICK_init();
     3ce:	0e 94 3a 01 	call	0x274	; 0x274 <JOYSTICK_init>
	SPI_master_init();
     3d2:	0e 94 dd 03 	call	0x7ba	; 0x7ba <SPI_master_init>
	MCP_init();
     3d6:	0e 94 89 02 	call	0x512	; 0x512 <MCP_init>
	
	OLED_reset();
     3da:	0e 94 b6 02 	call	0x56c	; 0x56c <OLED_reset>
	OLED_pos(2,20);
     3de:	64 e1       	ldi	r22, 0x14	; 20
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	
	menuNode *menu = OLED_generate_menu();
     3e6:	0e 94 59 03 	call	0x6b2	; 0x6b2 <OLED_generate_menu>
	OLED_print_menu(menu);
     3ea:	0e 94 9d 03 	call	0x73a	; 0x73a <OLED_print_menu>
	uint8_t currentRow = 1;
	uint8_t lastRow = 0;
	DirectionType joydir = NEUTRAL;
	uint8_t buttonPressed = 0;
	
	MCP_write(MCP_CANCTRL, 0b01000001);
     3ee:	61 e4       	ldi	r22, 0x41	; 65
     3f0:	8f e0       	ldi	r24, 0x0F	; 15
     3f2:	0e 94 46 02 	call	0x48c	; 0x48c <MCP_write>
	char response = MCP_read(MCP_READ_STATUS);
     3f6:	80 ea       	ldi	r24, 0xA0	; 160
     3f8:	0e 94 33 02 	call	0x466	; 0x466 <MCP_read>
	printf("CANCTRL: %d\n", response);
     3fc:	1f 92       	push	r1
     3fe:	8f 93       	push	r24
     400:	86 e0       	ldi	r24, 0x06	; 6
     402:	91 e0       	ldi	r25, 0x01	; 1
     404:	9f 93       	push	r25
     406:	8f 93       	push	r24
     408:	0e 94 3a 07 	call	0xe74	; 0xe74 <printf>
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
	OLED_pos(2,20);
	
	menuNode *menu = OLED_generate_menu();
	OLED_print_menu(menu);
	
	uint8_t currentRow = 1;
     414:	c1 e0       	ldi	r28, 0x01	; 1
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     416:	01 e0       	ldi	r16, 0x01	; 1
	{	
		joydir = JOYSTICK_get_direction();
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     418:	17 e0       	ldi	r17, 0x07	; 7
	char response = MCP_read(MCP_READ_STATUS);
	printf("CANCTRL: %d\n", response);
	
	while(1)
	{	
		joydir = JOYSTICK_get_direction();
     41a:	0e 94 8f 01 	call	0x31e	; 0x31e <JOYSTICK_get_direction>
		lastRow = currentRow;
		if (joydir == UP) {
     41e:	83 30       	cpi	r24, 0x03	; 3
     420:	29 f4       	brne	.+10     	; 0x42c <main+0x7c>
			if (currentRow == 1) {
     422:	c1 30       	cpi	r28, 0x01	; 1
     424:	51 f0       	breq	.+20     	; 0x43a <main+0x8a>
				currentRow = 7;
			} else {
				currentRow -= 1;
     426:	df ef       	ldi	r29, 0xFF	; 255
     428:	dc 0f       	add	r29, r28
     42a:	0c c0       	rjmp	.+24     	; 0x444 <main+0x94>
			}
			
		} else if (joydir == DOWN) {
     42c:	84 30       	cpi	r24, 0x04	; 4
     42e:	39 f4       	brne	.+14     	; 0x43e <main+0x8e>
			if (currentRow == 7) {
     430:	c7 30       	cpi	r28, 0x07	; 7
     432:	39 f0       	breq	.+14     	; 0x442 <main+0x92>
				currentRow = 1;
			} else {
				currentRow += 1;
     434:	d1 e0       	ldi	r29, 0x01	; 1
     436:	dc 0f       	add	r29, r28
     438:	05 c0       	rjmp	.+10     	; 0x444 <main+0x94>
	{	
		joydir = JOYSTICK_get_direction();
		lastRow = currentRow;
		if (joydir == UP) {
			if (currentRow == 1) {
				currentRow = 7;
     43a:	d1 2f       	mov	r29, r17
     43c:	03 c0       	rjmp	.+6      	; 0x444 <main+0x94>
     43e:	dc 2f       	mov	r29, r28
     440:	01 c0       	rjmp	.+2      	; 0x444 <main+0x94>
				currentRow -= 1;
			}
			
		} else if (joydir == DOWN) {
			if (currentRow == 7) {
				currentRow = 1;
     442:	d0 2f       	mov	r29, r16
			} else {
				currentRow += 1;
			}
		}
		
		OLED_move_arrow(currentRow, 20, lastRow, 20);
     444:	24 e1       	ldi	r18, 0x14	; 20
     446:	4c 2f       	mov	r20, r28
     448:	64 e1       	ldi	r22, 0x14	; 20
     44a:	8d 2f       	mov	r24, r29
     44c:	0e 94 34 03 	call	0x668	; 0x668 <OLED_move_arrow>
		buttonPressed = JOYSTICK_read_button();
     450:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <JOYSTICK_read_button>
     454:	cd 2f       	mov	r28, r29
     456:	e1 cf       	rjmp	.-62     	; 0x41a <main+0x6a>

00000458 <MCP_reset>:
	MCP_set_mode(MODE_LOOPBACK);
}

void MCP_reset(void)
{
	PORTB &= ~(1 << PB4);
     458:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(MCP_RESET);
     45a:	80 ec       	ldi	r24, 0xC0	; 192
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     462:	c4 9a       	sbi	0x18, 4	; 24
     464:	08 95       	ret

00000466 <MCP_read>:
}

char MCP_read(char addr)
{
     466:	cf 93       	push	r28
     468:	c8 2f       	mov	r28, r24
	PORTB &= ~(1 << PB4);
     46a:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(MCP_READ);
     46c:	83 e0       	ldi	r24, 0x03	; 3
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(addr);
     474:	8c 2f       	mov	r24, r28
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(0x00);
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	char data = SPDR;
     484:	8f b1       	in	r24, 0x0f	; 15
	PORTB |= (1 << PB4);
     486:	c4 9a       	sbi	0x18, 4	; 24
	return data;
}
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <MCP_write>:

void MCP_write(char addr, char data)
{
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	d8 2f       	mov	r29, r24
     492:	c6 2f       	mov	r28, r22
	PORTB &= ~(1 << PB4);
     494:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(MCP_WRITE);
     496:	82 e0       	ldi	r24, 0x02	; 2
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(addr);
     49e:	8d 2f       	mov	r24, r29
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(data);
     4a6:	8c 2f       	mov	r24, r28
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     4ae:	c4 9a       	sbi	0x18, 4	; 24
}
     4b0:	df 91       	pop	r29
     4b2:	cf 91       	pop	r28
     4b4:	08 95       	ret

000004b6 <MCP_modify_bit>:
	MCP_modify_bit(MCP_CANCTRL, mask, data);
}


void MCP_modify_bit(char addr, char mask, char data)
{
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	18 2f       	mov	r17, r24
     4be:	d6 2f       	mov	r29, r22
     4c0:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << PB4);
     4c2:	c4 98       	cbi	0x18, 4	; 24
	SPI_master_transmit(MCP_BITMOD);
     4c4:	85 e0       	ldi	r24, 0x05	; 5
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(addr);
     4cc:	81 2f       	mov	r24, r17
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(mask);
     4d4:	8d 2f       	mov	r24, r29
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	SPI_master_transmit(data);
     4dc:	8c 2f       	mov	r24, r28
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <SPI_master_transmit>
	PORTB |= (1 << PB4);
     4e4:	c4 9a       	sbi	0x18, 4	; 24
}
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	1f 91       	pop	r17
     4ec:	08 95       	ret

000004ee <MCP_set_mode>:

void MCP_set_mode(uint8_t mode)
{
	char mask = 0b11100000;
	char data = 0b00000000;
	switch (mode) {
     4ee:	80 34       	cpi	r24, 0x40	; 64
     4f0:	41 f0       	breq	.+16     	; 0x502 <__stack+0x3>
     4f2:	80 36       	cpi	r24, 0x60	; 96
     4f4:	21 f0       	breq	.+8      	; 0x4fe <MCP_set_mode+0x10>
     4f6:	80 32       	cpi	r24, 0x20	; 32
     4f8:	31 f0       	breq	.+12     	; 0x506 <__stack+0x7>
}

void MCP_set_mode(uint8_t mode)
{
	char mask = 0b11100000;
	char data = 0b00000000;
     4fa:	40 e0       	ldi	r20, 0x00	; 0
     4fc:	05 c0       	rjmp	.+10     	; 0x508 <__stack+0x9>
			break;
		case MODE_SLEEP:
			data = 0b00100000;
			break;
		case MODE_LISTENONLY:
			data = 0b01100000;
     4fe:	40 e6       	ldi	r20, 0x60	; 96
			break;
     500:	03 c0       	rjmp	.+6      	; 0x508 <__stack+0x9>
		case MODE_LOOPBACK:
			data = 0b01000000;
     502:	40 e4       	ldi	r20, 0x40	; 64
			break;
     504:	01 c0       	rjmp	.+2      	; 0x508 <__stack+0x9>
		case MODE_NORMAL:
			break;
		case MODE_CONFIG:
			break;
		case MODE_SLEEP:
			data = 0b00100000;
     506:	40 e2       	ldi	r20, 0x20	; 32
			data = 0b01000000;
			break;
		default:
			break;
	}
	MCP_modify_bit(MCP_CANCTRL, mask, data);
     508:	60 ee       	ldi	r22, 0xE0	; 224
     50a:	8f e0       	ldi	r24, 0x0F	; 15
     50c:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <MCP_modify_bit>
     510:	08 95       	ret

00000512 <MCP_init>:
#include "MCP2515.h"
#include "mcp.h"

void MCP_init(void)
{
	MCP_reset();
     512:	0e 94 2c 02 	call	0x458	; 0x458 <MCP_reset>
	MCP_set_mode(MODE_LOOPBACK);
     516:	80 e4       	ldi	r24, 0x40	; 64
     518:	0e 94 77 02 	call	0x4ee	; 0x4ee <MCP_set_mode>
     51c:	08 95       	ret

0000051e <OLED_goto_line>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     51e:	e0 e0       	ldi	r30, 0x00	; 0
     520:	f0 e1       	ldi	r31, 0x10	; 16
     522:	92 e2       	ldi	r25, 0x22	; 34
     524:	90 83       	st	Z, r25
     526:	80 83       	st	Z, r24
     528:	87 e0       	ldi	r24, 0x07	; 7
     52a:	80 83       	st	Z, r24
     52c:	08 95       	ret

0000052e <OLED_clear_line>:
	OLED_write_c(0x07);
}

void OLED_clear_line(uint8_t line)
{
	OLED_goto_line(line);
     52e:	0e 94 8f 02 	call	0x51e	; 0x51e <OLED_goto_line>
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     532:	e0 e0       	ldi	r30, 0x00	; 0
     534:	f0 e1       	ldi	r31, 0x10	; 16
     536:	81 e2       	ldi	r24, 0x21	; 33
     538:	80 83       	st	Z, r24
     53a:	10 82       	st	Z, r1
     53c:	8f e7       	ldi	r24, 0x7F	; 127
     53e:	80 83       	st	Z, r24
     540:	80 e8       	ldi	r24, 0x80	; 128
     542:	90 e0       	ldi	r25, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     544:	e0 e0       	ldi	r30, 0x00	; 0
     546:	f2 e1       	ldi	r31, 0x12	; 18
     548:	10 82       	st	Z, r1
     54a:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x21);
	OLED_write_c(0x00);
	OLED_write_c(0x7F);

	/* Write zeros to line */
	for (int i = 0; i < 128; i++) {
     54c:	00 97       	sbiw	r24, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <OLED_clear_line+0x1a>
		OLED_write_d(0x00);
	}
}
     550:	08 95       	ret

00000552 <OLED_pos>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     552:	e0 e0       	ldi	r30, 0x00	; 0
     554:	f0 e1       	ldi	r31, 0x10	; 16
     556:	92 e2       	ldi	r25, 0x22	; 34
     558:	90 83       	st	Z, r25
     55a:	80 83       	st	Z, r24
     55c:	87 e0       	ldi	r24, 0x07	; 7
     55e:	80 83       	st	Z, r24
     560:	81 e2       	ldi	r24, 0x21	; 33
     562:	80 83       	st	Z, r24
     564:	60 83       	st	Z, r22
     566:	8f e7       	ldi	r24, 0x7F	; 127
     568:	80 83       	st	Z, r24
     56a:	08 95       	ret

0000056c <OLED_reset>:
	OLED_write_c(column);
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
     56c:	cf 93       	push	r28
	for (uint8_t i = 0; i < 8; i++) {
     56e:	c0 e0       	ldi	r28, 0x00	; 0
		OLED_clear_line(i);
     570:	8c 2f       	mov	r24, r28
     572:	0e 94 97 02 	call	0x52e	; 0x52e <OLED_clear_line>
	OLED_write_c(0x7F);
}

void OLED_reset(void)
{
	for (uint8_t i = 0; i < 8; i++) {
     576:	cf 5f       	subi	r28, 0xFF	; 255
     578:	c8 30       	cpi	r28, 0x08	; 8
     57a:	d1 f7       	brne	.-12     	; 0x570 <OLED_reset+0x4>
		OLED_clear_line(i);
	}
	OLED_pos(0,0);
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>

	// Redraw from SRAM?
}
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <OLED_init>:
}

void OLED_write_c(char chr)
{
	volatile char *oled = (char *) 0x1000;
	oled[0] = chr;
     588:	e0 e0       	ldi	r30, 0x00	; 0
     58a:	f0 e1       	ldi	r31, 0x10	; 16
     58c:	8e ea       	ldi	r24, 0xAE	; 174
     58e:	80 83       	st	Z, r24
     590:	81 ea       	ldi	r24, 0xA1	; 161
     592:	80 83       	st	Z, r24
     594:	8a ed       	ldi	r24, 0xDA	; 218
     596:	80 83       	st	Z, r24
     598:	82 e1       	ldi	r24, 0x12	; 18
     59a:	80 83       	st	Z, r24
     59c:	88 ec       	ldi	r24, 0xC8	; 200
     59e:	80 83       	st	Z, r24
     5a0:	88 ea       	ldi	r24, 0xA8	; 168
     5a2:	80 83       	st	Z, r24
     5a4:	8f e3       	ldi	r24, 0x3F	; 63
     5a6:	80 83       	st	Z, r24
     5a8:	85 ed       	ldi	r24, 0xD5	; 213
     5aa:	80 83       	st	Z, r24
     5ac:	80 e8       	ldi	r24, 0x80	; 128
     5ae:	80 83       	st	Z, r24
     5b0:	81 e8       	ldi	r24, 0x81	; 129
     5b2:	80 83       	st	Z, r24
     5b4:	80 e5       	ldi	r24, 0x50	; 80
     5b6:	80 83       	st	Z, r24
     5b8:	89 ed       	ldi	r24, 0xD9	; 217
     5ba:	80 83       	st	Z, r24
     5bc:	81 e2       	ldi	r24, 0x21	; 33
     5be:	80 83       	st	Z, r24
     5c0:	80 e2       	ldi	r24, 0x20	; 32
     5c2:	80 83       	st	Z, r24
     5c4:	10 82       	st	Z, r1
     5c6:	8b ed       	ldi	r24, 0xDB	; 219
     5c8:	80 83       	st	Z, r24
     5ca:	80 e3       	ldi	r24, 0x30	; 48
     5cc:	80 83       	st	Z, r24
     5ce:	8d ea       	ldi	r24, 0xAD	; 173
     5d0:	80 83       	st	Z, r24
     5d2:	10 82       	st	Z, r1
     5d4:	84 ea       	ldi	r24, 0xA4	; 164
     5d6:	80 83       	st	Z, r24
     5d8:	86 ea       	ldi	r24, 0xA6	; 166
     5da:	80 83       	st	Z, r24
     5dc:	8f ea       	ldi	r24, 0xAF	; 175
     5de:	80 83       	st	Z, r24
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	92 e0       	ldi	r25, 0x02	; 2
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     5e4:	e0 e0       	ldi	r30, 0x00	; 0
     5e6:	f2 e1       	ldi	r31, 0x12	; 18
     5e8:	2f ef       	ldi	r18, 0xFF	; 255
     5ea:	20 83       	st	Z, r18
     5ec:	01 97       	sbiw	r24, 0x01	; 1
	OLED_write_c(0x00);
	OLED_write_c(0xa4); //out follows RAM content
	OLED_write_c(0xa6); //set normal display
	OLED_write_c(0xaf); // display on
	
	for (int i = 0; i < 512; i++)
     5ee:	00 97       	sbiw	r24, 0x00	; 0
     5f0:	e1 f7       	brne	.-8      	; 0x5ea <OLED_init+0x62>
	{
		OLED_write_d(0xFF);
	}
	
	OLED_reset();
     5f2:	0e 94 b6 02 	call	0x56c	; 0x56c <OLED_reset>
     5f6:	08 95       	ret

000005f8 <OLED_print_string>:

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     5f8:	cf 93       	push	r28
     5fa:	df 93       	push	r29
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     5fc:	fc 01       	movw	r30, r24
     5fe:	20 81       	ld	r18, Z
     600:	22 23       	and	r18, r18
     602:	11 f1       	breq	.+68     	; 0x648 <OLED_print_string+0x50>
     604:	dc 01       	movw	r26, r24

void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
     606:	40 e0       	ldi	r20, 0x00	; 0

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	50 e0       	ldi	r21, 0x00	; 0
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     60c:	c0 e0       	ldi	r28, 0x00	; 0
     60e:	d2 e1       	ldi	r29, 0x12	; 18
     610:	18 c0       	rjmp	.+48     	; 0x642 <OLED_print_string+0x4a>
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
			c = pgm_read_byte_near(font[str[i]-32] + j);
     612:	ec 91       	ld	r30, X
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	ee 0f       	add	r30, r30
     618:	ff 1f       	adc	r31, r31
     61a:	ee 0f       	add	r30, r30
     61c:	ff 1f       	adc	r31, r31
     61e:	e0 51       	subi	r30, 0x10	; 16
     620:	f0 40       	sbci	r31, 0x00	; 0
     622:	e2 0f       	add	r30, r18
     624:	f3 1f       	adc	r31, r19
     626:	e4 91       	lpm	r30, Z
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     628:	e8 83       	st	Y, r30
     62a:	2f 5f       	subi	r18, 0xFF	; 255
     62c:	3f 4f       	sbci	r19, 0xFF	; 255
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
		for (uint8_t j = 0; j < font_width; j++) {
     62e:	24 30       	cpi	r18, 0x04	; 4
     630:	31 05       	cpc	r19, r1
     632:	79 f7       	brne	.-34     	; 0x612 <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
     634:	4f 5f       	subi	r20, 0xFF	; 255
void OLED_print_string(char* str)
{
	uint8_t c;
	uint8_t font_width = 4; // Use sizeof array here
	uint8_t i = 0;
	while (str[i] != '\0') {
     636:	dc 01       	movw	r26, r24
     638:	a4 0f       	add	r26, r20
     63a:	b1 1d       	adc	r27, r1
     63c:	2c 91       	ld	r18, X
     63e:	22 23       	and	r18, r18
     640:	19 f0       	breq	.+6      	; 0x648 <OLED_print_string+0x50>

	// Redraw from SRAM?
}

void OLED_print_string(char* str)
{
     642:	26 2f       	mov	r18, r22
     644:	35 2f       	mov	r19, r21
     646:	e5 cf       	rjmp	.-54     	; 0x612 <OLED_print_string+0x1a>
			c = pgm_read_byte_near(font[str[i]-32] + j);
			OLED_write_d(c);
		}
		i++;
	}
}
     648:	df 91       	pop	r29
     64a:	cf 91       	pop	r28
     64c:	08 95       	ret

0000064e <OLED_print_arrow>:

void OLED_print_arrow(uint8_t row, uint8_t col)
{
	OLED_pos(row, col);
     64e:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     652:	e0 e0       	ldi	r30, 0x00	; 0
     654:	f2 e1       	ldi	r31, 0x12	; 18
     656:	88 e1       	ldi	r24, 0x18	; 24
     658:	80 83       	st	Z, r24
     65a:	80 83       	st	Z, r24
     65c:	9e e7       	ldi	r25, 0x7E	; 126
     65e:	90 83       	st	Z, r25
     660:	9c e3       	ldi	r25, 0x3C	; 60
     662:	90 83       	st	Z, r25
     664:	80 83       	st	Z, r24
     666:	08 95       	ret

00000668 <OLED_move_arrow>:
	OLED_write_d(0b00111100);
	OLED_write_d(0b00011000);
}

void OLED_move_arrow(uint8_t newRow, uint8_t newCol, uint8_t currentRow, uint8_t currentCol)
{
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	c8 2f       	mov	r28, r24
     66e:	d6 2f       	mov	r29, r22
     670:	84 2f       	mov	r24, r20
	OLED_pos(currentRow, currentCol);
     672:	62 2f       	mov	r22, r18
     674:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
}

void OLED_write_d(char chr)
{
	volatile char *oled = (char *) 0x1200;
	oled[0] = chr;
     678:	e0 e0       	ldi	r30, 0x00	; 0
     67a:	f2 e1       	ldi	r31, 0x12	; 18
     67c:	10 82       	st	Z, r1
     67e:	10 82       	st	Z, r1
     680:	10 82       	st	Z, r1
     682:	10 82       	st	Z, r1
     684:	10 82       	st	Z, r1
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	OLED_write_d(0b00000000);
	
	OLED_print_arrow(newRow, newCol);
     686:	6d 2f       	mov	r22, r29
     688:	8c 2f       	mov	r24, r28
     68a:	0e 94 27 03 	call	0x64e	; 0x64e <OLED_print_arrow>
}
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <OLED_create_node>:


menuNode *OLED_create_node(char* name, menuNode* parent)
{
     694:	cf 93       	push	r28
     696:	df 93       	push	r29
     698:	ec 01       	movw	r28, r24
	menuNode* ret = (menuNode*) malloc(sizeof(menuNode));
     69a:	84 e1       	ldi	r24, 0x14	; 20
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 c8 05 	call	0xb90	; 0xb90 <malloc>
	ret->name = name;
     6a2:	fc 01       	movw	r30, r24
     6a4:	d1 83       	std	Z+1, r29	; 0x01
     6a6:	c0 83       	st	Z, r28
	ret->parent = NULL;
     6a8:	13 82       	std	Z+3, r1	; 0x03
     6aa:	12 82       	std	Z+2, r1	; 0x02
	return ret;
}
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <OLED_generate_menu>:

// Implement function for freeing memory

menuNode *OLED_generate_menu(void)
{	
     6b2:	af 92       	push	r10
     6b4:	bf 92       	push	r11
     6b6:	cf 92       	push	r12
     6b8:	df 92       	push	r13
     6ba:	ef 92       	push	r14
     6bc:	ff 92       	push	r15
     6be:	0f 93       	push	r16
     6c0:	1f 93       	push	r17
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
	menuNode *mainmenu = OLED_create_node("MAIN MENU", NULL);
     6c6:	60 e0       	ldi	r22, 0x00	; 0
     6c8:	70 e0       	ldi	r23, 0x00	; 0
     6ca:	85 ef       	ldi	r24, 0xF5	; 245
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
     6d2:	ec 01       	movw	r28, r24
	menuNode *highscores = OLED_create_node("Highscores", mainmenu);
     6d4:	bc 01       	movw	r22, r24
     6d6:	8f ef       	ldi	r24, 0xFF	; 255
     6d8:	91 e0       	ldi	r25, 0x01	; 1
     6da:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
     6de:	6c 01       	movw	r12, r24
	menuNode *playgame = OLED_create_node("Start new game", mainmenu);
     6e0:	be 01       	movw	r22, r28
     6e2:	8a e0       	ldi	r24, 0x0A	; 10
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
     6ea:	5c 01       	movw	r10, r24
	menuNode *debugging = OLED_create_node("Debugging", mainmenu);
     6ec:	be 01       	movw	r22, r28
     6ee:	89 e1       	ldi	r24, 0x19	; 25
     6f0:	92 e0       	ldi	r25, 0x02	; 2
     6f2:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
     6f6:	8c 01       	movw	r16, r24
	menuNode *calibrate = OLED_create_node("Calibrate", mainmenu);
     6f8:	be 01       	movw	r22, r28
     6fa:	83 e2       	ldi	r24, 0x23	; 35
     6fc:	92 e0       	ldi	r25, 0x02	; 2
     6fe:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
     702:	7c 01       	movw	r14, r24
	menuNode *difficulty = OLED_create_node("Difficulty", mainmenu);
     704:	be 01       	movw	r22, r28
     706:	8d e2       	ldi	r24, 0x2D	; 45
     708:	92 e0       	ldi	r25, 0x02	; 2
     70a:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_create_node>
	calibrate->parent = mainmenu;
	difficulty->parent = mainmenu;
	debugging->parent = mainmenu;
	*/
	
	mainmenu->children[1] = playgame;
     70e:	bf 82       	std	Y+7, r11	; 0x07
     710:	ae 82       	std	Y+6, r10	; 0x06
	mainmenu->children[2] = highscores;
     712:	d9 86       	std	Y+9, r13	; 0x09
     714:	c8 86       	std	Y+8, r12	; 0x08
	mainmenu->children[3] = difficulty;
     716:	9b 87       	std	Y+11, r25	; 0x0b
     718:	8a 87       	std	Y+10, r24	; 0x0a
	mainmenu->children[4] = calibrate;
     71a:	fd 86       	std	Y+13, r15	; 0x0d
     71c:	ec 86       	std	Y+12, r14	; 0x0c
	mainmenu->children[5] = debugging;
     71e:	1f 87       	std	Y+15, r17	; 0x0f
     720:	0e 87       	std	Y+14, r16	; 0x0e
	
	return mainmenu;
}
     722:	ce 01       	movw	r24, r28
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	ff 90       	pop	r15
     72e:	ef 90       	pop	r14
     730:	df 90       	pop	r13
     732:	cf 90       	pop	r12
     734:	bf 90       	pop	r11
     736:	af 90       	pop	r10
     738:	08 95       	ret

0000073a <OLED_print_menu>:

void OLED_print_menu(menuNode *node)
{
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	ec 01       	movw	r28, r24
	OLED_pos(0,50);
     740:	62 e3       	ldi	r22, 0x32	; 50
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->name);
     748:	88 81       	ld	r24, Y
     74a:	99 81       	ldd	r25, Y+1	; 0x01
     74c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
	//printf("%s\n", node->name);
	OLED_pos(1,50);
     750:	62 e3       	ldi	r22, 0x32	; 50
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->children[1]->name);
     758:	ee 81       	ldd	r30, Y+6	; 0x06
     75a:	ff 81       	ldd	r31, Y+7	; 0x07
     75c:	80 81       	ld	r24, Z
     75e:	91 81       	ldd	r25, Z+1	; 0x01
     760:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
	OLED_pos(2,50);
     764:	62 e3       	ldi	r22, 0x32	; 50
     766:	82 e0       	ldi	r24, 0x02	; 2
     768:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->children[2]->name);
     76c:	e8 85       	ldd	r30, Y+8	; 0x08
     76e:	f9 85       	ldd	r31, Y+9	; 0x09
     770:	80 81       	ld	r24, Z
     772:	91 81       	ldd	r25, Z+1	; 0x01
     774:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
	OLED_pos(3,50);
     778:	62 e3       	ldi	r22, 0x32	; 50
     77a:	83 e0       	ldi	r24, 0x03	; 3
     77c:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->children[3]->name);
     780:	ea 85       	ldd	r30, Y+10	; 0x0a
     782:	fb 85       	ldd	r31, Y+11	; 0x0b
     784:	80 81       	ld	r24, Z
     786:	91 81       	ldd	r25, Z+1	; 0x01
     788:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
	OLED_pos(4,50);
     78c:	62 e3       	ldi	r22, 0x32	; 50
     78e:	84 e0       	ldi	r24, 0x04	; 4
     790:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->children[4]->name);
     794:	ec 85       	ldd	r30, Y+12	; 0x0c
     796:	fd 85       	ldd	r31, Y+13	; 0x0d
     798:	80 81       	ld	r24, Z
     79a:	91 81       	ldd	r25, Z+1	; 0x01
     79c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
	OLED_pos(5,50);
     7a0:	62 e3       	ldi	r22, 0x32	; 50
     7a2:	85 e0       	ldi	r24, 0x05	; 5
     7a4:	0e 94 a9 02 	call	0x552	; 0x552 <OLED_pos>
	OLED_print_string(node->children[5]->name);
     7a8:	ee 85       	ldd	r30, Y+14	; 0x0e
     7aa:	ff 85       	ldd	r31, Y+15	; 0x0f
     7ac:	80 81       	ld	r24, Z
     7ae:	91 81       	ldd	r25, Z+1	; 0x01
     7b0:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <OLED_print_string>
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	08 95       	ret

000007ba <SPI_master_init>:
#include <avr/delay.h>

void SPI_master_init(void)
{
	/* Set ~SS, MOSI and SCK output, all others input */
	DDRB = (1 << PB4)|(1 << PB5)|(1 << PB7);
     7ba:	80 eb       	ldi	r24, 0xB0	; 176
     7bc:	87 bb       	out	0x17, r24	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1 << SPE)|(1 << MSTR)|(1 << SPR0);
     7be:	81 e5       	ldi	r24, 0x51	; 81
     7c0:	8d b9       	out	0x0d, r24	; 13
     7c2:	08 95       	ret

000007c4 <SPI_master_transmit>:
}

void SPI_master_transmit(char cData)
{
	/* Start transmission */
	SPDR = cData;
     7c4:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission to complete */
	while (!(SPSR & (1 << SPIF))) {
     7c6:	77 9b       	sbis	0x0e, 7	; 14
     7c8:	fe cf       	rjmp	.-4      	; 0x7c6 <SPI_master_transmit+0x2>
		;
	}
	
	// Interrupt here?
}
     7ca:	08 95       	ret

000007cc <USART_init>:
#include <avr/io.h>

void USART_init(unsigned int ubrr)
{
	/* Set baud rate*/
	UBRR0H = (unsigned char)(ubrr >> 8 );
     7cc:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     7ce:	89 b9       	out	0x09, r24	; 9
	/*Enable receiver and transmitter*/
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
     7d0:	88 e1       	ldi	r24, 0x18	; 24
     7d2:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ10);
     7d4:	8e e8       	ldi	r24, 0x8E	; 142
     7d6:	80 bd       	out	0x20, r24	; 32
     7d8:	08 95       	ret

000007da <USART_transmit>:
}

void USART_transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while (!( UCSR0A & (1 << UDRE0)))
     7da:	5d 9b       	sbis	0x0b, 5	; 11
     7dc:	fe cf       	rjmp	.-4      	; 0x7da <USART_transmit>
		;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     7de:	8c b9       	out	0x0c, r24	; 12
     7e0:	08 95       	ret

000007e2 <USART_receive>:
}

unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & ( 1 << RXC0)) )
     7e2:	5f 9b       	sbis	0x0b, 7	; 11
     7e4:	fe cf       	rjmp	.-4      	; 0x7e2 <USART_receive>
		;
	/* Get and return received data from buffer */
	return UDR0;
     7e6:	8c b1       	in	r24, 0x0c	; 12
}
     7e8:	08 95       	ret

000007ea <__divsf3>:
     7ea:	0c d0       	rcall	.+24     	; 0x804 <__divsf3x>
     7ec:	eb c0       	rjmp	.+470    	; 0x9c4 <__fp_round>
     7ee:	e3 d0       	rcall	.+454    	; 0x9b6 <__fp_pscB>
     7f0:	40 f0       	brcs	.+16     	; 0x802 <__divsf3+0x18>
     7f2:	da d0       	rcall	.+436    	; 0x9a8 <__fp_pscA>
     7f4:	30 f0       	brcs	.+12     	; 0x802 <__divsf3+0x18>
     7f6:	21 f4       	brne	.+8      	; 0x800 <__divsf3+0x16>
     7f8:	5f 3f       	cpi	r21, 0xFF	; 255
     7fa:	19 f0       	breq	.+6      	; 0x802 <__divsf3+0x18>
     7fc:	cc c0       	rjmp	.+408    	; 0x996 <__fp_inf>
     7fe:	51 11       	cpse	r21, r1
     800:	15 c1       	rjmp	.+554    	; 0xa2c <__fp_szero>
     802:	cf c0       	rjmp	.+414    	; 0x9a2 <__fp_nan>

00000804 <__divsf3x>:
     804:	f0 d0       	rcall	.+480    	; 0x9e6 <__fp_split3>
     806:	98 f3       	brcs	.-26     	; 0x7ee <__divsf3+0x4>

00000808 <__divsf3_pse>:
     808:	99 23       	and	r25, r25
     80a:	c9 f3       	breq	.-14     	; 0x7fe <__divsf3+0x14>
     80c:	55 23       	and	r21, r21
     80e:	b1 f3       	breq	.-20     	; 0x7fc <__divsf3+0x12>
     810:	95 1b       	sub	r25, r21
     812:	55 0b       	sbc	r21, r21
     814:	bb 27       	eor	r27, r27
     816:	aa 27       	eor	r26, r26
     818:	62 17       	cp	r22, r18
     81a:	73 07       	cpc	r23, r19
     81c:	84 07       	cpc	r24, r20
     81e:	38 f0       	brcs	.+14     	; 0x82e <__divsf3_pse+0x26>
     820:	9f 5f       	subi	r25, 0xFF	; 255
     822:	5f 4f       	sbci	r21, 0xFF	; 255
     824:	22 0f       	add	r18, r18
     826:	33 1f       	adc	r19, r19
     828:	44 1f       	adc	r20, r20
     82a:	aa 1f       	adc	r26, r26
     82c:	a9 f3       	breq	.-22     	; 0x818 <__divsf3_pse+0x10>
     82e:	33 d0       	rcall	.+102    	; 0x896 <__divsf3_pse+0x8e>
     830:	0e 2e       	mov	r0, r30
     832:	3a f0       	brmi	.+14     	; 0x842 <__divsf3_pse+0x3a>
     834:	e0 e8       	ldi	r30, 0x80	; 128
     836:	30 d0       	rcall	.+96     	; 0x898 <__divsf3_pse+0x90>
     838:	91 50       	subi	r25, 0x01	; 1
     83a:	50 40       	sbci	r21, 0x00	; 0
     83c:	e6 95       	lsr	r30
     83e:	00 1c       	adc	r0, r0
     840:	ca f7       	brpl	.-14     	; 0x834 <__divsf3_pse+0x2c>
     842:	29 d0       	rcall	.+82     	; 0x896 <__divsf3_pse+0x8e>
     844:	fe 2f       	mov	r31, r30
     846:	27 d0       	rcall	.+78     	; 0x896 <__divsf3_pse+0x8e>
     848:	66 0f       	add	r22, r22
     84a:	77 1f       	adc	r23, r23
     84c:	88 1f       	adc	r24, r24
     84e:	bb 1f       	adc	r27, r27
     850:	26 17       	cp	r18, r22
     852:	37 07       	cpc	r19, r23
     854:	48 07       	cpc	r20, r24
     856:	ab 07       	cpc	r26, r27
     858:	b0 e8       	ldi	r27, 0x80	; 128
     85a:	09 f0       	breq	.+2      	; 0x85e <__divsf3_pse+0x56>
     85c:	bb 0b       	sbc	r27, r27
     85e:	80 2d       	mov	r24, r0
     860:	bf 01       	movw	r22, r30
     862:	ff 27       	eor	r31, r31
     864:	93 58       	subi	r25, 0x83	; 131
     866:	5f 4f       	sbci	r21, 0xFF	; 255
     868:	2a f0       	brmi	.+10     	; 0x874 <__divsf3_pse+0x6c>
     86a:	9e 3f       	cpi	r25, 0xFE	; 254
     86c:	51 05       	cpc	r21, r1
     86e:	68 f0       	brcs	.+26     	; 0x88a <__divsf3_pse+0x82>
     870:	92 c0       	rjmp	.+292    	; 0x996 <__fp_inf>
     872:	dc c0       	rjmp	.+440    	; 0xa2c <__fp_szero>
     874:	5f 3f       	cpi	r21, 0xFF	; 255
     876:	ec f3       	brlt	.-6      	; 0x872 <__divsf3_pse+0x6a>
     878:	98 3e       	cpi	r25, 0xE8	; 232
     87a:	dc f3       	brlt	.-10     	; 0x872 <__divsf3_pse+0x6a>
     87c:	86 95       	lsr	r24
     87e:	77 95       	ror	r23
     880:	67 95       	ror	r22
     882:	b7 95       	ror	r27
     884:	f7 95       	ror	r31
     886:	9f 5f       	subi	r25, 0xFF	; 255
     888:	c9 f7       	brne	.-14     	; 0x87c <__divsf3_pse+0x74>
     88a:	88 0f       	add	r24, r24
     88c:	91 1d       	adc	r25, r1
     88e:	96 95       	lsr	r25
     890:	87 95       	ror	r24
     892:	97 f9       	bld	r25, 7
     894:	08 95       	ret
     896:	e1 e0       	ldi	r30, 0x01	; 1
     898:	66 0f       	add	r22, r22
     89a:	77 1f       	adc	r23, r23
     89c:	88 1f       	adc	r24, r24
     89e:	bb 1f       	adc	r27, r27
     8a0:	62 17       	cp	r22, r18
     8a2:	73 07       	cpc	r23, r19
     8a4:	84 07       	cpc	r24, r20
     8a6:	ba 07       	cpc	r27, r26
     8a8:	20 f0       	brcs	.+8      	; 0x8b2 <__divsf3_pse+0xaa>
     8aa:	62 1b       	sub	r22, r18
     8ac:	73 0b       	sbc	r23, r19
     8ae:	84 0b       	sbc	r24, r20
     8b0:	ba 0b       	sbc	r27, r26
     8b2:	ee 1f       	adc	r30, r30
     8b4:	88 f7       	brcc	.-30     	; 0x898 <__divsf3_pse+0x90>
     8b6:	e0 95       	com	r30
     8b8:	08 95       	ret

000008ba <__fixsfsi>:
     8ba:	04 d0       	rcall	.+8      	; 0x8c4 <__fixunssfsi>
     8bc:	68 94       	set
     8be:	b1 11       	cpse	r27, r1
     8c0:	b5 c0       	rjmp	.+362    	; 0xa2c <__fp_szero>
     8c2:	08 95       	ret

000008c4 <__fixunssfsi>:
     8c4:	98 d0       	rcall	.+304    	; 0x9f6 <__fp_splitA>
     8c6:	88 f0       	brcs	.+34     	; 0x8ea <__fixunssfsi+0x26>
     8c8:	9f 57       	subi	r25, 0x7F	; 127
     8ca:	90 f0       	brcs	.+36     	; 0x8f0 <__fixunssfsi+0x2c>
     8cc:	b9 2f       	mov	r27, r25
     8ce:	99 27       	eor	r25, r25
     8d0:	b7 51       	subi	r27, 0x17	; 23
     8d2:	a0 f0       	brcs	.+40     	; 0x8fc <__fixunssfsi+0x38>
     8d4:	d1 f0       	breq	.+52     	; 0x90a <__fixunssfsi+0x46>
     8d6:	66 0f       	add	r22, r22
     8d8:	77 1f       	adc	r23, r23
     8da:	88 1f       	adc	r24, r24
     8dc:	99 1f       	adc	r25, r25
     8de:	1a f0       	brmi	.+6      	; 0x8e6 <__fixunssfsi+0x22>
     8e0:	ba 95       	dec	r27
     8e2:	c9 f7       	brne	.-14     	; 0x8d6 <__fixunssfsi+0x12>
     8e4:	12 c0       	rjmp	.+36     	; 0x90a <__fixunssfsi+0x46>
     8e6:	b1 30       	cpi	r27, 0x01	; 1
     8e8:	81 f0       	breq	.+32     	; 0x90a <__fixunssfsi+0x46>
     8ea:	9f d0       	rcall	.+318    	; 0xa2a <__fp_zero>
     8ec:	b1 e0       	ldi	r27, 0x01	; 1
     8ee:	08 95       	ret
     8f0:	9c c0       	rjmp	.+312    	; 0xa2a <__fp_zero>
     8f2:	67 2f       	mov	r22, r23
     8f4:	78 2f       	mov	r23, r24
     8f6:	88 27       	eor	r24, r24
     8f8:	b8 5f       	subi	r27, 0xF8	; 248
     8fa:	39 f0       	breq	.+14     	; 0x90a <__fixunssfsi+0x46>
     8fc:	b9 3f       	cpi	r27, 0xF9	; 249
     8fe:	cc f3       	brlt	.-14     	; 0x8f2 <__fixunssfsi+0x2e>
     900:	86 95       	lsr	r24
     902:	77 95       	ror	r23
     904:	67 95       	ror	r22
     906:	b3 95       	inc	r27
     908:	d9 f7       	brne	.-10     	; 0x900 <__fixunssfsi+0x3c>
     90a:	3e f4       	brtc	.+14     	; 0x91a <__fixunssfsi+0x56>
     90c:	90 95       	com	r25
     90e:	80 95       	com	r24
     910:	70 95       	com	r23
     912:	61 95       	neg	r22
     914:	7f 4f       	sbci	r23, 0xFF	; 255
     916:	8f 4f       	sbci	r24, 0xFF	; 255
     918:	9f 4f       	sbci	r25, 0xFF	; 255
     91a:	08 95       	ret

0000091c <__floatunsisf>:
     91c:	e8 94       	clt
     91e:	09 c0       	rjmp	.+18     	; 0x932 <__floatsisf+0x12>

00000920 <__floatsisf>:
     920:	97 fb       	bst	r25, 7
     922:	3e f4       	brtc	.+14     	; 0x932 <__floatsisf+0x12>
     924:	90 95       	com	r25
     926:	80 95       	com	r24
     928:	70 95       	com	r23
     92a:	61 95       	neg	r22
     92c:	7f 4f       	sbci	r23, 0xFF	; 255
     92e:	8f 4f       	sbci	r24, 0xFF	; 255
     930:	9f 4f       	sbci	r25, 0xFF	; 255
     932:	99 23       	and	r25, r25
     934:	a9 f0       	breq	.+42     	; 0x960 <__floatsisf+0x40>
     936:	f9 2f       	mov	r31, r25
     938:	96 e9       	ldi	r25, 0x96	; 150
     93a:	bb 27       	eor	r27, r27
     93c:	93 95       	inc	r25
     93e:	f6 95       	lsr	r31
     940:	87 95       	ror	r24
     942:	77 95       	ror	r23
     944:	67 95       	ror	r22
     946:	b7 95       	ror	r27
     948:	f1 11       	cpse	r31, r1
     94a:	f8 cf       	rjmp	.-16     	; 0x93c <__floatsisf+0x1c>
     94c:	fa f4       	brpl	.+62     	; 0x98c <__floatsisf+0x6c>
     94e:	bb 0f       	add	r27, r27
     950:	11 f4       	brne	.+4      	; 0x956 <__floatsisf+0x36>
     952:	60 ff       	sbrs	r22, 0
     954:	1b c0       	rjmp	.+54     	; 0x98c <__floatsisf+0x6c>
     956:	6f 5f       	subi	r22, 0xFF	; 255
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	8f 4f       	sbci	r24, 0xFF	; 255
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	16 c0       	rjmp	.+44     	; 0x98c <__floatsisf+0x6c>
     960:	88 23       	and	r24, r24
     962:	11 f0       	breq	.+4      	; 0x968 <__floatsisf+0x48>
     964:	96 e9       	ldi	r25, 0x96	; 150
     966:	11 c0       	rjmp	.+34     	; 0x98a <__floatsisf+0x6a>
     968:	77 23       	and	r23, r23
     96a:	21 f0       	breq	.+8      	; 0x974 <__floatsisf+0x54>
     96c:	9e e8       	ldi	r25, 0x8E	; 142
     96e:	87 2f       	mov	r24, r23
     970:	76 2f       	mov	r23, r22
     972:	05 c0       	rjmp	.+10     	; 0x97e <__floatsisf+0x5e>
     974:	66 23       	and	r22, r22
     976:	71 f0       	breq	.+28     	; 0x994 <__floatsisf+0x74>
     978:	96 e8       	ldi	r25, 0x86	; 134
     97a:	86 2f       	mov	r24, r22
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	2a f0       	brmi	.+10     	; 0x98c <__floatsisf+0x6c>
     982:	9a 95       	dec	r25
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	da f7       	brpl	.-10     	; 0x982 <__floatsisf+0x62>
     98c:	88 0f       	add	r24, r24
     98e:	96 95       	lsr	r25
     990:	87 95       	ror	r24
     992:	97 f9       	bld	r25, 7
     994:	08 95       	ret

00000996 <__fp_inf>:
     996:	97 f9       	bld	r25, 7
     998:	9f 67       	ori	r25, 0x7F	; 127
     99a:	80 e8       	ldi	r24, 0x80	; 128
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	08 95       	ret

000009a2 <__fp_nan>:
     9a2:	9f ef       	ldi	r25, 0xFF	; 255
     9a4:	80 ec       	ldi	r24, 0xC0	; 192
     9a6:	08 95       	ret

000009a8 <__fp_pscA>:
     9a8:	00 24       	eor	r0, r0
     9aa:	0a 94       	dec	r0
     9ac:	16 16       	cp	r1, r22
     9ae:	17 06       	cpc	r1, r23
     9b0:	18 06       	cpc	r1, r24
     9b2:	09 06       	cpc	r0, r25
     9b4:	08 95       	ret

000009b6 <__fp_pscB>:
     9b6:	00 24       	eor	r0, r0
     9b8:	0a 94       	dec	r0
     9ba:	12 16       	cp	r1, r18
     9bc:	13 06       	cpc	r1, r19
     9be:	14 06       	cpc	r1, r20
     9c0:	05 06       	cpc	r0, r21
     9c2:	08 95       	ret

000009c4 <__fp_round>:
     9c4:	09 2e       	mov	r0, r25
     9c6:	03 94       	inc	r0
     9c8:	00 0c       	add	r0, r0
     9ca:	11 f4       	brne	.+4      	; 0x9d0 <__fp_round+0xc>
     9cc:	88 23       	and	r24, r24
     9ce:	52 f0       	brmi	.+20     	; 0x9e4 <__fp_round+0x20>
     9d0:	bb 0f       	add	r27, r27
     9d2:	40 f4       	brcc	.+16     	; 0x9e4 <__fp_round+0x20>
     9d4:	bf 2b       	or	r27, r31
     9d6:	11 f4       	brne	.+4      	; 0x9dc <__fp_round+0x18>
     9d8:	60 ff       	sbrs	r22, 0
     9da:	04 c0       	rjmp	.+8      	; 0x9e4 <__fp_round+0x20>
     9dc:	6f 5f       	subi	r22, 0xFF	; 255
     9de:	7f 4f       	sbci	r23, 0xFF	; 255
     9e0:	8f 4f       	sbci	r24, 0xFF	; 255
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	08 95       	ret

000009e6 <__fp_split3>:
     9e6:	57 fd       	sbrc	r21, 7
     9e8:	90 58       	subi	r25, 0x80	; 128
     9ea:	44 0f       	add	r20, r20
     9ec:	55 1f       	adc	r21, r21
     9ee:	59 f0       	breq	.+22     	; 0xa06 <__fp_splitA+0x10>
     9f0:	5f 3f       	cpi	r21, 0xFF	; 255
     9f2:	71 f0       	breq	.+28     	; 0xa10 <__fp_splitA+0x1a>
     9f4:	47 95       	ror	r20

000009f6 <__fp_splitA>:
     9f6:	88 0f       	add	r24, r24
     9f8:	97 fb       	bst	r25, 7
     9fa:	99 1f       	adc	r25, r25
     9fc:	61 f0       	breq	.+24     	; 0xa16 <__fp_splitA+0x20>
     9fe:	9f 3f       	cpi	r25, 0xFF	; 255
     a00:	79 f0       	breq	.+30     	; 0xa20 <__fp_splitA+0x2a>
     a02:	87 95       	ror	r24
     a04:	08 95       	ret
     a06:	12 16       	cp	r1, r18
     a08:	13 06       	cpc	r1, r19
     a0a:	14 06       	cpc	r1, r20
     a0c:	55 1f       	adc	r21, r21
     a0e:	f2 cf       	rjmp	.-28     	; 0x9f4 <__fp_split3+0xe>
     a10:	46 95       	lsr	r20
     a12:	f1 df       	rcall	.-30     	; 0x9f6 <__fp_splitA>
     a14:	08 c0       	rjmp	.+16     	; 0xa26 <__fp_splitA+0x30>
     a16:	16 16       	cp	r1, r22
     a18:	17 06       	cpc	r1, r23
     a1a:	18 06       	cpc	r1, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	f1 cf       	rjmp	.-30     	; 0xa02 <__fp_splitA+0xc>
     a20:	86 95       	lsr	r24
     a22:	71 05       	cpc	r23, r1
     a24:	61 05       	cpc	r22, r1
     a26:	08 94       	sec
     a28:	08 95       	ret

00000a2a <__fp_zero>:
     a2a:	e8 94       	clt

00000a2c <__fp_szero>:
     a2c:	bb 27       	eor	r27, r27
     a2e:	66 27       	eor	r22, r22
     a30:	77 27       	eor	r23, r23
     a32:	cb 01       	movw	r24, r22
     a34:	97 f9       	bld	r25, 7
     a36:	08 95       	ret

00000a38 <__mulsf3>:
     a38:	0b d0       	rcall	.+22     	; 0xa50 <__mulsf3x>
     a3a:	c4 cf       	rjmp	.-120    	; 0x9c4 <__fp_round>
     a3c:	b5 df       	rcall	.-150    	; 0x9a8 <__fp_pscA>
     a3e:	28 f0       	brcs	.+10     	; 0xa4a <__mulsf3+0x12>
     a40:	ba df       	rcall	.-140    	; 0x9b6 <__fp_pscB>
     a42:	18 f0       	brcs	.+6      	; 0xa4a <__mulsf3+0x12>
     a44:	95 23       	and	r25, r21
     a46:	09 f0       	breq	.+2      	; 0xa4a <__mulsf3+0x12>
     a48:	a6 cf       	rjmp	.-180    	; 0x996 <__fp_inf>
     a4a:	ab cf       	rjmp	.-170    	; 0x9a2 <__fp_nan>
     a4c:	11 24       	eor	r1, r1
     a4e:	ee cf       	rjmp	.-36     	; 0xa2c <__fp_szero>

00000a50 <__mulsf3x>:
     a50:	ca df       	rcall	.-108    	; 0x9e6 <__fp_split3>
     a52:	a0 f3       	brcs	.-24     	; 0xa3c <__mulsf3+0x4>

00000a54 <__mulsf3_pse>:
     a54:	95 9f       	mul	r25, r21
     a56:	d1 f3       	breq	.-12     	; 0xa4c <__mulsf3+0x14>
     a58:	95 0f       	add	r25, r21
     a5a:	50 e0       	ldi	r21, 0x00	; 0
     a5c:	55 1f       	adc	r21, r21
     a5e:	62 9f       	mul	r22, r18
     a60:	f0 01       	movw	r30, r0
     a62:	72 9f       	mul	r23, r18
     a64:	bb 27       	eor	r27, r27
     a66:	f0 0d       	add	r31, r0
     a68:	b1 1d       	adc	r27, r1
     a6a:	63 9f       	mul	r22, r19
     a6c:	aa 27       	eor	r26, r26
     a6e:	f0 0d       	add	r31, r0
     a70:	b1 1d       	adc	r27, r1
     a72:	aa 1f       	adc	r26, r26
     a74:	64 9f       	mul	r22, r20
     a76:	66 27       	eor	r22, r22
     a78:	b0 0d       	add	r27, r0
     a7a:	a1 1d       	adc	r26, r1
     a7c:	66 1f       	adc	r22, r22
     a7e:	82 9f       	mul	r24, r18
     a80:	22 27       	eor	r18, r18
     a82:	b0 0d       	add	r27, r0
     a84:	a1 1d       	adc	r26, r1
     a86:	62 1f       	adc	r22, r18
     a88:	73 9f       	mul	r23, r19
     a8a:	b0 0d       	add	r27, r0
     a8c:	a1 1d       	adc	r26, r1
     a8e:	62 1f       	adc	r22, r18
     a90:	83 9f       	mul	r24, r19
     a92:	a0 0d       	add	r26, r0
     a94:	61 1d       	adc	r22, r1
     a96:	22 1f       	adc	r18, r18
     a98:	74 9f       	mul	r23, r20
     a9a:	33 27       	eor	r19, r19
     a9c:	a0 0d       	add	r26, r0
     a9e:	61 1d       	adc	r22, r1
     aa0:	23 1f       	adc	r18, r19
     aa2:	84 9f       	mul	r24, r20
     aa4:	60 0d       	add	r22, r0
     aa6:	21 1d       	adc	r18, r1
     aa8:	82 2f       	mov	r24, r18
     aaa:	76 2f       	mov	r23, r22
     aac:	6a 2f       	mov	r22, r26
     aae:	11 24       	eor	r1, r1
     ab0:	9f 57       	subi	r25, 0x7F	; 127
     ab2:	50 40       	sbci	r21, 0x00	; 0
     ab4:	8a f0       	brmi	.+34     	; 0xad8 <__mulsf3_pse+0x84>
     ab6:	e1 f0       	breq	.+56     	; 0xaf0 <__mulsf3_pse+0x9c>
     ab8:	88 23       	and	r24, r24
     aba:	4a f0       	brmi	.+18     	; 0xace <__mulsf3_pse+0x7a>
     abc:	ee 0f       	add	r30, r30
     abe:	ff 1f       	adc	r31, r31
     ac0:	bb 1f       	adc	r27, r27
     ac2:	66 1f       	adc	r22, r22
     ac4:	77 1f       	adc	r23, r23
     ac6:	88 1f       	adc	r24, r24
     ac8:	91 50       	subi	r25, 0x01	; 1
     aca:	50 40       	sbci	r21, 0x00	; 0
     acc:	a9 f7       	brne	.-22     	; 0xab8 <__mulsf3_pse+0x64>
     ace:	9e 3f       	cpi	r25, 0xFE	; 254
     ad0:	51 05       	cpc	r21, r1
     ad2:	70 f0       	brcs	.+28     	; 0xaf0 <__mulsf3_pse+0x9c>
     ad4:	60 cf       	rjmp	.-320    	; 0x996 <__fp_inf>
     ad6:	aa cf       	rjmp	.-172    	; 0xa2c <__fp_szero>
     ad8:	5f 3f       	cpi	r21, 0xFF	; 255
     ada:	ec f3       	brlt	.-6      	; 0xad6 <__mulsf3_pse+0x82>
     adc:	98 3e       	cpi	r25, 0xE8	; 232
     ade:	dc f3       	brlt	.-10     	; 0xad6 <__mulsf3_pse+0x82>
     ae0:	86 95       	lsr	r24
     ae2:	77 95       	ror	r23
     ae4:	67 95       	ror	r22
     ae6:	b7 95       	ror	r27
     ae8:	f7 95       	ror	r31
     aea:	e7 95       	ror	r30
     aec:	9f 5f       	subi	r25, 0xFF	; 255
     aee:	c1 f7       	brne	.-16     	; 0xae0 <__mulsf3_pse+0x8c>
     af0:	fe 2b       	or	r31, r30
     af2:	88 0f       	add	r24, r24
     af4:	91 1d       	adc	r25, r1
     af6:	96 95       	lsr	r25
     af8:	87 95       	ror	r24
     afa:	97 f9       	bld	r25, 7
     afc:	08 95       	ret

00000afe <round>:
     afe:	7b df       	rcall	.-266    	; 0x9f6 <__fp_splitA>
     b00:	e0 f0       	brcs	.+56     	; 0xb3a <round+0x3c>
     b02:	9e 37       	cpi	r25, 0x7E	; 126
     b04:	d8 f0       	brcs	.+54     	; 0xb3c <round+0x3e>
     b06:	96 39       	cpi	r25, 0x96	; 150
     b08:	b8 f4       	brcc	.+46     	; 0xb38 <round+0x3a>
     b0a:	9e 38       	cpi	r25, 0x8E	; 142
     b0c:	48 f4       	brcc	.+18     	; 0xb20 <round+0x22>
     b0e:	67 2f       	mov	r22, r23
     b10:	78 2f       	mov	r23, r24
     b12:	88 27       	eor	r24, r24
     b14:	98 5f       	subi	r25, 0xF8	; 248
     b16:	f9 cf       	rjmp	.-14     	; 0xb0a <round+0xc>
     b18:	86 95       	lsr	r24
     b1a:	77 95       	ror	r23
     b1c:	67 95       	ror	r22
     b1e:	93 95       	inc	r25
     b20:	95 39       	cpi	r25, 0x95	; 149
     b22:	d0 f3       	brcs	.-12     	; 0xb18 <round+0x1a>
     b24:	b6 2f       	mov	r27, r22
     b26:	b1 70       	andi	r27, 0x01	; 1
     b28:	6b 0f       	add	r22, r27
     b2a:	71 1d       	adc	r23, r1
     b2c:	81 1d       	adc	r24, r1
     b2e:	20 f4       	brcc	.+8      	; 0xb38 <round+0x3a>
     b30:	87 95       	ror	r24
     b32:	77 95       	ror	r23
     b34:	67 95       	ror	r22
     b36:	93 95       	inc	r25
     b38:	02 c0       	rjmp	.+4      	; 0xb3e <__fp_mintl>
     b3a:	1c c0       	rjmp	.+56     	; 0xb74 <__fp_mpack>
     b3c:	77 cf       	rjmp	.-274    	; 0xa2c <__fp_szero>

00000b3e <__fp_mintl>:
     b3e:	88 23       	and	r24, r24
     b40:	71 f4       	brne	.+28     	; 0xb5e <__fp_mintl+0x20>
     b42:	77 23       	and	r23, r23
     b44:	21 f0       	breq	.+8      	; 0xb4e <__fp_mintl+0x10>
     b46:	98 50       	subi	r25, 0x08	; 8
     b48:	87 2b       	or	r24, r23
     b4a:	76 2f       	mov	r23, r22
     b4c:	07 c0       	rjmp	.+14     	; 0xb5c <__fp_mintl+0x1e>
     b4e:	66 23       	and	r22, r22
     b50:	11 f4       	brne	.+4      	; 0xb56 <__fp_mintl+0x18>
     b52:	99 27       	eor	r25, r25
     b54:	0d c0       	rjmp	.+26     	; 0xb70 <__fp_mintl+0x32>
     b56:	90 51       	subi	r25, 0x10	; 16
     b58:	86 2b       	or	r24, r22
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	2a f0       	brmi	.+10     	; 0xb6a <__fp_mintl+0x2c>
     b60:	9a 95       	dec	r25
     b62:	66 0f       	add	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	da f7       	brpl	.-10     	; 0xb60 <__fp_mintl+0x22>
     b6a:	88 0f       	add	r24, r24
     b6c:	96 95       	lsr	r25
     b6e:	87 95       	ror	r24
     b70:	97 f9       	bld	r25, 7
     b72:	08 95       	ret

00000b74 <__fp_mpack>:
     b74:	9f 3f       	cpi	r25, 0xFF	; 255
     b76:	31 f0       	breq	.+12     	; 0xb84 <__fp_mpack_finite+0xc>

00000b78 <__fp_mpack_finite>:
     b78:	91 50       	subi	r25, 0x01	; 1
     b7a:	20 f4       	brcc	.+8      	; 0xb84 <__fp_mpack_finite+0xc>
     b7c:	87 95       	ror	r24
     b7e:	77 95       	ror	r23
     b80:	67 95       	ror	r22
     b82:	b7 95       	ror	r27
     b84:	88 0f       	add	r24, r24
     b86:	91 1d       	adc	r25, r1
     b88:	96 95       	lsr	r25
     b8a:	87 95       	ror	r24
     b8c:	97 f9       	bld	r25, 7
     b8e:	08 95       	ret

00000b90 <malloc>:
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	82 30       	cpi	r24, 0x02	; 2
     b96:	91 05       	cpc	r25, r1
     b98:	10 f4       	brcc	.+4      	; 0xb9e <malloc+0xe>
     b9a:	82 e0       	ldi	r24, 0x02	; 2
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	e0 91 3a 02 	lds	r30, 0x023A
     ba2:	f0 91 3b 02 	lds	r31, 0x023B
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	a0 e0       	ldi	r26, 0x00	; 0
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	30 97       	sbiw	r30, 0x00	; 0
     bb0:	39 f1       	breq	.+78     	; 0xc00 <malloc+0x70>
     bb2:	40 81       	ld	r20, Z
     bb4:	51 81       	ldd	r21, Z+1	; 0x01
     bb6:	48 17       	cp	r20, r24
     bb8:	59 07       	cpc	r21, r25
     bba:	b8 f0       	brcs	.+46     	; 0xbea <malloc+0x5a>
     bbc:	48 17       	cp	r20, r24
     bbe:	59 07       	cpc	r21, r25
     bc0:	71 f4       	brne	.+28     	; 0xbde <malloc+0x4e>
     bc2:	82 81       	ldd	r24, Z+2	; 0x02
     bc4:	93 81       	ldd	r25, Z+3	; 0x03
     bc6:	10 97       	sbiw	r26, 0x00	; 0
     bc8:	29 f0       	breq	.+10     	; 0xbd4 <malloc+0x44>
     bca:	13 96       	adiw	r26, 0x03	; 3
     bcc:	9c 93       	st	X, r25
     bce:	8e 93       	st	-X, r24
     bd0:	12 97       	sbiw	r26, 0x02	; 2
     bd2:	2c c0       	rjmp	.+88     	; 0xc2c <malloc+0x9c>
     bd4:	90 93 3b 02 	sts	0x023B, r25
     bd8:	80 93 3a 02 	sts	0x023A, r24
     bdc:	27 c0       	rjmp	.+78     	; 0xc2c <malloc+0x9c>
     bde:	21 15       	cp	r18, r1
     be0:	31 05       	cpc	r19, r1
     be2:	31 f0       	breq	.+12     	; 0xbf0 <malloc+0x60>
     be4:	42 17       	cp	r20, r18
     be6:	53 07       	cpc	r21, r19
     be8:	18 f0       	brcs	.+6      	; 0xbf0 <malloc+0x60>
     bea:	a9 01       	movw	r20, r18
     bec:	db 01       	movw	r26, r22
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <malloc+0x62>
     bf0:	ef 01       	movw	r28, r30
     bf2:	9a 01       	movw	r18, r20
     bf4:	bd 01       	movw	r22, r26
     bf6:	df 01       	movw	r26, r30
     bf8:	02 80       	ldd	r0, Z+2	; 0x02
     bfa:	f3 81       	ldd	r31, Z+3	; 0x03
     bfc:	e0 2d       	mov	r30, r0
     bfe:	d7 cf       	rjmp	.-82     	; 0xbae <malloc+0x1e>
     c00:	21 15       	cp	r18, r1
     c02:	31 05       	cpc	r19, r1
     c04:	f9 f0       	breq	.+62     	; 0xc44 <malloc+0xb4>
     c06:	28 1b       	sub	r18, r24
     c08:	39 0b       	sbc	r19, r25
     c0a:	24 30       	cpi	r18, 0x04	; 4
     c0c:	31 05       	cpc	r19, r1
     c0e:	80 f4       	brcc	.+32     	; 0xc30 <malloc+0xa0>
     c10:	8a 81       	ldd	r24, Y+2	; 0x02
     c12:	9b 81       	ldd	r25, Y+3	; 0x03
     c14:	61 15       	cp	r22, r1
     c16:	71 05       	cpc	r23, r1
     c18:	21 f0       	breq	.+8      	; 0xc22 <malloc+0x92>
     c1a:	fb 01       	movw	r30, r22
     c1c:	93 83       	std	Z+3, r25	; 0x03
     c1e:	82 83       	std	Z+2, r24	; 0x02
     c20:	04 c0       	rjmp	.+8      	; 0xc2a <malloc+0x9a>
     c22:	90 93 3b 02 	sts	0x023B, r25
     c26:	80 93 3a 02 	sts	0x023A, r24
     c2a:	fe 01       	movw	r30, r28
     c2c:	32 96       	adiw	r30, 0x02	; 2
     c2e:	44 c0       	rjmp	.+136    	; 0xcb8 <malloc+0x128>
     c30:	fe 01       	movw	r30, r28
     c32:	e2 0f       	add	r30, r18
     c34:	f3 1f       	adc	r31, r19
     c36:	81 93       	st	Z+, r24
     c38:	91 93       	st	Z+, r25
     c3a:	22 50       	subi	r18, 0x02	; 2
     c3c:	31 09       	sbc	r19, r1
     c3e:	39 83       	std	Y+1, r19	; 0x01
     c40:	28 83       	st	Y, r18
     c42:	3a c0       	rjmp	.+116    	; 0xcb8 <malloc+0x128>
     c44:	20 91 38 02 	lds	r18, 0x0238
     c48:	30 91 39 02 	lds	r19, 0x0239
     c4c:	23 2b       	or	r18, r19
     c4e:	41 f4       	brne	.+16     	; 0xc60 <malloc+0xd0>
     c50:	20 91 02 01 	lds	r18, 0x0102
     c54:	30 91 03 01 	lds	r19, 0x0103
     c58:	30 93 39 02 	sts	0x0239, r19
     c5c:	20 93 38 02 	sts	0x0238, r18
     c60:	20 91 00 01 	lds	r18, 0x0100
     c64:	30 91 01 01 	lds	r19, 0x0101
     c68:	21 15       	cp	r18, r1
     c6a:	31 05       	cpc	r19, r1
     c6c:	41 f4       	brne	.+16     	; 0xc7e <malloc+0xee>
     c6e:	2d b7       	in	r18, 0x3d	; 61
     c70:	3e b7       	in	r19, 0x3e	; 62
     c72:	40 91 04 01 	lds	r20, 0x0104
     c76:	50 91 05 01 	lds	r21, 0x0105
     c7a:	24 1b       	sub	r18, r20
     c7c:	35 0b       	sbc	r19, r21
     c7e:	e0 91 38 02 	lds	r30, 0x0238
     c82:	f0 91 39 02 	lds	r31, 0x0239
     c86:	e2 17       	cp	r30, r18
     c88:	f3 07       	cpc	r31, r19
     c8a:	a0 f4       	brcc	.+40     	; 0xcb4 <malloc+0x124>
     c8c:	2e 1b       	sub	r18, r30
     c8e:	3f 0b       	sbc	r19, r31
     c90:	28 17       	cp	r18, r24
     c92:	39 07       	cpc	r19, r25
     c94:	78 f0       	brcs	.+30     	; 0xcb4 <malloc+0x124>
     c96:	ac 01       	movw	r20, r24
     c98:	4e 5f       	subi	r20, 0xFE	; 254
     c9a:	5f 4f       	sbci	r21, 0xFF	; 255
     c9c:	24 17       	cp	r18, r20
     c9e:	35 07       	cpc	r19, r21
     ca0:	48 f0       	brcs	.+18     	; 0xcb4 <malloc+0x124>
     ca2:	4e 0f       	add	r20, r30
     ca4:	5f 1f       	adc	r21, r31
     ca6:	50 93 39 02 	sts	0x0239, r21
     caa:	40 93 38 02 	sts	0x0238, r20
     cae:	81 93       	st	Z+, r24
     cb0:	91 93       	st	Z+, r25
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <malloc+0x128>
     cb4:	e0 e0       	ldi	r30, 0x00	; 0
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	cf 01       	movw	r24, r30
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	08 95       	ret

00000cc0 <free>:
     cc0:	cf 93       	push	r28
     cc2:	df 93       	push	r29
     cc4:	00 97       	sbiw	r24, 0x00	; 0
     cc6:	09 f4       	brne	.+2      	; 0xcca <free+0xa>
     cc8:	87 c0       	rjmp	.+270    	; 0xdd8 <free+0x118>
     cca:	fc 01       	movw	r30, r24
     ccc:	32 97       	sbiw	r30, 0x02	; 2
     cce:	13 82       	std	Z+3, r1	; 0x03
     cd0:	12 82       	std	Z+2, r1	; 0x02
     cd2:	c0 91 3a 02 	lds	r28, 0x023A
     cd6:	d0 91 3b 02 	lds	r29, 0x023B
     cda:	20 97       	sbiw	r28, 0x00	; 0
     cdc:	81 f4       	brne	.+32     	; 0xcfe <free+0x3e>
     cde:	20 81       	ld	r18, Z
     ce0:	31 81       	ldd	r19, Z+1	; 0x01
     ce2:	28 0f       	add	r18, r24
     ce4:	39 1f       	adc	r19, r25
     ce6:	80 91 38 02 	lds	r24, 0x0238
     cea:	90 91 39 02 	lds	r25, 0x0239
     cee:	82 17       	cp	r24, r18
     cf0:	93 07       	cpc	r25, r19
     cf2:	79 f5       	brne	.+94     	; 0xd52 <free+0x92>
     cf4:	f0 93 39 02 	sts	0x0239, r31
     cf8:	e0 93 38 02 	sts	0x0238, r30
     cfc:	6d c0       	rjmp	.+218    	; 0xdd8 <free+0x118>
     cfe:	de 01       	movw	r26, r28
     d00:	20 e0       	ldi	r18, 0x00	; 0
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	ae 17       	cp	r26, r30
     d06:	bf 07       	cpc	r27, r31
     d08:	50 f4       	brcc	.+20     	; 0xd1e <free+0x5e>
     d0a:	12 96       	adiw	r26, 0x02	; 2
     d0c:	4d 91       	ld	r20, X+
     d0e:	5c 91       	ld	r21, X
     d10:	13 97       	sbiw	r26, 0x03	; 3
     d12:	9d 01       	movw	r18, r26
     d14:	41 15       	cp	r20, r1
     d16:	51 05       	cpc	r21, r1
     d18:	09 f1       	breq	.+66     	; 0xd5c <free+0x9c>
     d1a:	da 01       	movw	r26, r20
     d1c:	f3 cf       	rjmp	.-26     	; 0xd04 <free+0x44>
     d1e:	b3 83       	std	Z+3, r27	; 0x03
     d20:	a2 83       	std	Z+2, r26	; 0x02
     d22:	40 81       	ld	r20, Z
     d24:	51 81       	ldd	r21, Z+1	; 0x01
     d26:	84 0f       	add	r24, r20
     d28:	95 1f       	adc	r25, r21
     d2a:	8a 17       	cp	r24, r26
     d2c:	9b 07       	cpc	r25, r27
     d2e:	71 f4       	brne	.+28     	; 0xd4c <free+0x8c>
     d30:	8d 91       	ld	r24, X+
     d32:	9c 91       	ld	r25, X
     d34:	11 97       	sbiw	r26, 0x01	; 1
     d36:	84 0f       	add	r24, r20
     d38:	95 1f       	adc	r25, r21
     d3a:	02 96       	adiw	r24, 0x02	; 2
     d3c:	91 83       	std	Z+1, r25	; 0x01
     d3e:	80 83       	st	Z, r24
     d40:	12 96       	adiw	r26, 0x02	; 2
     d42:	8d 91       	ld	r24, X+
     d44:	9c 91       	ld	r25, X
     d46:	13 97       	sbiw	r26, 0x03	; 3
     d48:	93 83       	std	Z+3, r25	; 0x03
     d4a:	82 83       	std	Z+2, r24	; 0x02
     d4c:	21 15       	cp	r18, r1
     d4e:	31 05       	cpc	r19, r1
     d50:	29 f4       	brne	.+10     	; 0xd5c <free+0x9c>
     d52:	f0 93 3b 02 	sts	0x023B, r31
     d56:	e0 93 3a 02 	sts	0x023A, r30
     d5a:	3e c0       	rjmp	.+124    	; 0xdd8 <free+0x118>
     d5c:	d9 01       	movw	r26, r18
     d5e:	13 96       	adiw	r26, 0x03	; 3
     d60:	fc 93       	st	X, r31
     d62:	ee 93       	st	-X, r30
     d64:	12 97       	sbiw	r26, 0x02	; 2
     d66:	4d 91       	ld	r20, X+
     d68:	5d 91       	ld	r21, X+
     d6a:	a4 0f       	add	r26, r20
     d6c:	b5 1f       	adc	r27, r21
     d6e:	ea 17       	cp	r30, r26
     d70:	fb 07       	cpc	r31, r27
     d72:	79 f4       	brne	.+30     	; 0xd92 <free+0xd2>
     d74:	80 81       	ld	r24, Z
     d76:	91 81       	ldd	r25, Z+1	; 0x01
     d78:	84 0f       	add	r24, r20
     d7a:	95 1f       	adc	r25, r21
     d7c:	02 96       	adiw	r24, 0x02	; 2
     d7e:	d9 01       	movw	r26, r18
     d80:	11 96       	adiw	r26, 0x01	; 1
     d82:	9c 93       	st	X, r25
     d84:	8e 93       	st	-X, r24
     d86:	82 81       	ldd	r24, Z+2	; 0x02
     d88:	93 81       	ldd	r25, Z+3	; 0x03
     d8a:	13 96       	adiw	r26, 0x03	; 3
     d8c:	9c 93       	st	X, r25
     d8e:	8e 93       	st	-X, r24
     d90:	12 97       	sbiw	r26, 0x02	; 2
     d92:	e0 e0       	ldi	r30, 0x00	; 0
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	9b 81       	ldd	r25, Y+3	; 0x03
     d9a:	00 97       	sbiw	r24, 0x00	; 0
     d9c:	19 f0       	breq	.+6      	; 0xda4 <free+0xe4>
     d9e:	fe 01       	movw	r30, r28
     da0:	ec 01       	movw	r28, r24
     da2:	f9 cf       	rjmp	.-14     	; 0xd96 <free+0xd6>
     da4:	ce 01       	movw	r24, r28
     da6:	02 96       	adiw	r24, 0x02	; 2
     da8:	28 81       	ld	r18, Y
     daa:	39 81       	ldd	r19, Y+1	; 0x01
     dac:	82 0f       	add	r24, r18
     dae:	93 1f       	adc	r25, r19
     db0:	20 91 38 02 	lds	r18, 0x0238
     db4:	30 91 39 02 	lds	r19, 0x0239
     db8:	28 17       	cp	r18, r24
     dba:	39 07       	cpc	r19, r25
     dbc:	69 f4       	brne	.+26     	; 0xdd8 <free+0x118>
     dbe:	30 97       	sbiw	r30, 0x00	; 0
     dc0:	29 f4       	brne	.+10     	; 0xdcc <free+0x10c>
     dc2:	10 92 3b 02 	sts	0x023B, r1
     dc6:	10 92 3a 02 	sts	0x023A, r1
     dca:	02 c0       	rjmp	.+4      	; 0xdd0 <free+0x110>
     dcc:	13 82       	std	Z+3, r1	; 0x03
     dce:	12 82       	std	Z+2, r1	; 0x02
     dd0:	d0 93 39 02 	sts	0x0239, r29
     dd4:	c0 93 38 02 	sts	0x0238, r28
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <fdevopen>:
     dde:	0f 93       	push	r16
     de0:	1f 93       	push	r17
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	ec 01       	movw	r28, r24
     de8:	8b 01       	movw	r16, r22
     dea:	00 97       	sbiw	r24, 0x00	; 0
     dec:	31 f4       	brne	.+12     	; 0xdfa <fdevopen+0x1c>
     dee:	61 15       	cp	r22, r1
     df0:	71 05       	cpc	r23, r1
     df2:	19 f4       	brne	.+6      	; 0xdfa <fdevopen+0x1c>
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	38 c0       	rjmp	.+112    	; 0xe6a <fdevopen+0x8c>
     dfa:	6e e0       	ldi	r22, 0x0E	; 14
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 20 09 	call	0x1240	; 0x1240 <calloc>
     e06:	fc 01       	movw	r30, r24
     e08:	00 97       	sbiw	r24, 0x00	; 0
     e0a:	a1 f3       	breq	.-24     	; 0xdf4 <fdevopen+0x16>
     e0c:	80 e8       	ldi	r24, 0x80	; 128
     e0e:	83 83       	std	Z+3, r24	; 0x03
     e10:	01 15       	cp	r16, r1
     e12:	11 05       	cpc	r17, r1
     e14:	71 f0       	breq	.+28     	; 0xe32 <fdevopen+0x54>
     e16:	13 87       	std	Z+11, r17	; 0x0b
     e18:	02 87       	std	Z+10, r16	; 0x0a
     e1a:	81 e8       	ldi	r24, 0x81	; 129
     e1c:	83 83       	std	Z+3, r24	; 0x03
     e1e:	80 91 3c 02 	lds	r24, 0x023C
     e22:	90 91 3d 02 	lds	r25, 0x023D
     e26:	89 2b       	or	r24, r25
     e28:	21 f4       	brne	.+8      	; 0xe32 <fdevopen+0x54>
     e2a:	f0 93 3d 02 	sts	0x023D, r31
     e2e:	e0 93 3c 02 	sts	0x023C, r30
     e32:	20 97       	sbiw	r28, 0x00	; 0
     e34:	c9 f0       	breq	.+50     	; 0xe68 <fdevopen+0x8a>
     e36:	d1 87       	std	Z+9, r29	; 0x09
     e38:	c0 87       	std	Z+8, r28	; 0x08
     e3a:	83 81       	ldd	r24, Z+3	; 0x03
     e3c:	82 60       	ori	r24, 0x02	; 2
     e3e:	83 83       	std	Z+3, r24	; 0x03
     e40:	80 91 3e 02 	lds	r24, 0x023E
     e44:	90 91 3f 02 	lds	r25, 0x023F
     e48:	89 2b       	or	r24, r25
     e4a:	71 f4       	brne	.+28     	; 0xe68 <fdevopen+0x8a>
     e4c:	f0 93 3f 02 	sts	0x023F, r31
     e50:	e0 93 3e 02 	sts	0x023E, r30
     e54:	80 91 40 02 	lds	r24, 0x0240
     e58:	90 91 41 02 	lds	r25, 0x0241
     e5c:	89 2b       	or	r24, r25
     e5e:	21 f4       	brne	.+8      	; 0xe68 <fdevopen+0x8a>
     e60:	f0 93 41 02 	sts	0x0241, r31
     e64:	e0 93 40 02 	sts	0x0240, r30
     e68:	cf 01       	movw	r24, r30
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	08 95       	ret

00000e74 <printf>:
     e74:	a0 e0       	ldi	r26, 0x00	; 0
     e76:	b0 e0       	ldi	r27, 0x00	; 0
     e78:	e0 e4       	ldi	r30, 0x40	; 64
     e7a:	f7 e0       	ldi	r31, 0x07	; 7
     e7c:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__prologue_saves__+0x20>
     e80:	fe 01       	movw	r30, r28
     e82:	35 96       	adiw	r30, 0x05	; 5
     e84:	61 91       	ld	r22, Z+
     e86:	71 91       	ld	r23, Z+
     e88:	af 01       	movw	r20, r30
     e8a:	80 91 3e 02 	lds	r24, 0x023E
     e8e:	90 91 3f 02 	lds	r25, 0x023F
     e92:	0e 94 4e 07 	call	0xe9c	; 0xe9c <vfprintf>
     e96:	e2 e0       	ldi	r30, 0x02	; 2
     e98:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__epilogue_restores__+0x20>

00000e9c <vfprintf>:
     e9c:	ac e0       	ldi	r26, 0x0C	; 12
     e9e:	b0 e0       	ldi	r27, 0x00	; 0
     ea0:	e4 e5       	ldi	r30, 0x54	; 84
     ea2:	f7 e0       	ldi	r31, 0x07	; 7
     ea4:	0c 94 e9 09 	jmp	0x13d2	; 0x13d2 <__prologue_saves__>
     ea8:	7c 01       	movw	r14, r24
     eaa:	6b 01       	movw	r12, r22
     eac:	8a 01       	movw	r16, r20
     eae:	fc 01       	movw	r30, r24
     eb0:	17 82       	std	Z+7, r1	; 0x07
     eb2:	16 82       	std	Z+6, r1	; 0x06
     eb4:	83 81       	ldd	r24, Z+3	; 0x03
     eb6:	81 ff       	sbrs	r24, 1
     eb8:	bd c1       	rjmp	.+890    	; 0x1234 <vfprintf+0x398>
     eba:	ce 01       	movw	r24, r28
     ebc:	01 96       	adiw	r24, 0x01	; 1
     ebe:	4c 01       	movw	r8, r24
     ec0:	f7 01       	movw	r30, r14
     ec2:	93 81       	ldd	r25, Z+3	; 0x03
     ec4:	f6 01       	movw	r30, r12
     ec6:	93 fd       	sbrc	r25, 3
     ec8:	85 91       	lpm	r24, Z+
     eca:	93 ff       	sbrs	r25, 3
     ecc:	81 91       	ld	r24, Z+
     ece:	6f 01       	movw	r12, r30
     ed0:	88 23       	and	r24, r24
     ed2:	09 f4       	brne	.+2      	; 0xed6 <vfprintf+0x3a>
     ed4:	ab c1       	rjmp	.+854    	; 0x122c <vfprintf+0x390>
     ed6:	85 32       	cpi	r24, 0x25	; 37
     ed8:	39 f4       	brne	.+14     	; 0xee8 <vfprintf+0x4c>
     eda:	93 fd       	sbrc	r25, 3
     edc:	85 91       	lpm	r24, Z+
     ede:	93 ff       	sbrs	r25, 3
     ee0:	81 91       	ld	r24, Z+
     ee2:	6f 01       	movw	r12, r30
     ee4:	85 32       	cpi	r24, 0x25	; 37
     ee6:	29 f4       	brne	.+10     	; 0xef2 <vfprintf+0x56>
     ee8:	b7 01       	movw	r22, r14
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
     ef0:	e7 cf       	rjmp	.-50     	; 0xec0 <vfprintf+0x24>
     ef2:	51 2c       	mov	r5, r1
     ef4:	31 2c       	mov	r3, r1
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	20 32       	cpi	r18, 0x20	; 32
     efa:	a0 f4       	brcc	.+40     	; 0xf24 <vfprintf+0x88>
     efc:	8b 32       	cpi	r24, 0x2B	; 43
     efe:	69 f0       	breq	.+26     	; 0xf1a <vfprintf+0x7e>
     f00:	30 f4       	brcc	.+12     	; 0xf0e <vfprintf+0x72>
     f02:	80 32       	cpi	r24, 0x20	; 32
     f04:	59 f0       	breq	.+22     	; 0xf1c <vfprintf+0x80>
     f06:	83 32       	cpi	r24, 0x23	; 35
     f08:	69 f4       	brne	.+26     	; 0xf24 <vfprintf+0x88>
     f0a:	20 61       	ori	r18, 0x10	; 16
     f0c:	2c c0       	rjmp	.+88     	; 0xf66 <vfprintf+0xca>
     f0e:	8d 32       	cpi	r24, 0x2D	; 45
     f10:	39 f0       	breq	.+14     	; 0xf20 <vfprintf+0x84>
     f12:	80 33       	cpi	r24, 0x30	; 48
     f14:	39 f4       	brne	.+14     	; 0xf24 <vfprintf+0x88>
     f16:	21 60       	ori	r18, 0x01	; 1
     f18:	26 c0       	rjmp	.+76     	; 0xf66 <vfprintf+0xca>
     f1a:	22 60       	ori	r18, 0x02	; 2
     f1c:	24 60       	ori	r18, 0x04	; 4
     f1e:	23 c0       	rjmp	.+70     	; 0xf66 <vfprintf+0xca>
     f20:	28 60       	ori	r18, 0x08	; 8
     f22:	21 c0       	rjmp	.+66     	; 0xf66 <vfprintf+0xca>
     f24:	27 fd       	sbrc	r18, 7
     f26:	27 c0       	rjmp	.+78     	; 0xf76 <vfprintf+0xda>
     f28:	30 ed       	ldi	r19, 0xD0	; 208
     f2a:	38 0f       	add	r19, r24
     f2c:	3a 30       	cpi	r19, 0x0A	; 10
     f2e:	78 f4       	brcc	.+30     	; 0xf4e <vfprintf+0xb2>
     f30:	26 ff       	sbrs	r18, 6
     f32:	06 c0       	rjmp	.+12     	; 0xf40 <vfprintf+0xa4>
     f34:	fa e0       	ldi	r31, 0x0A	; 10
     f36:	5f 9e       	mul	r5, r31
     f38:	30 0d       	add	r19, r0
     f3a:	11 24       	eor	r1, r1
     f3c:	53 2e       	mov	r5, r19
     f3e:	13 c0       	rjmp	.+38     	; 0xf66 <vfprintf+0xca>
     f40:	8a e0       	ldi	r24, 0x0A	; 10
     f42:	38 9e       	mul	r3, r24
     f44:	30 0d       	add	r19, r0
     f46:	11 24       	eor	r1, r1
     f48:	33 2e       	mov	r3, r19
     f4a:	20 62       	ori	r18, 0x20	; 32
     f4c:	0c c0       	rjmp	.+24     	; 0xf66 <vfprintf+0xca>
     f4e:	8e 32       	cpi	r24, 0x2E	; 46
     f50:	21 f4       	brne	.+8      	; 0xf5a <vfprintf+0xbe>
     f52:	26 fd       	sbrc	r18, 6
     f54:	6b c1       	rjmp	.+726    	; 0x122c <vfprintf+0x390>
     f56:	20 64       	ori	r18, 0x40	; 64
     f58:	06 c0       	rjmp	.+12     	; 0xf66 <vfprintf+0xca>
     f5a:	8c 36       	cpi	r24, 0x6C	; 108
     f5c:	11 f4       	brne	.+4      	; 0xf62 <vfprintf+0xc6>
     f5e:	20 68       	ori	r18, 0x80	; 128
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <vfprintf+0xca>
     f62:	88 36       	cpi	r24, 0x68	; 104
     f64:	41 f4       	brne	.+16     	; 0xf76 <vfprintf+0xda>
     f66:	f6 01       	movw	r30, r12
     f68:	93 fd       	sbrc	r25, 3
     f6a:	85 91       	lpm	r24, Z+
     f6c:	93 ff       	sbrs	r25, 3
     f6e:	81 91       	ld	r24, Z+
     f70:	6f 01       	movw	r12, r30
     f72:	81 11       	cpse	r24, r1
     f74:	c1 cf       	rjmp	.-126    	; 0xef8 <vfprintf+0x5c>
     f76:	98 2f       	mov	r25, r24
     f78:	9f 7d       	andi	r25, 0xDF	; 223
     f7a:	95 54       	subi	r25, 0x45	; 69
     f7c:	93 30       	cpi	r25, 0x03	; 3
     f7e:	28 f4       	brcc	.+10     	; 0xf8a <vfprintf+0xee>
     f80:	0c 5f       	subi	r16, 0xFC	; 252
     f82:	1f 4f       	sbci	r17, 0xFF	; 255
     f84:	ff e3       	ldi	r31, 0x3F	; 63
     f86:	f9 83       	std	Y+1, r31	; 0x01
     f88:	0d c0       	rjmp	.+26     	; 0xfa4 <vfprintf+0x108>
     f8a:	83 36       	cpi	r24, 0x63	; 99
     f8c:	31 f0       	breq	.+12     	; 0xf9a <vfprintf+0xfe>
     f8e:	83 37       	cpi	r24, 0x73	; 115
     f90:	71 f0       	breq	.+28     	; 0xfae <vfprintf+0x112>
     f92:	83 35       	cpi	r24, 0x53	; 83
     f94:	09 f0       	breq	.+2      	; 0xf98 <vfprintf+0xfc>
     f96:	5b c0       	rjmp	.+182    	; 0x104e <vfprintf+0x1b2>
     f98:	22 c0       	rjmp	.+68     	; 0xfde <vfprintf+0x142>
     f9a:	f8 01       	movw	r30, r16
     f9c:	80 81       	ld	r24, Z
     f9e:	89 83       	std	Y+1, r24	; 0x01
     fa0:	0e 5f       	subi	r16, 0xFE	; 254
     fa2:	1f 4f       	sbci	r17, 0xFF	; 255
     fa4:	44 24       	eor	r4, r4
     fa6:	43 94       	inc	r4
     fa8:	51 2c       	mov	r5, r1
     faa:	54 01       	movw	r10, r8
     fac:	15 c0       	rjmp	.+42     	; 0xfd8 <vfprintf+0x13c>
     fae:	38 01       	movw	r6, r16
     fb0:	f2 e0       	ldi	r31, 0x02	; 2
     fb2:	6f 0e       	add	r6, r31
     fb4:	71 1c       	adc	r7, r1
     fb6:	f8 01       	movw	r30, r16
     fb8:	a0 80       	ld	r10, Z
     fba:	b1 80       	ldd	r11, Z+1	; 0x01
     fbc:	26 ff       	sbrs	r18, 6
     fbe:	03 c0       	rjmp	.+6      	; 0xfc6 <vfprintf+0x12a>
     fc0:	65 2d       	mov	r22, r5
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <vfprintf+0x12e>
     fc6:	6f ef       	ldi	r22, 0xFF	; 255
     fc8:	7f ef       	ldi	r23, 0xFF	; 255
     fca:	c5 01       	movw	r24, r10
     fcc:	2c 87       	std	Y+12, r18	; 0x0c
     fce:	0e 94 4e 09 	call	0x129c	; 0x129c <strnlen>
     fd2:	2c 01       	movw	r4, r24
     fd4:	83 01       	movw	r16, r6
     fd6:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd8:	2f 77       	andi	r18, 0x7F	; 127
     fda:	22 2e       	mov	r2, r18
     fdc:	17 c0       	rjmp	.+46     	; 0x100c <vfprintf+0x170>
     fde:	38 01       	movw	r6, r16
     fe0:	f2 e0       	ldi	r31, 0x02	; 2
     fe2:	6f 0e       	add	r6, r31
     fe4:	71 1c       	adc	r7, r1
     fe6:	f8 01       	movw	r30, r16
     fe8:	a0 80       	ld	r10, Z
     fea:	b1 80       	ldd	r11, Z+1	; 0x01
     fec:	26 ff       	sbrs	r18, 6
     fee:	03 c0       	rjmp	.+6      	; 0xff6 <vfprintf+0x15a>
     ff0:	65 2d       	mov	r22, r5
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <vfprintf+0x15e>
     ff6:	6f ef       	ldi	r22, 0xFF	; 255
     ff8:	7f ef       	ldi	r23, 0xFF	; 255
     ffa:	c5 01       	movw	r24, r10
     ffc:	2c 87       	std	Y+12, r18	; 0x0c
     ffe:	0e 94 3c 09 	call	0x1278	; 0x1278 <strnlen_P>
    1002:	2c 01       	movw	r4, r24
    1004:	2c 85       	ldd	r18, Y+12	; 0x0c
    1006:	20 68       	ori	r18, 0x80	; 128
    1008:	22 2e       	mov	r2, r18
    100a:	83 01       	movw	r16, r6
    100c:	23 fc       	sbrc	r2, 3
    100e:	1b c0       	rjmp	.+54     	; 0x1046 <vfprintf+0x1aa>
    1010:	83 2d       	mov	r24, r3
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	48 16       	cp	r4, r24
    1016:	59 06       	cpc	r5, r25
    1018:	b0 f4       	brcc	.+44     	; 0x1046 <vfprintf+0x1aa>
    101a:	b7 01       	movw	r22, r14
    101c:	80 e2       	ldi	r24, 0x20	; 32
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    1024:	3a 94       	dec	r3
    1026:	f4 cf       	rjmp	.-24     	; 0x1010 <vfprintf+0x174>
    1028:	f5 01       	movw	r30, r10
    102a:	27 fc       	sbrc	r2, 7
    102c:	85 91       	lpm	r24, Z+
    102e:	27 fe       	sbrs	r2, 7
    1030:	81 91       	ld	r24, Z+
    1032:	5f 01       	movw	r10, r30
    1034:	b7 01       	movw	r22, r14
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    103c:	31 10       	cpse	r3, r1
    103e:	3a 94       	dec	r3
    1040:	f1 e0       	ldi	r31, 0x01	; 1
    1042:	4f 1a       	sub	r4, r31
    1044:	51 08       	sbc	r5, r1
    1046:	41 14       	cp	r4, r1
    1048:	51 04       	cpc	r5, r1
    104a:	71 f7       	brne	.-36     	; 0x1028 <vfprintf+0x18c>
    104c:	e5 c0       	rjmp	.+458    	; 0x1218 <vfprintf+0x37c>
    104e:	84 36       	cpi	r24, 0x64	; 100
    1050:	11 f0       	breq	.+4      	; 0x1056 <vfprintf+0x1ba>
    1052:	89 36       	cpi	r24, 0x69	; 105
    1054:	39 f5       	brne	.+78     	; 0x10a4 <vfprintf+0x208>
    1056:	f8 01       	movw	r30, r16
    1058:	27 ff       	sbrs	r18, 7
    105a:	07 c0       	rjmp	.+14     	; 0x106a <vfprintf+0x1ce>
    105c:	60 81       	ld	r22, Z
    105e:	71 81       	ldd	r23, Z+1	; 0x01
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	0c 5f       	subi	r16, 0xFC	; 252
    1066:	1f 4f       	sbci	r17, 0xFF	; 255
    1068:	08 c0       	rjmp	.+16     	; 0x107a <vfprintf+0x1de>
    106a:	60 81       	ld	r22, Z
    106c:	71 81       	ldd	r23, Z+1	; 0x01
    106e:	88 27       	eor	r24, r24
    1070:	77 fd       	sbrc	r23, 7
    1072:	80 95       	com	r24
    1074:	98 2f       	mov	r25, r24
    1076:	0e 5f       	subi	r16, 0xFE	; 254
    1078:	1f 4f       	sbci	r17, 0xFF	; 255
    107a:	2f 76       	andi	r18, 0x6F	; 111
    107c:	b2 2e       	mov	r11, r18
    107e:	97 ff       	sbrs	r25, 7
    1080:	09 c0       	rjmp	.+18     	; 0x1094 <vfprintf+0x1f8>
    1082:	90 95       	com	r25
    1084:	80 95       	com	r24
    1086:	70 95       	com	r23
    1088:	61 95       	neg	r22
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	20 68       	ori	r18, 0x80	; 128
    1092:	b2 2e       	mov	r11, r18
    1094:	2a e0       	ldi	r18, 0x0A	; 10
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	a4 01       	movw	r20, r8
    109a:	0e 94 8b 09 	call	0x1316	; 0x1316 <__ultoa_invert>
    109e:	a8 2e       	mov	r10, r24
    10a0:	a8 18       	sub	r10, r8
    10a2:	44 c0       	rjmp	.+136    	; 0x112c <vfprintf+0x290>
    10a4:	85 37       	cpi	r24, 0x75	; 117
    10a6:	29 f4       	brne	.+10     	; 0x10b2 <vfprintf+0x216>
    10a8:	2f 7e       	andi	r18, 0xEF	; 239
    10aa:	b2 2e       	mov	r11, r18
    10ac:	2a e0       	ldi	r18, 0x0A	; 10
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	25 c0       	rjmp	.+74     	; 0x10fc <vfprintf+0x260>
    10b2:	f2 2f       	mov	r31, r18
    10b4:	f9 7f       	andi	r31, 0xF9	; 249
    10b6:	bf 2e       	mov	r11, r31
    10b8:	8f 36       	cpi	r24, 0x6F	; 111
    10ba:	c1 f0       	breq	.+48     	; 0x10ec <vfprintf+0x250>
    10bc:	18 f4       	brcc	.+6      	; 0x10c4 <vfprintf+0x228>
    10be:	88 35       	cpi	r24, 0x58	; 88
    10c0:	79 f0       	breq	.+30     	; 0x10e0 <vfprintf+0x244>
    10c2:	b4 c0       	rjmp	.+360    	; 0x122c <vfprintf+0x390>
    10c4:	80 37       	cpi	r24, 0x70	; 112
    10c6:	19 f0       	breq	.+6      	; 0x10ce <vfprintf+0x232>
    10c8:	88 37       	cpi	r24, 0x78	; 120
    10ca:	21 f0       	breq	.+8      	; 0x10d4 <vfprintf+0x238>
    10cc:	af c0       	rjmp	.+350    	; 0x122c <vfprintf+0x390>
    10ce:	2f 2f       	mov	r18, r31
    10d0:	20 61       	ori	r18, 0x10	; 16
    10d2:	b2 2e       	mov	r11, r18
    10d4:	b4 fe       	sbrs	r11, 4
    10d6:	0d c0       	rjmp	.+26     	; 0x10f2 <vfprintf+0x256>
    10d8:	8b 2d       	mov	r24, r11
    10da:	84 60       	ori	r24, 0x04	; 4
    10dc:	b8 2e       	mov	r11, r24
    10de:	09 c0       	rjmp	.+18     	; 0x10f2 <vfprintf+0x256>
    10e0:	24 ff       	sbrs	r18, 4
    10e2:	0a c0       	rjmp	.+20     	; 0x10f8 <vfprintf+0x25c>
    10e4:	9f 2f       	mov	r25, r31
    10e6:	96 60       	ori	r25, 0x06	; 6
    10e8:	b9 2e       	mov	r11, r25
    10ea:	06 c0       	rjmp	.+12     	; 0x10f8 <vfprintf+0x25c>
    10ec:	28 e0       	ldi	r18, 0x08	; 8
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	05 c0       	rjmp	.+10     	; 0x10fc <vfprintf+0x260>
    10f2:	20 e1       	ldi	r18, 0x10	; 16
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <vfprintf+0x260>
    10f8:	20 e1       	ldi	r18, 0x10	; 16
    10fa:	32 e0       	ldi	r19, 0x02	; 2
    10fc:	f8 01       	movw	r30, r16
    10fe:	b7 fe       	sbrs	r11, 7
    1100:	07 c0       	rjmp	.+14     	; 0x1110 <vfprintf+0x274>
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	82 81       	ldd	r24, Z+2	; 0x02
    1108:	93 81       	ldd	r25, Z+3	; 0x03
    110a:	0c 5f       	subi	r16, 0xFC	; 252
    110c:	1f 4f       	sbci	r17, 0xFF	; 255
    110e:	06 c0       	rjmp	.+12     	; 0x111c <vfprintf+0x280>
    1110:	60 81       	ld	r22, Z
    1112:	71 81       	ldd	r23, Z+1	; 0x01
    1114:	80 e0       	ldi	r24, 0x00	; 0
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 5f       	subi	r16, 0xFE	; 254
    111a:	1f 4f       	sbci	r17, 0xFF	; 255
    111c:	a4 01       	movw	r20, r8
    111e:	0e 94 8b 09 	call	0x1316	; 0x1316 <__ultoa_invert>
    1122:	a8 2e       	mov	r10, r24
    1124:	a8 18       	sub	r10, r8
    1126:	fb 2d       	mov	r31, r11
    1128:	ff 77       	andi	r31, 0x7F	; 127
    112a:	bf 2e       	mov	r11, r31
    112c:	b6 fe       	sbrs	r11, 6
    112e:	0b c0       	rjmp	.+22     	; 0x1146 <vfprintf+0x2aa>
    1130:	2b 2d       	mov	r18, r11
    1132:	2e 7f       	andi	r18, 0xFE	; 254
    1134:	a5 14       	cp	r10, r5
    1136:	50 f4       	brcc	.+20     	; 0x114c <vfprintf+0x2b0>
    1138:	b4 fe       	sbrs	r11, 4
    113a:	0a c0       	rjmp	.+20     	; 0x1150 <vfprintf+0x2b4>
    113c:	b2 fc       	sbrc	r11, 2
    113e:	08 c0       	rjmp	.+16     	; 0x1150 <vfprintf+0x2b4>
    1140:	2b 2d       	mov	r18, r11
    1142:	2e 7e       	andi	r18, 0xEE	; 238
    1144:	05 c0       	rjmp	.+10     	; 0x1150 <vfprintf+0x2b4>
    1146:	7a 2c       	mov	r7, r10
    1148:	2b 2d       	mov	r18, r11
    114a:	03 c0       	rjmp	.+6      	; 0x1152 <vfprintf+0x2b6>
    114c:	7a 2c       	mov	r7, r10
    114e:	01 c0       	rjmp	.+2      	; 0x1152 <vfprintf+0x2b6>
    1150:	75 2c       	mov	r7, r5
    1152:	24 ff       	sbrs	r18, 4
    1154:	0d c0       	rjmp	.+26     	; 0x1170 <vfprintf+0x2d4>
    1156:	fe 01       	movw	r30, r28
    1158:	ea 0d       	add	r30, r10
    115a:	f1 1d       	adc	r31, r1
    115c:	80 81       	ld	r24, Z
    115e:	80 33       	cpi	r24, 0x30	; 48
    1160:	11 f4       	brne	.+4      	; 0x1166 <vfprintf+0x2ca>
    1162:	29 7e       	andi	r18, 0xE9	; 233
    1164:	09 c0       	rjmp	.+18     	; 0x1178 <vfprintf+0x2dc>
    1166:	22 ff       	sbrs	r18, 2
    1168:	06 c0       	rjmp	.+12     	; 0x1176 <vfprintf+0x2da>
    116a:	73 94       	inc	r7
    116c:	73 94       	inc	r7
    116e:	04 c0       	rjmp	.+8      	; 0x1178 <vfprintf+0x2dc>
    1170:	82 2f       	mov	r24, r18
    1172:	86 78       	andi	r24, 0x86	; 134
    1174:	09 f0       	breq	.+2      	; 0x1178 <vfprintf+0x2dc>
    1176:	73 94       	inc	r7
    1178:	23 fd       	sbrc	r18, 3
    117a:	13 c0       	rjmp	.+38     	; 0x11a2 <vfprintf+0x306>
    117c:	20 ff       	sbrs	r18, 0
    117e:	06 c0       	rjmp	.+12     	; 0x118c <vfprintf+0x2f0>
    1180:	5a 2c       	mov	r5, r10
    1182:	73 14       	cp	r7, r3
    1184:	18 f4       	brcc	.+6      	; 0x118c <vfprintf+0x2f0>
    1186:	53 0c       	add	r5, r3
    1188:	57 18       	sub	r5, r7
    118a:	73 2c       	mov	r7, r3
    118c:	73 14       	cp	r7, r3
    118e:	68 f4       	brcc	.+26     	; 0x11aa <vfprintf+0x30e>
    1190:	b7 01       	movw	r22, r14
    1192:	80 e2       	ldi	r24, 0x20	; 32
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	2c 87       	std	Y+12, r18	; 0x0c
    1198:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    119c:	73 94       	inc	r7
    119e:	2c 85       	ldd	r18, Y+12	; 0x0c
    11a0:	f5 cf       	rjmp	.-22     	; 0x118c <vfprintf+0x2f0>
    11a2:	73 14       	cp	r7, r3
    11a4:	10 f4       	brcc	.+4      	; 0x11aa <vfprintf+0x30e>
    11a6:	37 18       	sub	r3, r7
    11a8:	01 c0       	rjmp	.+2      	; 0x11ac <vfprintf+0x310>
    11aa:	31 2c       	mov	r3, r1
    11ac:	24 ff       	sbrs	r18, 4
    11ae:	12 c0       	rjmp	.+36     	; 0x11d4 <vfprintf+0x338>
    11b0:	b7 01       	movw	r22, r14
    11b2:	80 e3       	ldi	r24, 0x30	; 48
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	2c 87       	std	Y+12, r18	; 0x0c
    11b8:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    11bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    11be:	22 ff       	sbrs	r18, 2
    11c0:	17 c0       	rjmp	.+46     	; 0x11f0 <vfprintf+0x354>
    11c2:	21 ff       	sbrs	r18, 1
    11c4:	03 c0       	rjmp	.+6      	; 0x11cc <vfprintf+0x330>
    11c6:	88 e5       	ldi	r24, 0x58	; 88
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <vfprintf+0x334>
    11cc:	88 e7       	ldi	r24, 0x78	; 120
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	b7 01       	movw	r22, r14
    11d2:	0c c0       	rjmp	.+24     	; 0x11ec <vfprintf+0x350>
    11d4:	82 2f       	mov	r24, r18
    11d6:	86 78       	andi	r24, 0x86	; 134
    11d8:	59 f0       	breq	.+22     	; 0x11f0 <vfprintf+0x354>
    11da:	21 fd       	sbrc	r18, 1
    11dc:	02 c0       	rjmp	.+4      	; 0x11e2 <vfprintf+0x346>
    11de:	80 e2       	ldi	r24, 0x20	; 32
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <vfprintf+0x348>
    11e2:	8b e2       	ldi	r24, 0x2B	; 43
    11e4:	27 fd       	sbrc	r18, 7
    11e6:	8d e2       	ldi	r24, 0x2D	; 45
    11e8:	b7 01       	movw	r22, r14
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    11f0:	a5 14       	cp	r10, r5
    11f2:	38 f4       	brcc	.+14     	; 0x1202 <vfprintf+0x366>
    11f4:	b7 01       	movw	r22, r14
    11f6:	80 e3       	ldi	r24, 0x30	; 48
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    11fe:	5a 94       	dec	r5
    1200:	f7 cf       	rjmp	.-18     	; 0x11f0 <vfprintf+0x354>
    1202:	aa 94       	dec	r10
    1204:	f4 01       	movw	r30, r8
    1206:	ea 0d       	add	r30, r10
    1208:	f1 1d       	adc	r31, r1
    120a:	80 81       	ld	r24, Z
    120c:	b7 01       	movw	r22, r14
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    1214:	a1 10       	cpse	r10, r1
    1216:	f5 cf       	rjmp	.-22     	; 0x1202 <vfprintf+0x366>
    1218:	33 20       	and	r3, r3
    121a:	09 f4       	brne	.+2      	; 0x121e <vfprintf+0x382>
    121c:	51 ce       	rjmp	.-862    	; 0xec0 <vfprintf+0x24>
    121e:	b7 01       	movw	r22, r14
    1220:	80 e2       	ldi	r24, 0x20	; 32
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	0e 94 59 09 	call	0x12b2	; 0x12b2 <fputc>
    1228:	3a 94       	dec	r3
    122a:	f6 cf       	rjmp	.-20     	; 0x1218 <vfprintf+0x37c>
    122c:	f7 01       	movw	r30, r14
    122e:	86 81       	ldd	r24, Z+6	; 0x06
    1230:	97 81       	ldd	r25, Z+7	; 0x07
    1232:	02 c0       	rjmp	.+4      	; 0x1238 <vfprintf+0x39c>
    1234:	8f ef       	ldi	r24, 0xFF	; 255
    1236:	9f ef       	ldi	r25, 0xFF	; 255
    1238:	2c 96       	adiw	r28, 0x0c	; 12
    123a:	e2 e1       	ldi	r30, 0x12	; 18
    123c:	0c 94 05 0a 	jmp	0x140a	; 0x140a <__epilogue_restores__>

00001240 <calloc>:
    1240:	0f 93       	push	r16
    1242:	1f 93       	push	r17
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	86 9f       	mul	r24, r22
    124a:	80 01       	movw	r16, r0
    124c:	87 9f       	mul	r24, r23
    124e:	10 0d       	add	r17, r0
    1250:	96 9f       	mul	r25, r22
    1252:	10 0d       	add	r17, r0
    1254:	11 24       	eor	r1, r1
    1256:	c8 01       	movw	r24, r16
    1258:	0e 94 c8 05 	call	0xb90	; 0xb90 <malloc>
    125c:	ec 01       	movw	r28, r24
    125e:	00 97       	sbiw	r24, 0x00	; 0
    1260:	29 f0       	breq	.+10     	; 0x126c <calloc+0x2c>
    1262:	a8 01       	movw	r20, r16
    1264:	60 e0       	ldi	r22, 0x00	; 0
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	0e 94 47 09 	call	0x128e	; 0x128e <memset>
    126c:	ce 01       	movw	r24, r28
    126e:	df 91       	pop	r29
    1270:	cf 91       	pop	r28
    1272:	1f 91       	pop	r17
    1274:	0f 91       	pop	r16
    1276:	08 95       	ret

00001278 <strnlen_P>:
    1278:	fc 01       	movw	r30, r24
    127a:	05 90       	lpm	r0, Z+
    127c:	61 50       	subi	r22, 0x01	; 1
    127e:	70 40       	sbci	r23, 0x00	; 0
    1280:	01 10       	cpse	r0, r1
    1282:	d8 f7       	brcc	.-10     	; 0x127a <strnlen_P+0x2>
    1284:	80 95       	com	r24
    1286:	90 95       	com	r25
    1288:	8e 0f       	add	r24, r30
    128a:	9f 1f       	adc	r25, r31
    128c:	08 95       	ret

0000128e <memset>:
    128e:	dc 01       	movw	r26, r24
    1290:	01 c0       	rjmp	.+2      	; 0x1294 <memset+0x6>
    1292:	6d 93       	st	X+, r22
    1294:	41 50       	subi	r20, 0x01	; 1
    1296:	50 40       	sbci	r21, 0x00	; 0
    1298:	e0 f7       	brcc	.-8      	; 0x1292 <memset+0x4>
    129a:	08 95       	ret

0000129c <strnlen>:
    129c:	fc 01       	movw	r30, r24
    129e:	61 50       	subi	r22, 0x01	; 1
    12a0:	70 40       	sbci	r23, 0x00	; 0
    12a2:	01 90       	ld	r0, Z+
    12a4:	01 10       	cpse	r0, r1
    12a6:	d8 f7       	brcc	.-10     	; 0x129e <strnlen+0x2>
    12a8:	80 95       	com	r24
    12aa:	90 95       	com	r25
    12ac:	8e 0f       	add	r24, r30
    12ae:	9f 1f       	adc	r25, r31
    12b0:	08 95       	ret

000012b2 <fputc>:
    12b2:	0f 93       	push	r16
    12b4:	1f 93       	push	r17
    12b6:	cf 93       	push	r28
    12b8:	df 93       	push	r29
    12ba:	18 2f       	mov	r17, r24
    12bc:	09 2f       	mov	r16, r25
    12be:	eb 01       	movw	r28, r22
    12c0:	8b 81       	ldd	r24, Y+3	; 0x03
    12c2:	81 fd       	sbrc	r24, 1
    12c4:	03 c0       	rjmp	.+6      	; 0x12cc <fputc+0x1a>
    12c6:	8f ef       	ldi	r24, 0xFF	; 255
    12c8:	9f ef       	ldi	r25, 0xFF	; 255
    12ca:	20 c0       	rjmp	.+64     	; 0x130c <fputc+0x5a>
    12cc:	82 ff       	sbrs	r24, 2
    12ce:	10 c0       	rjmp	.+32     	; 0x12f0 <fputc+0x3e>
    12d0:	4e 81       	ldd	r20, Y+6	; 0x06
    12d2:	5f 81       	ldd	r21, Y+7	; 0x07
    12d4:	2c 81       	ldd	r18, Y+4	; 0x04
    12d6:	3d 81       	ldd	r19, Y+5	; 0x05
    12d8:	42 17       	cp	r20, r18
    12da:	53 07       	cpc	r21, r19
    12dc:	7c f4       	brge	.+30     	; 0x12fc <fputc+0x4a>
    12de:	e8 81       	ld	r30, Y
    12e0:	f9 81       	ldd	r31, Y+1	; 0x01
    12e2:	9f 01       	movw	r18, r30
    12e4:	2f 5f       	subi	r18, 0xFF	; 255
    12e6:	3f 4f       	sbci	r19, 0xFF	; 255
    12e8:	39 83       	std	Y+1, r19	; 0x01
    12ea:	28 83       	st	Y, r18
    12ec:	10 83       	st	Z, r17
    12ee:	06 c0       	rjmp	.+12     	; 0x12fc <fputc+0x4a>
    12f0:	e8 85       	ldd	r30, Y+8	; 0x08
    12f2:	f9 85       	ldd	r31, Y+9	; 0x09
    12f4:	81 2f       	mov	r24, r17
    12f6:	09 95       	icall
    12f8:	89 2b       	or	r24, r25
    12fa:	29 f7       	brne	.-54     	; 0x12c6 <fputc+0x14>
    12fc:	2e 81       	ldd	r18, Y+6	; 0x06
    12fe:	3f 81       	ldd	r19, Y+7	; 0x07
    1300:	2f 5f       	subi	r18, 0xFF	; 255
    1302:	3f 4f       	sbci	r19, 0xFF	; 255
    1304:	3f 83       	std	Y+7, r19	; 0x07
    1306:	2e 83       	std	Y+6, r18	; 0x06
    1308:	81 2f       	mov	r24, r17
    130a:	90 2f       	mov	r25, r16
    130c:	df 91       	pop	r29
    130e:	cf 91       	pop	r28
    1310:	1f 91       	pop	r17
    1312:	0f 91       	pop	r16
    1314:	08 95       	ret

00001316 <__ultoa_invert>:
    1316:	fa 01       	movw	r30, r20
    1318:	aa 27       	eor	r26, r26
    131a:	28 30       	cpi	r18, 0x08	; 8
    131c:	51 f1       	breq	.+84     	; 0x1372 <__ultoa_invert+0x5c>
    131e:	20 31       	cpi	r18, 0x10	; 16
    1320:	81 f1       	breq	.+96     	; 0x1382 <__ultoa_invert+0x6c>
    1322:	e8 94       	clt
    1324:	6f 93       	push	r22
    1326:	6e 7f       	andi	r22, 0xFE	; 254
    1328:	6e 5f       	subi	r22, 0xFE	; 254
    132a:	7f 4f       	sbci	r23, 0xFF	; 255
    132c:	8f 4f       	sbci	r24, 0xFF	; 255
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	af 4f       	sbci	r26, 0xFF	; 255
    1332:	b1 e0       	ldi	r27, 0x01	; 1
    1334:	3e d0       	rcall	.+124    	; 0x13b2 <__ultoa_invert+0x9c>
    1336:	b4 e0       	ldi	r27, 0x04	; 4
    1338:	3c d0       	rcall	.+120    	; 0x13b2 <__ultoa_invert+0x9c>
    133a:	67 0f       	add	r22, r23
    133c:	78 1f       	adc	r23, r24
    133e:	89 1f       	adc	r24, r25
    1340:	9a 1f       	adc	r25, r26
    1342:	a1 1d       	adc	r26, r1
    1344:	68 0f       	add	r22, r24
    1346:	79 1f       	adc	r23, r25
    1348:	8a 1f       	adc	r24, r26
    134a:	91 1d       	adc	r25, r1
    134c:	a1 1d       	adc	r26, r1
    134e:	6a 0f       	add	r22, r26
    1350:	71 1d       	adc	r23, r1
    1352:	81 1d       	adc	r24, r1
    1354:	91 1d       	adc	r25, r1
    1356:	a1 1d       	adc	r26, r1
    1358:	20 d0       	rcall	.+64     	; 0x139a <__ultoa_invert+0x84>
    135a:	09 f4       	brne	.+2      	; 0x135e <__ultoa_invert+0x48>
    135c:	68 94       	set
    135e:	3f 91       	pop	r19
    1360:	2a e0       	ldi	r18, 0x0A	; 10
    1362:	26 9f       	mul	r18, r22
    1364:	11 24       	eor	r1, r1
    1366:	30 19       	sub	r19, r0
    1368:	30 5d       	subi	r19, 0xD0	; 208
    136a:	31 93       	st	Z+, r19
    136c:	de f6       	brtc	.-74     	; 0x1324 <__ultoa_invert+0xe>
    136e:	cf 01       	movw	r24, r30
    1370:	08 95       	ret
    1372:	46 2f       	mov	r20, r22
    1374:	47 70       	andi	r20, 0x07	; 7
    1376:	40 5d       	subi	r20, 0xD0	; 208
    1378:	41 93       	st	Z+, r20
    137a:	b3 e0       	ldi	r27, 0x03	; 3
    137c:	0f d0       	rcall	.+30     	; 0x139c <__ultoa_invert+0x86>
    137e:	c9 f7       	brne	.-14     	; 0x1372 <__ultoa_invert+0x5c>
    1380:	f6 cf       	rjmp	.-20     	; 0x136e <__ultoa_invert+0x58>
    1382:	46 2f       	mov	r20, r22
    1384:	4f 70       	andi	r20, 0x0F	; 15
    1386:	40 5d       	subi	r20, 0xD0	; 208
    1388:	4a 33       	cpi	r20, 0x3A	; 58
    138a:	18 f0       	brcs	.+6      	; 0x1392 <__ultoa_invert+0x7c>
    138c:	49 5d       	subi	r20, 0xD9	; 217
    138e:	31 fd       	sbrc	r19, 1
    1390:	40 52       	subi	r20, 0x20	; 32
    1392:	41 93       	st	Z+, r20
    1394:	02 d0       	rcall	.+4      	; 0x139a <__ultoa_invert+0x84>
    1396:	a9 f7       	brne	.-22     	; 0x1382 <__ultoa_invert+0x6c>
    1398:	ea cf       	rjmp	.-44     	; 0x136e <__ultoa_invert+0x58>
    139a:	b4 e0       	ldi	r27, 0x04	; 4
    139c:	a6 95       	lsr	r26
    139e:	97 95       	ror	r25
    13a0:	87 95       	ror	r24
    13a2:	77 95       	ror	r23
    13a4:	67 95       	ror	r22
    13a6:	ba 95       	dec	r27
    13a8:	c9 f7       	brne	.-14     	; 0x139c <__ultoa_invert+0x86>
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	61 05       	cpc	r22, r1
    13ae:	71 05       	cpc	r23, r1
    13b0:	08 95       	ret
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	0a 2e       	mov	r0, r26
    13b8:	06 94       	lsr	r0
    13ba:	57 95       	ror	r21
    13bc:	47 95       	ror	r20
    13be:	37 95       	ror	r19
    13c0:	27 95       	ror	r18
    13c2:	ba 95       	dec	r27
    13c4:	c9 f7       	brne	.-14     	; 0x13b8 <__ultoa_invert+0xa2>
    13c6:	62 0f       	add	r22, r18
    13c8:	73 1f       	adc	r23, r19
    13ca:	84 1f       	adc	r24, r20
    13cc:	95 1f       	adc	r25, r21
    13ce:	a0 1d       	adc	r26, r0
    13d0:	08 95       	ret

000013d2 <__prologue_saves__>:
    13d2:	2f 92       	push	r2
    13d4:	3f 92       	push	r3
    13d6:	4f 92       	push	r4
    13d8:	5f 92       	push	r5
    13da:	6f 92       	push	r6
    13dc:	7f 92       	push	r7
    13de:	8f 92       	push	r8
    13e0:	9f 92       	push	r9
    13e2:	af 92       	push	r10
    13e4:	bf 92       	push	r11
    13e6:	cf 92       	push	r12
    13e8:	df 92       	push	r13
    13ea:	ef 92       	push	r14
    13ec:	ff 92       	push	r15
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	cd b7       	in	r28, 0x3d	; 61
    13f8:	de b7       	in	r29, 0x3e	; 62
    13fa:	ca 1b       	sub	r28, r26
    13fc:	db 0b       	sbc	r29, r27
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	f8 94       	cli
    1402:	de bf       	out	0x3e, r29	; 62
    1404:	0f be       	out	0x3f, r0	; 63
    1406:	cd bf       	out	0x3d, r28	; 61
    1408:	09 94       	ijmp

0000140a <__epilogue_restores__>:
    140a:	2a 88       	ldd	r2, Y+18	; 0x12
    140c:	39 88       	ldd	r3, Y+17	; 0x11
    140e:	48 88       	ldd	r4, Y+16	; 0x10
    1410:	5f 84       	ldd	r5, Y+15	; 0x0f
    1412:	6e 84       	ldd	r6, Y+14	; 0x0e
    1414:	7d 84       	ldd	r7, Y+13	; 0x0d
    1416:	8c 84       	ldd	r8, Y+12	; 0x0c
    1418:	9b 84       	ldd	r9, Y+11	; 0x0b
    141a:	aa 84       	ldd	r10, Y+10	; 0x0a
    141c:	b9 84       	ldd	r11, Y+9	; 0x09
    141e:	c8 84       	ldd	r12, Y+8	; 0x08
    1420:	df 80       	ldd	r13, Y+7	; 0x07
    1422:	ee 80       	ldd	r14, Y+6	; 0x06
    1424:	fd 80       	ldd	r15, Y+5	; 0x05
    1426:	0c 81       	ldd	r16, Y+4	; 0x04
    1428:	1b 81       	ldd	r17, Y+3	; 0x03
    142a:	aa 81       	ldd	r26, Y+2	; 0x02
    142c:	b9 81       	ldd	r27, Y+1	; 0x01
    142e:	ce 0f       	add	r28, r30
    1430:	d1 1d       	adc	r29, r1
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	de bf       	out	0x3e, r29	; 62
    1438:	0f be       	out	0x3f, r0	; 63
    143a:	cd bf       	out	0x3d, r28	; 61
    143c:	ed 01       	movw	r28, r26
    143e:	08 95       	ret

00001440 <_exit>:
    1440:	f8 94       	cli

00001442 <__stop_program>:
    1442:	ff cf       	rjmp	.-2      	; 0x1442 <__stop_program>
